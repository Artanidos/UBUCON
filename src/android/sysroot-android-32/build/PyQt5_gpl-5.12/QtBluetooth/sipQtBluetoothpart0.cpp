/*
 * Module code.
 *
 * Generated by SIP 4.19.15
 *
 * Copyright (c) 2019 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtBluetooth.h"

#line 28 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 29 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetooth.sip"
#include <qbluetooth.h>
#line 32 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothdevicediscoveryagent.sip"
#include <qbluetoothdevicediscoveryagent.h>
#line 35 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothdeviceinfo.sip"
#include <qbluetoothdeviceinfo.h>
#line 38 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergycharacteristic.sip"
#include <qlowenergycharacteristic.h>
#line 41 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergyservice.sip"
#include <qlowenergyservice.h>
#line 44 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 26 "sip/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 47 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 50 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 247 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 53 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 235 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 56 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 26 "sip/QtCore/qiodevice.sip"
#include <qiodevice.h>
#line 59 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothtransferreply.sip"
#include <qbluetoothtransferreply.h>
#line 62 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 65 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 26 "sip/QtCore/qdatastream.sip"
#include <qdatastream.h>
#line 68 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothuuid.sip"
#include <qbluetoothuuid.h>
#line 71 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetooth.sip"
#include <qbluetooth.h>
#line 74 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetooth.sip"
#include <qbluetooth.h>
#line 77 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothaddress.sip"
#include <qbluetoothaddress.h>
#line 80 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothdevicediscoveryagent.sip"
#include <qbluetoothdevicediscoveryagent.h>
#line 83 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothdeviceinfo.sip"
#include <qbluetoothdeviceinfo.h>
#line 86 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothdeviceinfo.sip"
#include <qbluetoothdeviceinfo.h>
#line 89 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothdeviceinfo.sip"
#include <qbluetoothdeviceinfo.h>
#line 92 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothhostinfo.sip"
#include <qbluetoothhostinfo.h>
#line 95 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothserviceinfo.sip"
#include <qbluetoothserviceinfo.h>
#line 98 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothtransferrequest.sip"
#include <qbluetoothtransferrequest.h>
#line 101 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergyadvertisingdata.sip"
#include <qlowenergyadvertisingdata.h>
#line 104 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergyadvertisingparameters.sip"
#include <qlowenergyadvertisingparameters.h>
#line 107 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergyadvertisingparameters.sip"
#include <qlowenergyadvertisingparameters.h>
#line 49 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergyadvertisingparameters.sip"
#include <qlowenergyadvertisingparameters.h>
#line 112 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergycharacteristic.sip"
#include <qlowenergycharacteristic.h>
#line 115 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergycharacteristicdata.sip"
#include <qlowenergycharacteristicdata.h>
#line 118 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergyconnectionparameters.sip"
#include <qlowenergyconnectionparameters.h>
#line 121 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergydescriptor.sip"
#include <qlowenergydescriptor.h>
#line 124 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergydescriptordata.sip"
#include <qlowenergydescriptordata.h>
#line 127 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergyservice.sip"
#include <qlowenergyservice.h>
#line 130 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergyservicedata.sip"
#include <qlowenergyservicedata.h>
#line 133 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

/* Define the strings used by this module. */
const char sipStrings_QtBluetooth[] = {
    'Q', 'L', 'i', 's', 't', '<', 'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'A', 'd', 'v', 'e', 'r', 't', 'i', 's', 'i', 'n', 'g', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 's', ':', ':', 'A', 'd', 'd', 'r', 'e', 's', 's', 'I', 'n', 'f', 'o', '>', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'y', 'A', 'g', 'e', 'n', 't', ':', ':', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'y', 'M', 'e', 't', 'h', 'o', 'd', 's', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'y', 'A', 'g', 'e', 'n', 't', ':', ':', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'y', 'M', 'e', 't', 'h', 'o', 'd', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'y', 'A', 'g', 'e', 'n', 't', ':', ':', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'y', 'M', 'o', 'd', 'e', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'A', 'd', 'v', 'e', 'r', 't', 'i', 's', 'i', 'n', 'g', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 's', ':', ':', 'F', 'i', 'l', 't', 'e', 'r', 'P', 'o', 'l', 'i', 'c', 'y', 0,
    'I', 'E', 'E', 'E', '1', '1', '0', '7', '3', '2', '0', '6', '0', '1', 'R', 'e', 'g', 'u', 'l', 'a', 't', 'o', 'r', 'y', 'C', 'e', 'r', 't', 'i', 'f', 'i', 'c', 'a', 't', 'i', 'o', 'n', 'D', 'a', 't', 'a', 'L', 'i', 's', 't', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', ':', ':', 'M', 'i', 'n', 'o', 'r', 'M', 'i', 's', 'c', 'e', 'l', 'l', 'a', 'n', 'e', 'o', 'u', 's', 'C', 'l', 'a', 's', 's', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'A', 'd', 'v', 'e', 'r', 't', 'i', 's', 'i', 'n', 'g', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 's', ':', ':', 'A', 'd', 'd', 'r', 'e', 's', 's', 'I', 'n', 'f', 'o', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'y', 'A', 'g', 'e', 'n', 't', ':', ':', 'I', 'n', 'q', 'u', 'i', 'r', 'y', 'T', 'y', 'p', 'e', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'A', 'd', 'v', 'e', 'r', 't', 'i', 's', 'i', 'n', 'g', 'D', 'a', 't', 'a', ':', ':', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'a', 'b', 'i', 'l', 'i', 't', 'y', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', ':', ':', 'M', 'i', 'n', 'o', 'r', 'P', 'e', 'r', 'i', 'p', 'h', 'e', 'r', 'a', 'l', 'C', 'l', 'a', 's', 's', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', ':', ':', 'M', 'i', 'n', 'o', 'r', 'A', 'u', 'd', 'i', 'o', 'V', 'i', 'd', 'e', 'o', 'C', 'l', 'a', 's', 's', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', ':', ':', 'C', 'o', 'r', 'e', 'C', 'o', 'n', 'f', 'i', 'g', 'u', 'r', 'a', 't', 'i', 'o', 'n', 's', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', ':', ':', 'M', 'i', 'n', 'o', 'r', 'W', 'e', 'a', 'r', 'a', 'b', 'l', 'e', 'C', 'l', 'a', 's', 's', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', ':', ':', 'M', 'i', 'n', 'o', 'r', 'C', 'o', 'm', 'p', 'u', 't', 'e', 'r', 'C', 'l', 'a', 's', 's', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'l', 'e', 'r', ':', ':', 'R', 'e', 'm', 'o', 't', 'e', 'A', 'd', 'd', 'r', 'e', 's', 's', 'T', 'y', 'p', 'e', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', ':', ':', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 'T', 'y', 'p', 'e', 's', 0,
    'P', 'e', 'r', 'i', 'p', 'h', 'e', 'r', 'a', 'l', 'P', 'r', 'e', 'f', 'e', 'r', 'r', 'e', 'd', 'C', 'o', 'n', 'n', 'e', 'c', 't', 'i', 'o', 'n', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 's', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', ':', ':', 'C', 'o', 'r', 'e', 'C', 'o', 'n', 'f', 'i', 'g', 'u', 'r', 'a', 't', 'i', 'o', 'n', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', ':', ':', 'M', 'i', 'n', 'o', 'r', 'I', 'm', 'a', 'g', 'i', 'n', 'g', 'C', 'l', 'a', 's', 's', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', ':', ':', 'M', 'i', 'n', 'o', 'r', 'N', 'e', 't', 'w', 'o', 'r', 'k', 'C', 'l', 'a', 's', 's', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', ':', ':', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 'T', 'y', 'p', 'e', 0,
    'S', 'p', 'o', 'r', 't', 'T', 'y', 'p', 'e', 'F', 'o', 'r', 'A', 'e', 'r', 'o', 'b', 'i', 'c', 'A', 'n', 'a', 'e', 'r', 'o', 'b', 'i', 'c', 'T', 'h', 'r', 'e', 's', 'h', 'o', 'l', 'd', 's', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'T', 'r', 'a', 'n', 's', 'f', 'e', 'r', 'R', 'e', 'p', 'l', 'y', ':', ':', 'T', 'r', 'a', 'n', 's', 'f', 'e', 'r', 'E', 'r', 'r', 'o', 'r', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'y', 'A', 'g', 'e', 'n', 't', ':', ':', 'E', 'r', 'r', 'o', 'r', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', ':', ':', 'D', 'a', 't', 'a', 'C', 'o', 'm', 'p', 'l', 'e', 't', 'e', 'n', 'e', 's', 's', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', ':', ':', 'M', 'i', 'n', 'o', 'r', 'H', 'e', 'a', 'l', 't', 'h', 'C', 'l', 'a', 's', 's', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', ':', ':', 'M', 'a', 'j', 'o', 'r', 'D', 'e', 'v', 'i', 'c', 'e', 'C', 'l', 'a', 's', 's', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'l', 'e', 'r', ':', ':', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'l', 'e', 'r', 'S', 't', 'a', 't', 'e', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'A', 'd', 'v', 'e', 'r', 't', 'i', 's', 'i', 'n', 'g', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 's', ':', ':', 'M', 'o', 'd', 'e', 0,
    'D', 'i', 'r', 'e', 'c', 't', 'P', 'r', 'i', 'n', 't', 'i', 'n', 'g', 'R', 'e', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 'O', 'b', 'j', 'e', 'c', 't', 's', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'B', 'a', 's', 'e', 'R', 'a', 't', 'e', 'A', 'n', 'd', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'C', 'o', 'r', 'e', 'C', 'o', 'n', 'f', 'i', 'g', 'u', 'r', 'a', 't', 'i', 'o', 'n', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', ':', ':', 'M', 'i', 'n', 'o', 'r', 'P', 'h', 'o', 'n', 'e', 'C', 'l', 'a', 's', 's', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'y', 'A', 'g', 'e', 'n', 't', ':', ':', 'E', 'r', 'r', 'o', 'r', 0,
    'U', 's', 'e', 'W', 'h', 'i', 't', 'e', 'L', 'i', 's', 't', 'F', 'o', 'r', 'S', 'c', 'a', 'n', 'n', 'i', 'n', 'g', 'A', 'n', 'd', 'C', 'o', 'n', 'n', 'e', 'c', 't', 'i', 'n', 'g', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'T', 'r', 'a', 'n', 's', 'f', 'e', 'r', 'R', 'e', 'q', 'u', 'e', 's', 't', ':', ':', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', ':', ':', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'C', 'l', 'a', 's', 's', 'e', 's', 0,
    'K', 'e', 'y', 'b', 'o', 'a', 'r', 'd', 'W', 'i', 't', 'h', 'P', 'o', 'i', 'n', 't', 'i', 'n', 'g', 'D', 'e', 'v', 'i', 'c', 'e', 'P', 'e', 'r', 'i', 'p', 'h', 'e', 'r', 'a', 'l', 0,
    'Q', 'L', 'i', 's', 't', '<', 'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', 'D', 'a', 't', 'a', '>', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', ':', ':', 'M', 'i', 'n', 'o', 'r', 'T', 'o', 'y', 'C', 'l', 'a', 's', 's', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'D', 'a', 't', 'a', ':', ':', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'T', 'y', 'p', 'e', 0,
    'E', 'n', 'v', 'i', 'r', 'o', 'n', 'm', 'e', 'n', 't', 'a', 'l', 'S', 'e', 'n', 's', 'i', 'n', 'g', 'T', 'r', 'i', 'g', 'g', 'e', 'r', 'S', 'e', 't', 't', 'i', 'n', 'g', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'U', 'u', 'i', 'd', ':', ':', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', 'T', 'y', 'p', 'e', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', ':', ':', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 'I', 'd', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', ':', ':', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'C', 'l', 'a', 's', 's', 0,
    'E', 'n', 'v', 'i', 'r', 'o', 'n', 'm', 'e', 'n', 't', 'a', 'l', 'S', 'e', 'n', 's', 'i', 'n', 'g', 'C', 'o', 'n', 'f', 'i', 'g', 'u', 'r', 'a', 't', 'i', 'o', 'n', 0,
    'S', 'e', 'r', 'v', 'e', 'r', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', 'C', 'o', 'n', 'f', 'i', 'g', 'u', 'r', 'a', 't', 'i', 'o', 'n', 0,
    'C', 'l', 'i', 'e', 'n', 't', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', 'C', 'o', 'n', 'f', 'i', 'g', 'u', 'r', 'a', 't', 'i', 'o', 'n', 0,
    'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', 'P', 'r', 'e', 's', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', 'E', 'x', 't', 'e', 'n', 'd', 'e', 'd', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'i', 'e', 's', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'U', 'u', 'i', 'd', ':', ':', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'C', 'l', 'a', 's', 's', 'U', 'u', 'i', 'd', 0,
    'A', 'd', 'd', 'i', 't', 'i', 'o', 'n', 'a', 'l', 'P', 'r', 'o', 't', 'o', 'c', 'o', 'l', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 'L', 'i', 's', 't', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', ':', ':', 'A', 't', 't', 'A', 'c', 'c', 'e', 's', 's', 'C', 'o', 'n', 's', 't', 'r', 'a', 'i', 'n', 't', 's', 0,
    'Q', 'L', 'i', 's', 't', '<', 'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', '>', 0,
    'Q', 'L', 'i', 's', 't', '<', 'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 'D', 'a', 't', 'a', '>', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', ':', ':', 'S', 'e', 'q', 'u', 'e', 'n', 'c', 'e', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'S', 'e', 'r', 'v', 'i', 'c', 'e', ':', ':', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'S', 't', 'a', 't', 'e', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'S', 'e', 'r', 'v', 'i', 'c', 'e', ':', ':', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'E', 'r', 'r', 'o', 'r', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'S', 'e', 'r', 'v', 'i', 'c', 'e', ':', ':', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'T', 'y', 'p', 'e', 's', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'A', 'd', 'v', 'e', 'r', 't', 'i', 's', 'i', 'n', 'g', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 's', 0,
    'E', 'n', 'v', 'i', 'r', 'o', 'n', 'm', 'e', 'n', 't', 'a', 'l', 'S', 'e', 'n', 's', 'i', 'n', 'g', 'M', 'e', 'a', 's', 'u', 'r', 'e', 'm', 'e', 'n', 't', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', ':', ':', 'P', 'r', 'o', 't', 'o', 'c', 'o', 'l', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'y', 'A', 'g', 'e', 'n', 't', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'L', 'o', 'c', 'a', 'l', 'D', 'e', 'v', 'i', 'c', 'e', ':', ':', 'H', 'o', 's', 't', 'M', 'o', 'd', 'e', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', ':', ':', 'A', 't', 't', 'A', 'c', 'c', 'e', 's', 's', 'C', 'o', 'n', 's', 't', 'r', 'a', 'i', 'n', 't', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'S', 'e', 'r', 'v', 'i', 'c', 'e', ':', ':', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'T', 'y', 'p', 'e', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'C', 'o', 'n', 'n', 'e', 'c', 't', 'i', 'o', 'n', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 's', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'U', 'u', 'i', 'd', ':', ':', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 'T', 'y', 'p', 'e', 0,
    'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'P', 'r', 'o', 'f', 'i', 'l', 'e', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 'L', 'i', 's', 't', 0,
    'H', 'o', 's', 't', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'a', 'b', 'l', 'e', 'L', 'i', 'm', 'i', 't', 'e', 'd', 'I', 'n', 'q', 'u', 'i', 'r', 'y', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'L', 'o', 'c', 'a', 'l', 'D', 'e', 'v', 'i', 'c', 'e', ':', ':', 'P', 'a', 'i', 'r', 'i', 'n', 'g', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'y', 'A', 'g', 'e', 'n', 't', 0,
    'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', 'A', 'g', 'g', 'r', 'e', 'g', 'a', 't', 'e', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', 'U', 's', 'e', 'r', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', 0,
    'A', 'l', 'e', 'r', 't', 'N', 'o', 't', 'i', 'f', 'i', 'c', 'a', 't', 'i', 'o', 'n', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'P', 'o', 'i', 'n', 't', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'S', 'o', 'c', 'k', 'e', 't', ':', ':', 'S', 'o', 'c', 'k', 'e', 't', 'E', 'r', 'r', 'o', 'r', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'S', 'o', 'c', 'k', 'e', 't', ':', ':', 'S', 'o', 'c', 'k', 'e', 't', 'S', 't', 'a', 't', 'e', 0,
    'S', 'e', 'r', 'v', 'i', 'c', 'e', 'A', 'l', 'r', 'e', 'a', 'd', 'y', 'R', 'e', 'g', 'i', 's', 't', 'e', 'r', 'e', 'd', 'E', 'r', 'r', 'o', 'r', 0,
    'U', 'n', 'c', 'a', 't', 'e', 'g', 'o', 'r', 'i', 'z', 'e', 'd', 'A', 'u', 'd', 'i', 'o', 'V', 'i', 'd', 'e', 'o', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    'W', 'i', 'r', 'e', 'd', 'M', 'o', 'd', 'e', 'm', 'O', 'r', 'V', 'o', 'i', 'c', 'e', 'G', 'a', 't', 'e', 'w', 'a', 'y', 'P', 'h', 'o', 'n', 'e', 0,
    'Q', 'L', 'i', 's', 't', '<', 'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', '>', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'S', 'e', 'r', 'v', 'i', 'c', 'e', ':', ':', 'W', 'r', 'i', 't', 'e', 'M', 'o', 'd', 'e', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', 'D', 'a', 't', 'a', 0,
    'A', 'n', 'a', 'e', 'r', 'o', 'b', 'i', 'c', 'H', 'e', 'a', 'r', 't', 'R', 'a', 't', 'e', 'U', 'p', 'p', 'e', 'r', 'L', 'i', 'm', 'i', 't', 0,
    'A', 'n', 'a', 'e', 'r', 'o', 'b', 'i', 'c', 'H', 'e', 'a', 'r', 't', 'R', 'a', 't', 'e', 'L', 'o', 'w', 'e', 'r', 'L', 'i', 'm', 'i', 't', 0,
    'S', 'u', 'p', 'p', 'o', 'r', 't', 'e', 'd', 'U', 'n', 'r', 'e', 'a', 'd', 'A', 'l', 'e', 'r', 't', 'C', 'a', 't', 'e', 'g', 'o', 'r', 'y', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'U', 'u', 'i', 'd', ':', ':', 'P', 'r', 'o', 't', 'o', 'c', 'o', 'l', 'U', 'u', 'i', 'd', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'L', 'o', 'c', 'a', 'l', 'D', 'e', 'v', 'i', 'c', 'e', ':', ':', 'E', 'r', 'r', 'o', 'r', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', ':', ':', 'F', 'i', 'e', 'l', 'd', 's', 0,
    's', 'e', 't', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'y', 'T', 'i', 'm', 'e', 'o', 'u', 't', 0,
    'I', 'n', 'v', 'a', 'l', 'i', 'd', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'A', 'd', 'a', 'p', 't', 'e', 'r', 'E', 'r', 'r', 'o', 'r', 0,
    'Q', 'L', 'i', 's', 't', '<', 'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', '>', 0,
    'Q', 'L', 'i', 's', 't', '<', 'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', '>', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'l', 'e', 'r', ':', ':', 'E', 'r', 'r', 'o', 'r', 0,
    'M', 'a', 'x', 'i', 'm', 'u', 'm', 'R', 'e', 'c', 'o', 'm', 'm', 'e', 'n', 'd', 'e', 'd', 'H', 'e', 'a', 'r', 't', 'R', 'a', 't', 'e', 0,
    'C', 'o', 'n', 't', 'i', 'n', 'u', 'o', 'u', 's', 'G', 'l', 'u', 'c', 'o', 's', 'e', 'M', 'o', 'n', 'i', 't', 'o', 'r', 'i', 'n', 'g', 0,
    'H', 'u', 'm', 'a', 'n', 'I', 'n', 't', 'e', 'r', 'f', 'a', 'c', 'e', 'D', 'e', 'v', 'i', 'c', 'e', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'L', 'a', 'n', 'g', 'u', 'a', 'g', 'e', 'B', 'a', 's', 'e', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 'I', 'd', 'L', 'i', 's', 't', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', ':', ':', 'F', 'i', 'e', 'l', 'd', 0,
    'U', 'n', 'c', 'a', 't', 'e', 'g', 'o', 'r', 'i', 'z', 'e', 'd', 'W', 'e', 'a', 'r', 'a', 'b', 'l', 'e', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'l', 'e', 'r', ':', ':', 'R', 'o', 'l', 'e', 0,
    'B', 'o', 'd', 'y', 'C', 'o', 'm', 'p', 'o', 's', 'i', 't', 'i', 'o', 'n', 'M', 'e', 'a', 's', 'u', 'r', 'e', 'm', 'e', 'n', 't', 0,
    'F', 'a', 't', 'B', 'u', 'r', 'n', 'H', 'e', 'a', 'r', 't', 'R', 'a', 't', 'e', 'U', 'p', 'p', 'e', 'r', 'L', 'i', 'm', 'i', 't', 0,
    'F', 'a', 't', 'B', 'u', 'r', 'n', 'H', 'e', 'a', 'r', 't', 'R', 'a', 't', 'e', 'L', 'o', 'w', 'e', 'r', 'L', 'i', 'm', 'i', 't', 0,
    'A', 'e', 'r', 'o', 'b', 'i', 'c', 'H', 'e', 'a', 'r', 't', 'R', 'a', 't', 'e', 'U', 'p', 'p', 'e', 'r', 'L', 'i', 'm', 'i', 't', 0,
    'A', 'e', 'r', 'o', 'b', 'i', 'c', 'H', 'e', 'a', 'r', 't', 'R', 'a', 't', 'e', 'L', 'o', 'w', 'e', 'r', 'L', 'i', 'm', 'i', 't', 0,
    'R', 'e', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 'T', 'i', 'm', 'e', 'U', 'p', 'd', 'a', 't', 'e', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'A', 'V', '_', 'R', 'e', 'm', 'o', 't', 'e', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'l', 'e', 'r', 0,
    'p', 'r', 'o', 't', 'o', 'c', 'o', 'l', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'M', 'u', 'l', 't', 'i', 'p', 'l', 'e', 'x', 'e', 'r', 0,
    'p', 'a', 'i', 'r', 'i', 'n', 'g', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'C', 'o', 'n', 'f', 'i', 'r', 'm', 'a', 't', 'i', 'o', 'n', 0,
    'H', 'e', 'a', 'l', 't', 'h', 'B', 'l', 'o', 'o', 'd', 'P', 'r', 'e', 's', 's', 'u', 'r', 'e', 'M', 'o', 'n', 'i', 't', 'o', 'r', 0,
    'U', 'n', 'c', 'a', 't', 'e', 'g', 'o', 'r', 'i', 'z', 'e', 'd', 'I', 'm', 'a', 'g', 'i', 'n', 'g', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    'V', 'i', 'd', 'e', 'o', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'A', 'n', 'd', 'L', 'o', 'u', 'd', 's', 'p', 'e', 'a', 'k', 'e', 'r', 0,
    'U', 'n', 'c', 'a', 't', 'e', 'g', 'o', 'r', 'i', 'z', 'e', 'd', 'M', 'i', 's', 'c', 'e', 'l', 'l', 'a', 'n', 'e', 'o', 'u', 's', 0,
    'U', 'n', 's', 'u', 'p', 'p', 'o', 'r', 't', 'e', 'd', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'y', 'M', 'e', 't', 'h', 'o', 'd', 0,
    'Q', 'L', 'i', 's', 't', '<', 'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'S', 'e', 'r', 'v', 'i', 'c', 'e', '*', '>', 0,
    'Q', 'L', 'i', 's', 't', '<', 'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'H', 'o', 's', 't', 'I', 'n', 'f', 'o', '>', 0,
    'Q', 'H', 'a', 's', 'h', '<', 'q', 'u', 'i', 'n', 't', '1', '6', ',', 'Q', 'B', 'y', 't', 'e', 'A', 'r', 'r', 'a', 'y', '>', 0,
    'U', 's', 'e', 'W', 'h', 'i', 't', 'e', 'L', 'i', 's', 't', 'F', 'o', 'r', 'C', 'o', 'n', 'n', 'e', 'c', 't', 'i', 'n', 'g', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'A', 'd', 'v', 'e', 'r', 't', 'i', 's', 'i', 'n', 'g', 'D', 'a', 't', 'a', 0,
    'D', 'a', 't', 'e', 'O', 'f', 'T', 'h', 'r', 'e', 's', 'h', 'o', 'l', 'd', 'A', 's', 's', 'e', 's', 's', 'm', 'e', 'n', 't', 0,
    'S', 'u', 'p', 'p', 'o', 'r', 't', 'e', 'd', 'N', 'e', 'w', 'A', 'l', 'e', 'r', 't', 'C', 'a', 't', 'e', 'g', 'o', 'r', 'y', 0,
    'G', 'l', 'u', 'c', 'o', 's', 'e', 'M', 'e', 'a', 's', 'u', 'r', 'e', 'm', 'e', 'n', 't', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'M', 'e', 's', 's', 'a', 'g', 'e', 'N', 'o', 't', 'i', 'f', 'i', 'c', 'a', 't', 'i', 'o', 'n', 'S', 'e', 'r', 'v', 'e', 'r', 0,
    'A', 'd', 'v', 'a', 'n', 'c', 'e', 'd', 'A', 'u', 'd', 'i', 'o', 'D', 'i', 's', 't', 'r', 'i', 'b', 'u', 't', 'i', 'o', 'n', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'T', 'r', 'a', 'n', 's', 'f', 'e', 'r', 'R', 'e', 'q', 'u', 'e', 's', 't', 0,
    'U', 's', 'e', 'r', 'C', 'a', 'n', 'c', 'e', 'l', 'e', 'd', 'T', 'r', 'a', 'n', 's', 'f', 'e', 'r', 'E', 'r', 'r', 'o', 'r', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'T', 'r', 'a', 'n', 's', 'f', 'e', 'r', 'M', 'a', 'n', 'a', 'g', 'e', 'r', 0,
    's', 'e', 't', 'P', 'r', 'e', 'f', 'e', 'r', 'r', 'e', 'd', 'S', 'e', 'c', 'u', 'r', 'i', 't', 'y', 'F', 'l', 'a', 'g', 's', 0,
    'B', 'a', 's', 'e', 'R', 'a', 't', 'e', 'C', 'o', 'r', 'e', 'C', 'o', 'n', 'f', 'i', 'g', 'u', 'r', 'a', 't', 'i', 'o', 'n', 0,
    'U', 'n', 'c', 'a', 't', 'e', 'g', 'o', 'r', 'i', 'z', 'e', 'd', 'H', 'e', 'a', 'l', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    'D', 'i', 'g', 'i', 't', 'i', 'z', 'e', 'r', 'T', 'a', 'b', 'l', 'e', 't', 'P', 'e', 'r', 'i', 'p', 'h', 'e', 'r', 'a', 'l', 0,
    'H', 'a', 'n', 'd', 'h', 'e', 'l', 'd', 'C', 'l', 'a', 'm', 'S', 'h', 'e', 'l', 'l', 'C', 'o', 'm', 'p', 'u', 't', 'e', 'r', 0,
    's', 'u', 'p', 'p', 'o', 'r', 't', 'e', 'd', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'y', 'M', 'e', 't', 'h', 'o', 'd', 's', 0,
    'l', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'y', 'T', 'i', 'm', 'e', 'o', 'u', 't', 0,
    'A', 't', 't', 'A', 'u', 't', 'h', 'e', 'n', 't', 'i', 'c', 'a', 't', 'i', 'o', 'n', 'R', 'e', 'q', 'u', 'i', 'r', 'e', 'd', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', ':', ':', 'S', 'e', 'c', 'u', 'r', 'i', 't', 'y', 'F', 'l', 'a', 'g', 's', 0,
    'Q', 'L', 'i', 's', 't', '<', 'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'A', 'd', 'd', 'r', 'e', 's', 's', '>', 0,
    'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', 'W', 'r', 'i', 't', 'e', 'E', 'r', 'r', 'o', 'r', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 'D', 'a', 't', 'a', 0,
    'U', 'n', 'k', 'n', 'o', 'w', 'n', 'R', 'e', 'm', 'o', 't', 'e', 'D', 'e', 'v', 'i', 'c', 'e', 'E', 'r', 'r', 'o', 'r', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', 0,
    'T', 'h', 'r', 'e', 'e', 'Z', 'o', 'n', 'e', 'H', 'e', 'a', 'r', 't', 'R', 'a', 't', 'e', 'L', 'i', 'm', 'i', 't', 's', 0,
    'C', 'y', 'c', 'l', 'i', 'n', 'g', 'P', 'o', 'w', 'e', 'r', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'P', 'o', 'i', 'n', 't', 0,
    'R', 'e', 'c', 'o', 'r', 'd', 'A', 'c', 'c', 'e', 's', 's', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'P', 'o', 'i', 'n', 't', 0,
    'I', 'n', 't', 'e', 'r', 'm', 'e', 'd', 'i', 'a', 't', 'e', 'C', 'u', 'f', 'f', 'P', 'r', 'e', 's', 's', 'u', 'r', 'e', 0,
    'B', 'l', 'o', 'o', 'd', 'P', 'r', 'e', 's', 's', 'u', 'r', 'e', 'M', 'e', 'a', 's', 'u', 'r', 'e', 'm', 'e', 'n', 't', 0,
    'B', 'o', 'o', 't', 'K', 'e', 'y', 'b', 'o', 'a', 'r', 'd', 'O', 'u', 't', 'p', 'u', 't', 'R', 'e', 'p', 'o', 'r', 't', 0,
    'R', 'e', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 'T', 'i', 'm', 'e', 'I', 'n', 'f', 'o', 'r', 'm', 'a', 't', 'i', 'o', 'n', 0,
    'A', 'l', 'e', 'r', 't', 'N', 'o', 't', 'i', 'f', 'i', 'c', 'a', 't', 'i', 'o', 'n', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'H', 'a', 'r', 'd', 'c', 'o', 'p', 'y', 'C', 'a', 'b', 'l', 'e', 'R', 'e', 'p', 'l', 'a', 'c', 'e', 'm', 'e', 'n', 't', 0,
    'I', 'O', 'D', 'e', 'v', 'i', 'c', 'e', 'N', 'o', 't', 'R', 'e', 'a', 'd', 'a', 'b', 'l', 'e', 'E', 'r', 'r', 'o', 'r', 0,
    's', 'e', 't', 'M', 'a', 'x', 'P', 'e', 'n', 'd', 'i', 'n', 'g', 'C', 'o', 'n', 'n', 'e', 'c', 't', 'i', 'o', 'n', 's', 0,
    'U', 'n', 's', 'u', 'p', 'p', 'o', 'r', 't', 'e', 'd', 'P', 'r', 'o', 't', 'o', 'c', 'o', 'l', 'E', 'r', 'r', 'o', 'r', 0,
    'U', 'n', 'k', 'n', 'o', 'w', 'n', 'C', 'o', 'r', 'e', 'C', 'o', 'n', 'f', 'i', 'g', 'u', 'r', 'a', 't', 'i', 'o', 'n', 0,
    's', 'e', 'r', 'v', 'i', 'c', 'e', 'U', 'u', 'i', 'd', 's', 'C', 'o', 'm', 'p', 'l', 'e', 't', 'e', 'n', 'e', 's', 's', 0,
    'U', 'n', 's', 'u', 'p', 'p', 'o', 'r', 't', 'e', 'd', 'P', 'l', 'a', 't', 'f', 'o', 'r', 'm', 'E', 'r', 'r', 'o', 'r', 0,
    'A', 't', 't', 'A', 'u', 't', 'h', 'o', 'r', 'i', 'z', 'a', 't', 'i', 'o', 'n', 'R', 'e', 'q', 'u', 'i', 'r', 'e', 'd', 0,
    'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', 'R', 'e', 'a', 'd', 'E', 'r', 'r', 'o', 'r', 0,
    'r', 'e', 'q', 'u', 'e', 's', 't', 'C', 'o', 'n', 'n', 'e', 'c', 't', 'i', 'o', 'n', 'U', 'p', 'd', 'a', 't', 'e', 0,
    'U', 's', 'e', 'W', 'h', 'i', 't', 'e', 'L', 'i', 's', 't', 'F', 'o', 'r', 'S', 'c', 'a', 'n', 'n', 'i', 'n', 'g', 0,
    'E', 'x', 't', 'e', 'r', 'n', 'a', 'l', 'R', 'e', 'p', 'o', 'r', 't', 'R', 'e', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 0,
    'B', 'a', 'r', 'o', 'm', 'e', 't', 'r', 'i', 'c', 'P', 'r', 'e', 's', 's', 'u', 'r', 'e', 'T', 'r', 'e', 'n', 'd', 0,
    'D', 'a', 't', 'a', 'b', 'a', 's', 'e', 'C', 'h', 'a', 'n', 'g', 'e', 'I', 'n', 'c', 'r', 'e', 'm', 'e', 'n', 't', 0,
    'F', 'i', 'v', 'e', 'Z', 'o', 'n', 'e', 'H', 'e', 'a', 'r', 't', 'R', 'a', 't', 'e', 'L', 'i', 'm', 'i', 't', 's', 0,
    'C', 'y', 'c', 'l', 'i', 'n', 'g', 'P', 'o', 'w', 'e', 'r', 'M', 'e', 'a', 's', 'u', 'r', 'e', 'm', 'e', 'n', 't', 0,
    'B', 'o', 'o', 't', 'K', 'e', 'y', 'b', 'o', 'a', 'r', 'd', 'I', 'n', 'p', 'u', 't', 'R', 'e', 'p', 'o', 'r', 't', 0,
    'I', 'n', 't', 'e', 'r', 'm', 'e', 'd', 'i', 'a', 't', 'e', 'T', 'e', 'm', 'p', 'e', 'r', 'a', 't', 'u', 'r', 'e', 0,
    'P', 'h', 'o', 'n', 'e', 'A', 'l', 'e', 'r', 't', 'S', 't', 'a', 't', 'u', 's', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'I', 'm', 'a', 'g', 'i', 'n', 'g', 'R', 'e', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 'O', 'b', 'j', 'e', 'c', 't', 's', 0,
    'I', 'm', 'a', 'g', 'i', 'n', 'g', 'A', 'u', 't', 'o', 'm', 'a', 't', 'i', 'c', 'A', 'r', 'c', 'h', 'i', 'v', 'e', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'T', 'r', 'a', 'n', 's', 'f', 'e', 'r', 'R', 'e', 'p', 'l', 'y', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'S', 'e', 'r', 'v', 'e', 'r', ':', ':', 'E', 'r', 'r', 'o', 'r', 0,
    'S', 'e', 'n', 's', 'i', 'n', 'g', 'D', 'e', 'v', 'i', 'c', 'e', 'P', 'e', 'r', 'i', 'p', 'h', 'e', 'r', 'a', 'l', 0,
    'R', 'e', 'm', 'o', 't', 'e', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'P', 'e', 'r', 'i', 'p', 'h', 'e', 'r', 'a', 'l', 0,
    'U', 'n', 'c', 'a', 't', 'e', 'g', 'o', 'r', 'i', 'z', 'e', 'd', 'P', 'e', 'r', 'i', 'p', 'h', 'e', 'r', 'a', 'l', 0,
    'G', 'e', 'n', 'e', 'r', 'a', 'l', 'U', 'n', 'l', 'i', 'm', 'i', 't', 'e', 'd', 'I', 'n', 'q', 'u', 'i', 'r', 'y', 0,
    'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'a', 'b', 'i', 'l', 'i', 't', 'y', 'G', 'e', 'n', 'e', 'r', 'a', 'l', 0,
    'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'a', 'b', 'i', 'l', 'i', 't', 'y', 'L', 'i', 'm', 'i', 't', 'e', 'd', 0,
    'c', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', 'T', 'o', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'B', 'o', 'd', 'y', 'C', 'o', 'm', 'p', 'o', 's', 'i', 't', 'i', 'o', 'n', 'F', 'e', 'a', 't', 'u', 'r', 'e', 0,
    'T', 'w', 'o', 'Z', 'o', 'n', 'e', 'H', 'e', 'a', 'r', 't', 'R', 'a', 't', 'e', 'L', 'i', 'm', 'i', 't', 's', 0,
    'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 'V', 'a', 'l', 'u', 'e', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'A', 'l', 'e', 'r', 't', 'C', 'a', 't', 'e', 'g', 'o', 'r', 'y', 'I', 'D', 'B', 'i', 't', 'M', 'a', 's', 'k', 0,
    'M', 'a', 'n', 'u', 'f', 'a', 'c', 't', 'u', 'r', 'e', 'r', 'N', 'a', 'm', 'e', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'S', 'o', 'f', 't', 'w', 'a', 'r', 'e', 'R', 'e', 'v', 'i', 's', 'i', 'o', 'n', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'H', 'a', 'r', 'd', 'w', 'a', 'r', 'e', 'R', 'e', 'v', 'i', 's', 'i', 'o', 'n', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'F', 'i', 'r', 'm', 'w', 'a', 'r', 'e', 'R', 'e', 'v', 'i', 's', 'i', 'o', 'n', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'T', 'e', 'm', 'p', 'e', 'r', 'a', 't', 'u', 'r', 'e', 'M', 'e', 'a', 's', 'u', 'r', 'e', 'm', 'e', 'n', 't', 0,
    'T', 'i', 'm', 'e', 'U', 'p', 'd', 'a', 't', 'e', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'P', 'o', 'i', 'n', 't', 0,
    'C', 'y', 'c', 'l', 'i', 'n', 'g', 'S', 'p', 'e', 'e', 'd', 'A', 'n', 'd', 'C', 'a', 'd', 'e', 'n', 'c', 'e', 0,
    'R', 'u', 'n', 'n', 'i', 'n', 'g', 'S', 'p', 'e', 'e', 'd', 'A', 'n', 'd', 'C', 'a', 'd', 'e', 'n', 'c', 'e', 0,
    'A', 'V', '_', 'R', 'e', 'm', 'o', 't', 'e', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'T', 'a', 'r', 'g', 'e', 't', 0,
    'S', 'e', 'r', 'v', 'i', 'c', 'e', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'y', 'S', 'e', 'r', 'v', 'e', 'r', 0,
    'H', 'a', 'r', 'd', 'c', 'o', 'p', 'y', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'C', 'h', 'a', 'n', 'n', 'e', 'l', 0,
    'p', 'r', 'e', 'f', 'e', 'r', 'r', 'e', 'd', 'S', 'e', 'c', 'u', 'r', 'i', 't', 'y', 'F', 'l', 'a', 'g', 's', 0,
    's', 'e', 't', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'A', 'v', 'a', 'i', 'l', 'a', 'b', 'i', 'l', 'i', 't', 'y', 0,
    'N', 'e', 't', 'w', 'o', 'r', 'k', 'L', 'o', 'a', 'd', 'F', 'a', 'c', 't', 'o', 'r', 'T', 'h', 'r', 'e', 'e', 0,
    'Q', 'L', 'i', 's', 't', '<', 'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'U', 'u', 'i', 'd', '>', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'D', 'a', 't', 'a', 0,
    'c', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', 'W', 'r', 'i', 't', 't', 'e', 'n', 0,
    'c', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    's', 'e', 't', 'S', 'u', 'p', 'e', 'r', 'v', 'i', 's', 'i', 'o', 'n', 'T', 'i', 'm', 'e', 'o', 'u', 't', 0,
    'i', 'n', 'v', 'a', 'l', 'i', 'd', 'M', 'a', 'n', 'u', 'f', 'a', 'c', 't', 'u', 'r', 'e', 'r', 'I', 'd', 0,
    'U', 'n', 'k', 'n', 'o', 'w', 'n', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 'T', 'y', 'p', 'e', 0,
    'M', 'a', 'g', 'n', 'e', 't', 'i', 'c', 'F', 'l', 'u', 'x', 'D', 'e', 'n', 's', 'i', 't', 'y', '3', 'D', 0,
    'M', 'a', 'g', 'n', 'e', 't', 'i', 'c', 'F', 'l', 'u', 'x', 'D', 'e', 'n', 's', 'i', 't', 'y', '2', 'D', 0,
    'A', 'p', 'p', 'a', 'r', 'e', 'n', 't', 'W', 'i', 'n', 'd', 'D', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'H', 'e', 'a', 'r', 't', 'R', 'a', 't', 'e', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'P', 'o', 'i', 'n', 't', 0,
    'P', 'e', 'r', 'i', 'p', 'h', 'e', 'r', 'a', 'l', 'P', 'r', 'i', 'v', 'a', 'c', 'y', 'F', 'l', 'a', 'g', 0,
    'L', 'o', 'c', 'a', 't', 'i', 'o', 'n', 'A', 'n', 'd', 'N', 'a', 'v', 'i', 'g', 'a', 't', 'i', 'o', 'n', 0,
    'H', 'a', 'n', 'd', 's', 'f', 'r', 'e', 'e', 'A', 'u', 'd', 'i', 'o', 'G', 'a', 't', 'e', 'w', 'a', 'y', 0,
    'B', 'r', 'o', 'w', 's', 'e', 'G', 'r', 'o', 'u', 'p', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 0,
    'd', 'i', 's', 'c', 'o', 'n', 'n', 'e', 'c', 't', 'F', 'r', 'o', 'm', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'R', 'e', 'm', 'o', 't', 'e', 'H', 'o', 's', 't', 'C', 'l', 'o', 's', 'e', 'd', 'E', 'r', 'r', 'o', 'r', 0,
    's', 'e', 't', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', 0,
    'S', 'e', 'r', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', 'T', 'i', 'm', 'e', 'T', 'o', 'L', 'i', 'v', 'e', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', 0,
    'n', 'e', 'x', 't', 'P', 'e', 'n', 'd', 'i', 'n', 'g', 'C', 'o', 'n', 'n', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'h', 'a', 's', 'P', 'e', 'n', 'd', 'i', 'n', 'g', 'C', 'o', 'n', 'n', 'e', 'c', 't', 'i', 'o', 'n', 's', 0,
    'm', 'a', 'x', 'P', 'e', 'n', 'd', 'i', 'n', 'g', 'C', 'o', 'n', 'n', 'e', 'c', 't', 'i', 'o', 'n', 's', 0,
    'p', 'a', 'i', 'r', 'i', 'n', 'g', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'P', 'i', 'n', 'C', 'o', 'd', 'e', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'L', 'o', 'c', 'a', 'l', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    's', 'e', 't', 'C', 'o', 'r', 'e', 'C', 'o', 'n', 'f', 'i', 'g', 'u', 'r', 'a', 't', 'i', 'o', 'n', 's', 0,
    'O', 'b', 'j', 'e', 'c', 't', 'T', 'r', 'a', 'n', 's', 'f', 'e', 'r', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'W', 'e', 'a', 'r', 'a', 'b', 'l', 'e', 'H', 'e', 'a', 'd', 's', 'e', 't', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    'N', 'e', 't', 'w', 'o', 'r', 'k', 'L', 'o', 'a', 'd', 'F', 'a', 'c', 't', 'o', 'r', 'F', 'i', 'v', 'e', 0,
    'N', 'e', 't', 'w', 'o', 'r', 'k', 'L', 'o', 'a', 'd', 'F', 'a', 'c', 't', 'o', 'r', 'F', 'o', 'u', 'r', 0,
    'C', 'o', 'm', 'm', 'o', 'n', 'I', 's', 'd', 'n', 'A', 'c', 'c', 'e', 's', 's', 'P', 'h', 'o', 'n', 'e', 0,
    'U', 'n', 'c', 'a', 't', 'e', 'g', 'o', 'r', 'i', 'z', 'e', 'd', 'C', 'o', 'm', 'p', 'u', 't', 'e', 'r', 0,
    'A', 't', 't', 'E', 'n', 'c', 'r', 'y', 'p', 't', 'i', 'o', 'n', 'R', 'e', 'q', 'u', 'i', 'r', 'e', 'd', 0,
    'S', 'e', 'r', 'v', 'i', 'c', 'e', 'T', 'y', 'p', 'e', 'S', 'e', 'c', 'o', 'n', 'd', 'a', 'r', 'y', 0,
    'W', 'r', 'i', 't', 'e', 'W', 'i', 't', 'h', 'o', 'u', 't', 'R', 'e', 's', 'p', 'o', 'n', 's', 'e', 0,
    'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 'W', 'r', 'i', 't', 'e', 'E', 'r', 'r', 'o', 'r', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 0,
    'd', 'i', 's', 'c', 'o', 'n', 'n', 'e', 'c', 't', 'F', 'r', 'o', 'm', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    's', 'e', 't', 'R', 'e', 'm', 'o', 't', 'e', 'A', 'd', 'd', 'r', 'e', 's', 's', 'T', 'y', 'p', 'e', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'l', 'e', 'r', 0,
    's', 'e', 't', 'I', 'n', 'c', 'l', 'u', 'd', 'e', 'P', 'o', 'w', 'e', 'r', 'L', 'e', 'v', 'e', 'l', 0,
    's', 'e', 'r', 'v', 'i', 'c', 'e', 'C', 'l', 'a', 's', 's', 'T', 'o', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'B', 'l', 'o', 'o', 'd', 'P', 'r', 'e', 's', 's', 'u', 'r', 'e', 'F', 'e', 'a', 't', 'u', 'r', 'e', 0,
    'H', 'e', 'a', 'r', 't', 'R', 'a', 't', 'e', 'M', 'e', 'a', 's', 'u', 'r', 'e', 'm', 'e', 'n', 't', 0,
    'B', 'o', 'o', 't', 'M', 'o', 'u', 's', 'e', 'I', 'n', 'p', 'u', 't', 'R', 'e', 'p', 'o', 'r', 't', 0,
    'L', 'o', 'c', 'a', 'l', 'T', 'i', 'm', 'e', 'I', 'n', 'f', 'o', 'r', 'm', 'a', 't', 'i', 'o', 'n', 0,
    'E', 'n', 'v', 'i', 'r', 'o', 'n', 'm', 'e', 'n', 't', 'a', 'l', 'S', 'e', 'n', 's', 'i', 'n', 'g', 0,
    'H', 'u', 'm', 'a', 'n', 'I', 'n', 't', 'e', 'r', 'f', 'a', 'c', 'e', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    'N', 'e', 'x', 't', 'D', 'S', 'T', 'C', 'h', 'a', 'n', 'g', 'e', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'M', 'e', 's', 's', 'a', 'g', 'e', 'A', 'c', 'c', 'e', 's', 's', 'P', 'r', 'o', 'f', 'i', 'l', 'e', 0,
    'H', 'a', 'r', 'd', 'c', 'o', 'p', 'y', 'N', 'o', 't', 'i', 'f', 'i', 'c', 'a', 't', 'i', 'o', 'n', 0,
    'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 0,
    'S', 'e', 'r', 'v', 'i', 'c', 'e', 'N', 'o', 't', 'F', 'o', 'u', 'n', 'd', 'E', 'r', 'r', 'o', 'r', 0,
    'h', 'o', 's', 't', 'M', 'o', 'd', 'e', 'S', 't', 'a', 't', 'e', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'C', 'a', 'r', 'd', 'R', 'e', 'a', 'd', 'e', 'r', 'P', 'e', 'r', 'i', 'p', 'h', 'e', 'r', 'a', 'l', 0,
    'N', 'e', 't', 'w', 'o', 'r', 'k', 'L', 'o', 'a', 'd', 'F', 'a', 'c', 't', 'o', 'r', 'S', 'i', 'x', 0,
    'N', 'e', 't', 'w', 'o', 'r', 'k', 'L', 'o', 'a', 'd', 'F', 'a', 'c', 't', 'o', 'r', 'T', 'w', 'o', 0,
    'N', 'e', 't', 'w', 'o', 'r', 'k', 'L', 'o', 'a', 'd', 'F', 'a', 'c', 't', 'o', 'r', 'O', 'n', 'e', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'D', 'e', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', ':', ':', 'S', 'e', 'c', 'u', 'r', 'i', 't', 'y', 0,
    's', 'e', 't', 'I', 'n', 'c', 'l', 'u', 'd', 'e', 'd', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 's', 0,
    'w', 'r', 'i', 't', 'e', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', 0,
    'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'i', 'n', 'g', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 's', 0,
    'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 'R', 'e', 'a', 'd', 'E', 'r', 'r', 'o', 'r', 0,
    's', 'e', 't', 'W', 'r', 'i', 't', 'e', 'P', 'e', 'r', 'm', 'i', 's', 's', 'i', 'o', 'n', 's', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'O', 'b', 'j', 'e', 'c', 't', 0,
    's', 'e', 't', 'W', 'r', 'i', 't', 'e', 'C', 'o', 'n', 's', 't', 'r', 'a', 'i', 'n', 't', 's', 0,
    'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'a', 'b', 'i', 'l', 'i', 't', 'y', 'N', 'o', 'n', 'e', 0,
    'P', 'o', 'l', 'l', 'e', 'n', 'C', 'o', 'n', 'c', 'e', 'n', 't', 'r', 'a', 't', 'i', 'o', 'n', 0,
    'M', 'a', 'g', 'n', 'e', 't', 'i', 'c', 'D', 'e', 'c', 'l', 'i', 'n', 'a', 't', 'i', 'o', 'n', 0,
    'C', 'y', 'c', 'l', 'i', 'n', 'g', 'P', 'o', 'w', 'e', 'r', 'F', 'e', 'a', 't', 'u', 'r', 'e', 0,
    'M', 'e', 'a', 's', 'u', 'r', 'e', 'm', 'e', 'n', 't', 'I', 'n', 't', 'e', 'r', 'v', 'a', 'l', 0,
    'R', 'e', 'c', 'o', 'n', 'n', 'e', 'c', 't', 'i', 'o', 'n', 'A', 'd', 'd', 'r', 'e', 's', 's', 0,
    'G', 'e', 'n', 'e', 'r', 'i', 'c', 'F', 'i', 'l', 'e', 'T', 'r', 'a', 'n', 's', 'f', 'e', 'r', 0,
    'M', 'e', 's', 's', 'a', 'g', 'e', 'A', 'c', 'c', 'e', 's', 's', 'S', 'e', 'r', 'v', 'e', 'r', 0,
    'H', 'a', 'r', 'd', 'c', 'o', 'p', 'y', 'D', 'a', 't', 'a', 'C', 'h', 'a', 'n', 'n', 'e', 'l', 0,
    's', 'e', 't', 'S', 'o', 'c', 'k', 'e', 't', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 0,
    's', 'e', 'r', 'v', 'i', 'c', 'e', 'A', 'v', 'a', 'i', 'l', 'a', 'b', 'i', 'l', 'i', 't', 'y', 0,
    'P', 'r', 'i', 'm', 'a', 'r', 'y', 'L', 'a', 'n', 'g', 'u', 'a', 'g', 'e', 'B', 'a', 's', 'e', 0,
    'C', 'l', 'i', 'e', 'n', 't', 'E', 'x', 'e', 'c', 'u', 't', 'a', 'b', 'l', 'e', 'U', 'r', 'l', 0,
    'S', 'e', 'r', 'v', 'i', 'c', 'e', 'R', 'e', 'c', 'o', 'r', 'd', 'H', 'a', 'n', 'd', 'l', 'e', 0,
    'p', 'a', 'i', 'r', 'i', 'n', 'g', 'C', 'o', 'n', 'f', 'i', 'r', 'm', 'a', 't', 'i', 'o', 'n', 0,
    's', 'e', 't', 'M', 'a', 'n', 'u', 'f', 'a', 'c', 't', 'u', 'r', 'e', 'r', 'D', 'a', 't', 'a', 0,
    'H', 'e', 'a', 'l', 't', 'h', 'P', 'u', 'l', 's', 'e', 'O', 'x', 'i', 'm', 'e', 't', 'e', 'r', 0,
    'P', 'o', 'r', 't', 'a', 'b', 'l', 'e', 'A', 'u', 'd', 'i', 'o', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    'U', 'n', 'c', 'a', 't', 'e', 'g', 'o', 'r', 'i', 'z', 'e', 'd', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    'M', 'i', 's', 'c', 'e', 'l', 'l', 'a', 'n', 'e', 'o', 'u', 's', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    'w', 'a', 'i', 't', 'F', 'o', 'r', 'B', 'y', 't', 'e', 's', 'W', 'r', 'i', 't', 't', 'e', 'n', 0,
    's', 'e', 't', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', 's', 0,
    'a', 'd', 'd', 'I', 'n', 'c', 'l', 'u', 'd', 'e', 'd', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'S', 'e', 'r', 'v', 'i', 'c', 'e', 'T', 'y', 'p', 'e', 'P', 'r', 'i', 'm', 'a', 'r', 'y', 0,
    'c', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', 'R', 'e', 'a', 'd', 0,
    'r', 'e', 'a', 'd', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', 0,
    's', 'e', 't', 'R', 'e', 'a', 'd', 'P', 'e', 'r', 'm', 'i', 's', 's', 'i', 'o', 'n', 's', 0,
    's', 'u', 'p', 'e', 'r', 'v', 'i', 's', 'i', 'o', 'n', 'T', 'i', 'm', 'e', 'o', 'u', 't', 0,
    'm', 'a', 'x', 'i', 'm', 'u', 'm', 'V', 'a', 'l', 'u', 'e', 'L', 'e', 'n', 'g', 't', 'h', 0,
    'm', 'i', 'n', 'i', 'm', 'u', 'm', 'V', 'a', 'l', 'u', 'e', 'L', 'e', 'n', 'g', 't', 'h', 0,
    's', 'e', 't', 'R', 'e', 'a', 'd', 'C', 'o', 'n', 's', 't', 'r', 'a', 'i', 'n', 't', 's', 0,
    's', 'e', 't', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'a', 'b', 'i', 'l', 'i', 't', 'y', 0,
    'd', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 'T', 'o', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'W', 'e', 'i', 'g', 'h', 't', 'S', 'c', 'a', 'l', 'e', 'F', 'e', 'a', 't', 'u', 'r', 'e', 0,
    'W', 'a', 'i', 's', 't', 'C', 'i', 'r', 'c', 'u', 'm', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 0,
    'A', 'n', 'a', 'e', 'r', 'o', 'b', 'i', 'c', 'T', 'h', 'r', 'e', 's', 'h', 'o', 'l', 'd', 0,
    'C', 'y', 'c', 'l', 'i', 'n', 'g', 'P', 'o', 'w', 'e', 'r', 'V', 'e', 'c', 't', 'o', 'r', 0,
    'S', 'c', 'a', 'n', 'I', 'n', 't', 'e', 'r', 'v', 'a', 'l', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'R', 'i', 'n', 'g', 'e', 'r', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'P', 'o', 'i', 'n', 't', 0,
    'B', 'o', 'd', 'y', 'S', 'e', 'n', 's', 'o', 'r', 'L', 'o', 'c', 'a', 't', 'i', 'o', 'n', 0,
    'S', 'e', 'r', 'i', 'a', 'l', 'N', 'u', 'm', 'b', 'e', 'r', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'G', 'l', 'u', 'c', 'o', 's', 'e', 'M', 'e', 'a', 's', 'u', 'r', 'e', 'm', 'e', 'n', 't', 0,
    'C', 'u', 'r', 'r', 'e', 'n', 't', 'T', 'i', 'm', 'e', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'P', 'h', 'o', 'n', 'e', 'b', 'o', 'o', 'k', 'A', 'c', 'c', 'e', 's', 's', 'P', 'S', 'E', 0,
    'P', 'h', 'o', 'n', 'e', 'b', 'o', 'o', 'k', 'A', 'c', 'c', 'e', 's', 's', 'P', 'C', 'E', 0,
    'M', 'c', 'a', 'p', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'C', 'h', 'a', 'n', 'n', 'e', 'l', 0,
    'U', 'n', 'k', 'n', 'o', 'w', 'n', 'S', 'o', 'c', 'k', 'e', 't', 'E', 'r', 'r', 'o', 'r', 0,
    'S', 'e', 'r', 'v', 'i', 'c', 'e', 'L', 'o', 'o', 'k', 'u', 'p', 'S', 't', 'a', 't', 'e', 0,
    's', 'e', 't', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 0,
    's', 'e', 'r', 'v', 'i', 'c', 'e', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', 0,
    'p', 'r', 'o', 't', 'o', 'c', 'o', 'l', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 0,
    'S', 'e', 'r', 'v', 'i', 'c', 'e', 'R', 'e', 'c', 'o', 'r', 'd', 'S', 't', 'a', 't', 'e', 0,
    'd', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'e', 'd', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 's', 0,
    'd', 'e', 'v', 'i', 'c', 'e', 'D', 'i', 's', 'c', 'o', 'n', 'n', 'e', 'c', 't', 'e', 'd', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'H', 'o', 's', 't', 'I', 'n', 'f', 'o', 0,
    'c', 'o', 'r', 'e', 'C', 'o', 'n', 'f', 'i', 'g', 'u', 'r', 'a', 't', 'i', 'o', 'n', 's', 0,
    'I', 'n', 'f', 'o', 'r', 'm', 'a', 't', 'i', 'o', 'n', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 'i', 'n', 'g', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'H', 'e', 'a', 'l', 't', 'h', 'G', 'l', 'u', 'c', 'o', 's', 'e', 'M', 'e', 't', 'e', 'r', 0,
    'W', 'e', 'a', 'r', 'a', 'b', 'l', 'e', 'W', 'r', 'i', 's', 't', 'W', 'a', 't', 'c', 'h', 0,
    'J', 'o', 'y', 's', 't', 'i', 'c', 'k', 'P', 'e', 'r', 'i', 'p', 'h', 'e', 'r', 'a', 'l', 0,
    'K', 'e', 'y', 'b', 'o', 'a', 'r', 'd', 'P', 'e', 'r', 'i', 'p', 'h', 'e', 'r', 'a', 'l', 0,
    'N', 'e', 't', 'w', 'o', 'r', 'k', 'F', 'u', 'l', 'l', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'U', 'n', 'c', 'a', 't', 'e', 'g', 'o', 'r', 'i', 'z', 'e', 'd', 'P', 'h', 'o', 'n', 'e', 0,
    'a', 'd', 'd', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', 0,
    'd', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 'W', 'r', 'i', 't', 't', 'e', 'n', 0,
    'W', 'r', 'i', 't', 'e', 'W', 'i', 't', 'h', 'R', 'e', 's', 'p', 'o', 'n', 's', 'e', 0,
    'S', 'e', 'r', 'v', 'i', 'c', 'e', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'e', 'd', 0,
    'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'y', 'R', 'e', 'q', 'u', 'i', 'r', 'e', 'd', 0,
    'Q', 'L', 'o', 'w', 'E', 'n', 'e', 'r', 'g', 'y', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'c', 'o', 'n', 'n', 'e', 'c', 't', 'i', 'o', 'n', 'U', 'p', 'd', 'a', 't', 'e', 'd', 0,
    'd', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'y', 'F', 'i', 'n', 'i', 's', 'h', 'e', 'd', 0,
    'r', 'e', 'm', 'o', 't', 'e', 'A', 'd', 'd', 'r', 'e', 's', 's', 'T', 'y', 'p', 'e', 0,
    'i', 'n', 'c', 'l', 'u', 'd', 'e', 'P', 'o', 'w', 'e', 'r', 'L', 'e', 'v', 'e', 'l', 0,
    'W', 'e', 'i', 'g', 'h', 't', 'M', 'e', 'a', 's', 'u', 'r', 'e', 'm', 'e', 'n', 't', 0,
    'A', 'p', 'p', 'a', 'r', 'e', 'n', 't', 'W', 'i', 'n', 'd', 'S', 'p', 'e', 'e', 'd', 0,
    'T', 'r', 'u', 'e', 'W', 'i', 'n', 'd', 'D', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'U', 'n', 'r', 'e', 'a', 'd', 'A', 'l', 'e', 'r', 't', 'S', 't', 'a', 't', 'u', 's', 0,
    'M', 'o', 'd', 'e', 'l', 'N', 'u', 'm', 'b', 'e', 'r', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'D', 'e', 'v', 'i', 'c', 'e', 'I', 'n', 'f', 'o', 'r', 'm', 'a', 't', 'i', 'o', 'n', 0,
    'S', 'y', 'n', 'c', 'h', 'r', 'o', 'n', 'i', 'z', 'a', 't', 'i', 'o', 'n', '3', 'D', 0,
    'V', 'i', 'd', 'e', 'o', 'D', 'i', 's', 't', 'r', 'i', 'b', 'u', 't', 'i', 'o', 'n', 0,
    'G', 'e', 'n', 'e', 'r', 'i', 'c', 'N', 'e', 't', 'w', 'o', 'r', 'k', 'i', 'n', 'g', 0,
    'R', 'e', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 'P', 'r', 'i', 'n', 't', 'i', 'n', 'g', 0,
    'L', 'A', 'N', 'A', 'c', 'c', 'e', 's', 's', 'U', 's', 'i', 'n', 'g', 'P', 'P', 'P', 0,
    'P', 'u', 'b', 'l', 'i', 'c', 'B', 'r', 'o', 'w', 's', 'e', 'G', 'r', 'o', 'u', 'p', 0,
    'R', 'e', 's', 'o', 'u', 'r', 'c', 'e', 'B', 'u', 's', 'y', 'E', 'r', 'r', 'o', 'r', 0,
    'F', 'i', 'l', 'e', 'N', 'o', 't', 'F', 'o', 'u', 'n', 'd', 'E', 'r', 'r', 'o', 'r', 0,
    'd', 'o', 'D', 'e', 'v', 'i', 'c', 'e', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'y', 0,
    'H', 'o', 's', 't', 'N', 'o', 't', 'F', 'o', 'u', 'n', 'd', 'E', 'r', 'r', 'o', 'r', 0,
    's', 'e', 'r', 'v', 'i', 'c', 'e', 'C', 'l', 'a', 's', 's', 'U', 'u', 'i', 'd', 's', 0,
    'u', 'n', 'r', 'e', 'g', 'i', 's', 't', 'e', 'r', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    's', 'e', 'r', 'v', 'i', 'c', 'e', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'e', 'd', 0,
    'N', 'e', 't', 'w', 'o', 'r', 'k', 'i', 'n', 'g', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'H', 'e', 'a', 'l', 't', 'h', 'S', 't', 'e', 'p', 'C', 'o', 'u', 'n', 't', 'e', 'r', 0,
    'H', 'e', 'a', 'l', 't', 'h', 'D', 'a', 't', 'a', 'D', 'i', 's', 'p', 'l', 'a', 'y', 0,
    'H', 'e', 'a', 'l', 't', 'h', 'W', 'e', 'i', 'g', 'h', 't', 'S', 'c', 'a', 'l', 'e', 0,
    'H', 'e', 'a', 'l', 't', 'h', 'T', 'h', 'e', 'r', 'm', 'o', 'm', 'e', 't', 'e', 'r', 0,
    'G', 'a', 'm', 'e', 'p', 'a', 'd', 'P', 'e', 'r', 'i', 'p', 'h', 'e', 'r', 'a', 'l', 0,
    'V', 'i', 'd', 'e', 'o', 'C', 'o', 'n', 'f', 'e', 'r', 'e', 'n', 'c', 'i', 'n', 'g', 0,
    'd', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'e', 'd', 'D', 'e', 'v', 'i', 'c', 'e', 's', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'A', 'd', 'd', 'r', 'e', 's', 's', 0,
    'P', 'y', 'Q', 't', '5', '.', 'Q', 't', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 0,
    'i', 'n', 'c', 'l', 'u', 'd', 'e', 'd', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 's', 0,
    'r', 'e', 'm', 'o', 't', 'e', 'D', 'e', 'v', 'i', 'c', 'e', 'U', 'u', 'i', 'd', 0,
    's', 't', 'a', 'r', 't', 'A', 'd', 'v', 'e', 'r', 't', 'i', 's', 'i', 'n', 'g', 0,
    's', 'c', 'a', 'n', 'R', 'e', 's', 'p', 'o', 'n', 's', 'e', 'D', 'a', 't', 'a', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'P', 'e', 'r', 'i', 'p', 'h', 'e', 'r', 'a', 'l', 0,
    'd', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 's', 0,
    'A', 'd', 'v', 'e', 'r', 't', 'i', 's', 'i', 'n', 'g', 'S', 't', 'a', 't', 'e', 0,
    'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'i', 'n', 'g', 'S', 't', 'a', 't', 'e', 0,
    'A', 'd', 'v', 'e', 'r', 't', 'i', 's', 'i', 'n', 'g', 'E', 'r', 'r', 'o', 'r', 0,
    's', 'e', 't', 'I', 'n', 't', 'e', 'r', 'v', 'a', 'l', 'R', 'a', 'n', 'g', 'e', 0,
    'w', 'r', 'i', 't', 'e', 'C', 'o', 'n', 's', 't', 'r', 'a', 'i', 'n', 't', 's', 0,
    'E', 'x', 't', 'e', 'n', 'd', 'e', 'd', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    'p', 'r', 'o', 't', 'o', 'c', 'o', 'l', 'T', 'o', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'U', 's', 'e', 'r', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'P', 'o', 'i', 'n', 't', 0,
    'R', 'e', 's', 't', 'i', 'n', 'g', 'H', 'e', 'a', 'r', 't', 'R', 'a', 't', 'e', 0,
    'H', 'i', 'p', 'C', 'i', 'r', 'c', 'u', 'm', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 0,
    'A', 'e', 'r', 'o', 'b', 'i', 'c', 'T', 'h', 'r', 'e', 's', 'h', 'o', 'l', 'd', 0,
    'L', 'o', 'c', 'a', 't', 'i', 'o', 'n', 'A', 'n', 'd', 'S', 'p', 'e', 'e', 'd', 0,
    'G', 'e', 'n', 'e', 'r', 'i', 'c', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 0,
    'G', 'e', 'n', 'e', 'r', 'i', 'c', 'T', 'e', 'l', 'e', 'p', 'h', 'o', 'n', 'y', 0,
    'I', 'm', 'a', 'g', 'i', 'n', 'g', 'R', 'e', 's', 'p', 'o', 'n', 'd', 'e', 'r', 0,
    'A', 'V', '_', 'R', 'e', 'm', 'o', 't', 'e', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'O', 'B', 'E', 'X', 'F', 'i', 'l', 'e', 'T', 'r', 'a', 'n', 's', 'f', 'e', 'r', 0,
    'D', 'i', 'a', 'l', 'u', 'p', 'N', 'e', 't', 'w', 'o', 'r', 'k', 'i', 'n', 'g', 0,
    't', 'r', 'a', 'n', 's', 'f', 'e', 'r', 'P', 'r', 'o', 'g', 'r', 'e', 's', 's', 0,
    's', 'o', 'c', 'k', 'e', 't', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 0,
    'c', 'o', 'n', 'n', 'e', 'c', 't', 'T', 'o', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'U', 'n', 'c', 'o', 'n', 'n', 'e', 'c', 't', 'e', 'd', 'S', 't', 'a', 't', 'e', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'S', 'o', 'c', 'k', 'e', 't', 0,
    'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 'U', 'r', 'l', 0,
    's', 'e', 't', 'R', 'e', 'm', 'o', 't', 'e', 'A', 'd', 'd', 'r', 'e', 's', 's', 0,
    'M', 'i', 'n', 'i', 'm', 'a', 'l', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'y', 0,
    's', 'e', 't', 'S', 'e', 'c', 'u', 'r', 'i', 't', 'y', 'F', 'l', 'a', 'g', 's', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'S', 'e', 'r', 'v', 'e', 'r', 0,
    'c', 'o', 'n', 'n', 'e', 'c', 't', 'e', 'd', 'D', 'e', 'v', 'i', 'c', 'e', 's', 0,
    'H', 'o', 's', 't', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'a', 'b', 'l', 'e', 0,
    'A', 'u', 't', 'h', 'o', 'r', 'i', 'z', 'e', 'd', 'P', 'a', 'i', 'r', 'e', 'd', 0,
    'm', 'a', 'n', 'u', 'f', 'a', 'c', 't', 'u', 'r', 'e', 'r', 'D', 'a', 't', 'a', 0,
    'm', 'i', 'n', 'o', 'r', 'D', 'e', 'v', 'i', 'c', 'e', 'C', 'l', 'a', 's', 's', 0,
    'm', 'a', 'j', 'o', 'r', 'D', 'e', 'v', 'i', 'c', 'e', 'C', 'l', 'a', 's', 's', 0,
    'T', 'e', 'l', 'e', 'p', 'h', 'o', 'n', 'y', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'C', 'a', 'p', 't', 'u', 'r', 'i', 'n', 'g', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'R', 'e', 'n', 'd', 'e', 'r', 'i', 'n', 'g', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'U', 'n', 'c', 'a', 't', 'e', 'g', 'o', 'r', 'i', 'z', 'e', 'd', 'T', 'o', 'y', 0,
    'N', 'e', 't', 'w', 'o', 'r', 'k', 'N', 'o', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'W', 'e', 'a', 'r', 'a', 'b', 'l', 'e', 'C', 'o', 'm', 'p', 'u', 't', 'e', 'r', 0,
    'H', 'a', 'n', 'd', 'h', 'e', 'l', 'd', 'C', 'o', 'm', 'p', 'u', 't', 'e', 'r', 0,
    'P', 'e', 'r', 'i', 'p', 'h', 'e', 'r', 'a', 'l', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    'd', 'e', 'v', 'i', 'c', 'e', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'e', 'd', 0,
    'w', 'a', 'i', 't', 'F', 'o', 'r', 'R', 'e', 'a', 'd', 'y', 'R', 'e', 'a', 'd', 0,
    'I', 'n', 'p', 'u', 't', 'O', 'u', 't', 'p', 'u', 't', 'E', 'r', 'r', 'o', 'r', 0,
    'd', 'i', 's', 'c', 'o', 'n', 'n', 'e', 'c', 't', 'N', 'o', 't', 'i', 'f', 'y', 0,
    'w', 'r', 'i', 't', 'e', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 0,
    'd', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'D', 'e', 't', 'a', 'i', 'l', 's', 0,
    'c', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', 's', 0,
    's', 't', 'o', 'p', 'A', 'd', 'v', 'e', 'r', 't', 'i', 's', 'i', 'n', 'g', 0,
    'c', 'o', 'n', 'n', 'e', 'c', 't', 'T', 'o', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'e', 'd', 'S', 't', 'a', 't', 'e', 0,
    'C', 'o', 'n', 'n', 'e', 'c', 't', 'i', 'o', 'n', 'E', 'r', 'r', 'o', 'r', 0,
    'r', 'e', 'a', 'd', 'C', 'o', 'n', 's', 't', 'r', 'a', 'i', 'n', 't', 's', 0,
    'W', 'r', 'i', 't', 'e', 'N', 'o', 'R', 'e', 's', 'p', 'o', 'n', 's', 'e', 0,
    'm', 'a', 'x', 'i', 'm', 'u', 'm', 'I', 'n', 't', 'e', 'r', 'v', 'a', 'l', 0,
    'm', 'i', 'n', 'i', 'm', 'u', 'm', 'I', 'n', 't', 'e', 'r', 'v', 'a', 'l', 0,
    'I', 'g', 'n', 'o', 'r', 'e', 'W', 'h', 'i', 't', 'e', 'L', 'i', 's', 't', 0,
    'd', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'a', 'b', 'i', 'l', 'i', 't', 'y', 0,
    'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 'Q', 'u', 'a', 'l', 'i', 't', 'y', 0,
    'H', 'I', 'D', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'P', 'o', 'i', 'n', 't', 0,
    'A', 'l', 'e', 'r', 't', 'C', 'a', 't', 'e', 'g', 'o', 'r', 'y', 'I', 'D', 0,
    'T', 'e', 'm', 'p', 'e', 'r', 'a', 't', 'u', 'r', 'e', 'T', 'y', 'p', 'e', 0,
    'T', 'i', 'm', 'e', 'U', 'p', 'd', 'a', 't', 'e', 'S', 't', 'a', 't', 'e', 0,
    'B', 'o', 'd', 'y', 'C', 'o', 'm', 'p', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'P', 'h', 'o', 'n', 'e', 'b', 'o', 'o', 'k', 'A', 'c', 'c', 'e', 's', 's', 0,
    'I', 'r', 'M', 'C', 'S', 'y', 'n', 'c', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 0,
    'M', 'c', 'a', 'p', 'D', 'a', 't', 'a', 'C', 'h', 'a', 'n', 'n', 'e', 'l', 0,
    'L', 'e', 'n', 'g', 't', 'h', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 0,
    'C', 'o', 'n', 'n', 'e', 'c', 't', 'i', 'n', 'g', 'S', 't', 'a', 't', 'e', 0,
    's', 'e', 'r', 'v', 'i', 'c', 'e', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 0,
    'r', 'e', 'm', 'o', 'v', 'e', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 0,
    'U', 'n', 'k', 'n', 'o', 'w', 'n', 'P', 'r', 'o', 't', 'o', 'c', 'o', 'l', 0,
    'B', 'r', 'o', 'w', 's', 'e', 'G', 'r', 'o', 'u', 'p', 'L', 'i', 's', 't', 0,
    'S', 'e', 'r', 'v', 'i', 'c', 'e', 'C', 'l', 'a', 's', 's', 'I', 'd', 's', 0,
    'd', 'e', 'v', 'i', 'c', 'e', 'C', 'o', 'n', 'n', 'e', 'c', 't', 'e', 'd', 0,
    'p', 'a', 'i', 'r', 'i', 'n', 'g', 'F', 'i', 'n', 'i', 's', 'h', 'e', 'd', 0,
    'H', 'o', 's', 't', 'C', 'o', 'n', 'n', 'e', 'c', 't', 'a', 'b', 'l', 'e', 0,
    'm', 'a', 'n', 'u', 'f', 'a', 'c', 't', 'u', 'r', 'e', 'r', 'I', 'd', 's', 0,
    's', 'e', 't', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'U', 'u', 'i', 'd', 's', 0,
    'D', 'a', 't', 'a', 'U', 'n', 'a', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 0,
    'W', 'e', 'a', 'r', 'a', 'b', 'l', 'e', 'G', 'l', 'a', 's', 's', 'e', 's', 0,
    'H', 'i', 'F', 'i', 'A', 'u', 'd', 'i', 'o', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    'H', 'a', 'n', 'd', 's', 'F', 'r', 'e', 'e', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    'D', 'e', 's', 'k', 't', 'o', 'p', 'C', 'o', 'm', 'p', 'u', 't', 'e', 'r', 0,
    'L', 'A', 'N', 'A', 'c', 'c', 'e', 's', 's', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    'P', 'o', 'w', 'e', 'r', 'e', 'd', 'O', 'f', 'f', 'E', 'r', 'r', 'o', 'r', 0,
    'Q', 'L', 'i', 's', 't', '<', 'q', 'u', 'i', 'n', 't', '1', '6', '>', 0,
    'd', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 'R', 'e', 'a', 'd', 0,
    'r', 'e', 'a', 'd', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 0,
    'c', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'i', 's', 't', 'i', 'c', 0,
    'I', 'n', 'v', 'a', 'l', 'i', 'd', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'P', 'r', 'i', 'm', 'a', 'r', 'y', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'P', 'e', 'r', 'i', 'p', 'h', 'e', 'r', 'a', 'l', 'R', 'o', 'l', 'e', 0,
    's', 'e', 't', 'V', 'a', 'l', 'u', 'e', 'L', 'e', 'n', 'g', 't', 'h', 0,
    's', 'e', 't', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 's', 0,
    'L', 'N', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'P', 'o', 'i', 'n', 't', 0,
    'C', 'S', 'C', 'M', 'e', 'a', 's', 'u', 'r', 'e', 'm', 'e', 'n', 't', 0,
    'S', 'C', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'P', 'o', 'i', 'n', 't', 0,
    'R', 'S', 'C', 'M', 'e', 'a', 's', 'u', 'r', 'e', 'm', 'e', 'n', 't', 0,
    'G', 'l', 'u', 'c', 'o', 's', 'e', 'F', 'e', 'a', 't', 'u', 'r', 'e', 0,
    'H', 'I', 'D', 'I', 'n', 'f', 'o', 'r', 'm', 'a', 't', 'i', 'o', 'n', 0,
    'S', 'e', 'r', 'v', 'i', 'c', 'e', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'B', 'o', 'n', 'd', 'M', 'a', 'n', 'a', 'g', 'e', 'm', 'e', 'n', 't', 0,
    'S', 'c', 'a', 'n', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 's', 0,
    'B', 'a', 't', 't', 'e', 'r', 'y', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'I', 'm', 'm', 'e', 'd', 'i', 'a', 't', 'e', 'A', 'l', 'e', 'r', 't', 0,
    'P', 'n', 'P', 'I', 'n', 'f', 'o', 'r', 'm', 'a', 't', 'i', 'o', 'n', 0,
    'P', 'r', 'i', 'n', 't', 'i', 'n', 'g', 'S', 't', 'a', 't', 'u', 's', 0,
    'D', 'i', 'r', 'e', 'c', 't', 'P', 'r', 'i', 'n', 't', 'i', 'n', 'g', 0,
    'O', 'b', 'e', 'x', 'O', 'b', 'j', 'e', 'c', 't', 'P', 'u', 's', 'h', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 'U', 'u', 'i', 'd', 0,
    's', 'e', 't', 'S', 'o', 'c', 'k', 'e', 't', 'E', 'r', 'r', 'o', 'r', 0,
    's', 'e', 't', 'S', 'o', 'c', 'k', 'e', 't', 'S', 't', 'a', 't', 'e', 0,
    'O', 'p', 'e', 'r', 'a', 't', 'i', 'o', 'n', 'E', 'r', 'r', 'o', 'r', 0,
    'L', 'i', 's', 't', 'e', 'n', 'i', 'n', 'g', 'S', 't', 'a', 't', 'e', 0,
    'C', 'o', 'n', 'n', 'e', 'c', 't', 'e', 'd', 'S', 't', 'a', 't', 'e', 0,
    's', 'e', 't', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'U', 'u', 'i', 'd', 0,
    's', 'e', 't', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 'N', 'a', 'm', 'e', 0,
    's', 'o', 'c', 'k', 'e', 't', 'P', 'r', 'o', 't', 'o', 'c', 'o', 'l', 0,
    'R', 'f', 'c', 'o', 'm', 'm', 'P', 'r', 'o', 't', 'o', 'c', 'o', 'l', 0,
    'r', 'e', 'q', 'u', 'e', 's', 't', 'P', 'a', 'i', 'r', 'i', 'n', 'g', 0,
    'H', 'o', 's', 't', 'P', 'o', 'w', 'e', 'r', 'e', 'd', 'O', 'f', 'f', 0,
    'm', 'a', 'n', 'u', 'f', 'a', 'c', 't', 'u', 'r', 'e', 'r', 'I', 'd', 0,
    's', 'e', 'r', 'v', 'i', 'c', 'e', 'C', 'l', 'a', 's', 's', 'e', 's', 0,
    'D', 'a', 't', 'a', 'I', 'n', 'c', 'o', 'm', 'p', 'l', 'e', 't', 'e', 0,
    'W', 'e', 'a', 'r', 'a', 'b', 'l', 'e', 'H', 'e', 'l', 'm', 'e', 't', 0,
    'W', 'e', 'a', 'r', 'a', 'b', 'l', 'e', 'J', 'a', 'c', 'k', 'e', 't', 0,
    'L', 'a', 'p', 't', 'o', 'p', 'C', 'o', 'm', 'p', 'u', 't', 'e', 'r', 0,
    'S', 'e', 'r', 'v', 'e', 'r', 'C', 'o', 'm', 'p', 'u', 't', 'e', 'r', 0,
    'C', 'o', 'm', 'p', 'u', 't', 'e', 'r', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    's', 'e', 't', 'I', 'n', 'q', 'u', 'i', 'r', 'y', 'T', 'y', 'p', 'e', 0,
    'A', 'u', 't', 'h', 'e', 'n', 't', 'i', 'c', 'a', 't', 'i', 'o', 'n', 0,
    'b', 'y', 't', 'e', 's', 'A', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'C', 'e', 'n', 't', 'r', 'a', 'l', 0,
    'R', 'a', 'n', 'd', 'o', 'm', 'A', 'd', 'd', 'r', 'e', 's', 's', 0,
    'P', 'u', 'b', 'l', 'i', 'c', 'A', 'd', 'd', 'r', 'e', 's', 's', 0,
    'a', 'd', 'd', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 0,
    's', 'e', 't', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'i', 'e', 's', 0,
    'A', 'd', 'v', 'N', 'o', 'n', 'C', 'o', 'n', 'n', 'I', 'n', 'd', 0,
    'T', 'r', 'u', 'e', 'W', 'i', 'n', 'd', 'S', 'p', 'e', 'e', 'd', 0,
    'R', 'i', 'n', 'g', 'e', 'r', 'S', 'e', 't', 't', 'i', 'n', 'g', 0,
    'B', 'l', 'o', 'o', 'd', 'P', 'r', 'e', 's', 's', 'u', 'r', 'e', 0,
    'G', 'e', 'n', 'e', 'r', 'i', 'c', 'A', 'c', 'c', 'e', 's', 's', 0,
    'B', 'a', 's', 'i', 'c', 'P', 'r', 'i', 'n', 't', 'i', 'n', 'g', 0,
    'N', 'a', 'm', 'e', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 0,
    'T', 'y', 'p', 'e', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 0,
    'T', 'i', 'm', 'e', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 0,
    'N', 'o', 'S', 'o', 'c', 'k', 'e', 't', 'E', 'r', 'r', 'o', 'r', 0,
    's', 'e', 'r', 'v', 'e', 'r', 'C', 'h', 'a', 'n', 'n', 'e', 'l', 0,
    'L', '2', 'c', 'a', 'p', 'P', 'r', 'o', 't', 'o', 'c', 'o', 'l', 0,
    'r', 'e', 'm', 'o', 't', 'e', 'A', 'd', 'd', 'r', 'e', 's', 's', 0,
    's', 'e', 't', 'U', 'u', 'i', 'd', 'F', 'i', 'l', 't', 'e', 'r', 0,
    'F', 'u', 'l', 'l', 'D', 'i', 's', 'c', 'o', 'v', 'e', 'r', 'y', 0,
    'n', 'e', 'w', 'C', 'o', 'n', 'n', 'e', 'c', 't', 'i', 'o', 'n', 0,
    's', 'e', 'c', 'u', 'r', 'i', 't', 'y', 'F', 'l', 'a', 'g', 's', 0,
    's', 'e', 'r', 'v', 'e', 'r', 'A', 'd', 'd', 'r', 'e', 's', 's', 0,
    'p', 'a', 'i', 'r', 'i', 'n', 'g', 'S', 't', 'a', 't', 'u', 's', 0,
    's', 'e', 't', 'D', 'e', 'v', 'i', 'c', 'e', 'U', 'u', 'i', 'd', 0,
    'T', 'o', 'y', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'l', 'e', 'r', 0,
    'W', 'e', 'a', 'r', 'a', 'b', 'l', 'e', 'P', 'a', 'g', 'e', 'r', 0,
    'C', 'o', 'r', 'd', 'l', 'e', 's', 's', 'P', 'h', 'o', 'n', 'e', 0,
    'C', 'e', 'l', 'l', 'u', 'l', 'a', 'r', 'P', 'h', 'o', 'n', 'e', 0,
    'd', 'e', 'v', 'i', 'c', 'e', 'U', 'p', 'd', 'a', 't', 'e', 'd', 0,
    'A', 'u', 't', 'h', 'o', 'r', 'i', 'z', 'a', 't', 'i', 'o', 'n', 0,
    'L', 'o', 'c', 'a', 'l', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'B', 'r', 'o', 'a', 'd', 'c', 'a', 's', 't', 'i', 'n', 'g', 0,
    'f', 'i', 'l', 't', 'e', 'r', 'P', 'o', 'l', 'i', 'c', 'y', 0,
    's', 'e', 't', 'W', 'h', 'i', 't', 'e', 'L', 'i', 's', 't', 0,
    's', 'e', 't', 'L', 'o', 'c', 'a', 'l', 'N', 'a', 'm', 'e', 0,
    'H', 'e', 'a', 'r', 't', 'R', 'a', 't', 'e', 'M', 'a', 'x', 0,
    'E', 'm', 'a', 'i', 'l', 'A', 'd', 'd', 'r', 'e', 's', 's', 0,
    'P', 'r', 'o', 't', 'o', 'c', 'o', 'l', 'M', 'o', 'd', 'e', 0,
    'B', 'a', 't', 't', 'e', 'r', 'y', 'L', 'e', 'v', 'e', 'l', 0,
    'T', 'i', 'm', 'e', 'A', 'c', 'c', 'u', 'r', 'a', 'c', 'y', 0,
    'E', 'x', 'a', 'c', 't', 'T', 'i', 'm', 'e', '2', '5', '6', 0,
    'T', 'x', 'P', 'o', 'w', 'e', 'r', 'L', 'e', 'v', 'e', 'l', 0,
    'C', 'y', 'c', 'l', 'i', 'n', 'g', 'P', 'o', 'w', 'e', 'r', 0,
    'G', 'e', 'n', 'e', 'r', 'i', 'c', 'A', 'u', 'd', 'i', 'o', 0,
    'S', 'e', 's', 's', 'i', 'o', 'n', 'E', 'r', 'r', 'o', 'r', 0,
    'd', 'i', 's', 'c', 'o', 'n', 'n', 'e', 'c', 't', 'e', 'd', 0,
    'l', 'o', 'c', 'a', 'l', 'A', 'd', 'd', 'r', 'e', 's', 's', 0,
    'N', 'e', 't', 'w', 'o', 'r', 'k', 'E', 'r', 'r', 'o', 'r', 0,
    'C', 'l', 'o', 's', 'i', 'n', 'g', 'S', 't', 'a', 't', 'e', 0,
    'l', 'o', 'c', 'a', 'l', 'A', 'd', 'a', 'p', 't', 'e', 'r', 0,
    'P', 'a', 'i', 'r', 'i', 'n', 'g', 'E', 'r', 'r', 'o', 'r', 0,
    's', 'e', 'r', 'v', 'i', 'c', 'e', 'U', 'u', 'i', 'd', 's', 0,
    'c', 'o', 'm', 'p', 'l', 'e', 't', 'e', 'n', 'e', 's', 's', 0,
    'D', 'a', 't', 'a', 'C', 'o', 'm', 'p', 'l', 'e', 't', 'e', 0,
    'A', 'u', 'd', 'i', 'o', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'I', 'm', 'a', 'g', 'e', 'P', 'r', 'i', 'n', 't', 'e', 'r', 0,
    'I', 'm', 'a', 'g', 'e', 'S', 'c', 'a', 'n', 'n', 'e', 'r', 0,
    'I', 'm', 'a', 'g', 'e', 'D', 'i', 's', 'p', 'l', 'a', 'y', 0,
    'G', 'a', 'm', 'i', 'n', 'g', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    'V', 'i', 'd', 'e', 'o', 'M', 'o', 'n', 'i', 't', 'o', 'r', 0,
    'i', 's', 'R', 'e', 'g', 'i', 's', 't', 'e', 'r', 'e', 'd', 0,
    'b', 'y', 't', 'e', 's', 'T', 'o', 'W', 'r', 'i', 't', 'e', 0,
    'r', 'e', 'a', 'd', 'L', 'i', 'n', 'e', 'D', 'a', 't', 'a', 0,
    'i', 's', 'S', 'e', 'q', 'u', 'e', 'n', 't', 'i', 'a', 'l', 0,
    's', 'e', 't', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 0,
    'U', 'n', 'k', 'n', 'o', 'w', 'n', 'E', 'r', 'r', 'o', 'r', 0,
    's', 't', 'a', 't', 'e', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', 'V', 'a', 'l', 'u', 'e', 0,
    'C', 'e', 'n', 't', 'r', 'a', 'l', 'R', 'o', 'l', 'e', 0,
    'c', 'o', 'n', 's', 't', 'r', 'a', 'i', 'n', 't', 's', 0,
    'd', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 's', 0,
    'W', 'r', 'i', 't', 'e', 'S', 'i', 'g', 'n', 'e', 'd', 0,
    's', 'e', 't', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 's', 0,
    'D', 'a', 't', 'e', 'O', 'f', 'B', 'i', 'r', 't', 'h', 0,
    'S', 'c', 'a', 'n', 'R', 'e', 'f', 'r', 'e', 's', 'h', 0,
    'C', 'u', 'r', 'r', 'e', 'n', 't', 'T', 'i', 'm', 'e', 0,
    'T', 'i', 'm', 'e', 'W', 'i', 't', 'h', 'D', 'S', 'T', 0,
    'D', 'a', 'y', 'D', 'a', 't', 'e', 'T', 'i', 'm', 'e', 0,
    'm', 'i', 'n', 'i', 'm', 'u', 'm', 'S', 'i', 'z', 'e', 0,
    'V', 'i', 'd', 'e', 'o', 'S', 'o', 'u', 'r', 'c', 'e', 0,
    'R', 'e', 'f', 'l', 'e', 'c', 't', 'e', 'd', 'U', 'I', 0,
    'A', 'u', 'd', 'i', 'o', 'S', 'o', 'u', 'r', 'c', 'e', 0,
    'p', 'e', 'e', 'r', 'A', 'd', 'd', 'r', 'e', 's', 's', 0,
    's', 'e', 'r', 'v', 'i', 'c', 'e', 'U', 'u', 'i', 'd', 0,
    'i', 's', 'L', 'i', 's', 't', 'e', 'n', 'i', 'n', 'g', 0,
    's', 'e', 'r', 'v', 'i', 'c', 'e', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'H', 'o', 's', 't', 'M', 'o', 'd', 'e', 0,
    'A', 'l', 'l', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 's', 0,
    'I', 'm', 'a', 'g', 'e', 'C', 'a', 'm', 'e', 'r', 'a', 0,
    'V', 'i', 'd', 'e', 'o', 'C', 'a', 'm', 'e', 'r', 'a', 0,
    'P', 'h', 'o', 'n', 'e', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    'i', 'n', 'q', 'u', 'i', 'r', 'y', 'T', 'y', 'p', 'e', 0,
    's', 'e', 't', 'I', 'n', 't', 'e', 'r', 'v', 'a', 'l', 0,
    'c', 'u', 's', 't', 'o', 'm', 'E', 'v', 'e', 'n', 't', 0,
    'e', 'v', 'e', 'n', 't', 'F', 'i', 'l', 't', 'e', 'r', 0,
    'e', 'r', 'r', 'o', 'r', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'c', 'a', 'n', 'R', 'e', 'a', 'd', 'L', 'i', 'n', 'e', 0,
    'a', 'd', 'd', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'r', 'e', 'm', 'o', 't', 'e', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'L', 'a', 't', 'e', 'n', 'c', 'y', 0,
    'd', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 0,
    'p', 'r', 'o', 'p', 'e', 'r', 't', 'i', 'e', 's', 0,
    'A', 'd', 'v', 'S', 'c', 'a', 'n', 'I', 'n', 'd', 0,
    's', 'e', 't', 'R', 'a', 'w', 'D', 'a', 't', 'a', 0,
    'V', 'a', 'l', 'i', 'd', 'R', 'a', 'n', 'g', 'e', 0,
    'I', 'r', 'r', 'a', 'd', 'i', 'a', 'n', 'c', 'e', 0,
    'G', 'u', 's', 't', 'F', 'a', 'c', 't', 'o', 'r', 0,
    'C', 'S', 'C', 'F', 'e', 'a', 't', 'u', 'r', 'e', 0,
    'R', 'S', 'C', 'F', 'e', 'a', 't', 'u', 'r', 'e', 0,
    'T', 'i', 'm', 'e', 'S', 'o', 'u', 'r', 'c', 'e', 0,
    'A', 'l', 'e', 'r', 't', 'L', 'e', 'v', 'e', 'l', 0,
    'A', 'p', 'p', 'e', 'a', 'r', 'a', 'n', 'c', 'e', 0,
    'D', 'e', 'v', 'i', 'c', 'e', 'N', 'a', 'm', 'e', 0,
    'M', 'P', 'S', 'S', 'e', 'r', 'v', 'i', 'c', 'e', 0,
    'M', 'P', 'S', 'P', 'r', 'o', 'f', 'i', 'l', 'e', 0,
    'G', 'N', 'S', 'S', 'S', 'e', 'r', 'v', 'e', 'r', 0,
    'B', 'a', 's', 'i', 'c', 'I', 'm', 'a', 'g', 'e', 0,
    'S', 'e', 'r', 'i', 'a', 'l', 'P', 'o', 'r', 't', 0,
    's', 'e', 't', 'R', 'e', 'q', 'u', 'e', 's', 't', 0,
    's', 'e', 't', 'M', 'a', 'n', 'a', 'g', 'e', 'r', 0,
    's', 'o', 'c', 'k', 'e', 't', 'T', 'y', 'p', 'e', 0,
    'B', 'o', 'u', 'n', 'd', 'S', 't', 'a', 't', 'e', 0,
    'i', 's', 'C', 'o', 'm', 'p', 'l', 'e', 't', 'e', 0,
    'u', 'u', 'i', 'd', 'F', 'i', 'l', 't', 'e', 'r', 0,
    's', 'e', 'r', 'v', 'e', 'r', 'P', 'o', 'r', 't', 0,
    's', 'e', 'r', 'v', 'e', 'r', 'T', 'y', 'p', 'e', 0,
    'a', 'l', 'l', 'D', 'e', 'v', 'i', 'c', 'e', 's', 0,
    's', 'e', 't', 'A', 'd', 'd', 'r', 'e', 's', 's', 0,
    'd', 'e', 'v', 'i', 'c', 'e', 'U', 'u', 'i', 'd', 0,
    'T', 'o', 'y', 'V', 'e', 'h', 'i', 'c', 'l', 'e', 0,
    'H', 'e', 'a', 'd', 'p', 'h', 'o', 'n', 'e', 's', 0,
    'M', 'i', 'c', 'r', 'o', 'p', 'h', 'o', 'n', 'e', 0,
    'S', 'm', 'a', 'r', 't', 'P', 'h', 'o', 'n', 'e', 0,
    'E', 'n', 'c', 'r', 'y', 'p', 't', 'i', 'o', 'n', 0,
    'N', 'o', 'S', 'e', 'c', 'u', 'r', 'i', 't', 'y', 0,
    'Q', 'B', 'l', 'u', 'e', 't', 'o', 'o', 't', 'h', 0,
    'a', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'i', 's', 'F', 'i', 'n', 'i', 's', 'h', 'e', 'd', 0,
    'c', 'h', 'i', 'l', 'd', 'E', 'v', 'e', 'n', 't', 0,
    't', 'i', 'm', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'i', 's', 'W', 'r', 'i', 't', 'a', 'b', 'l', 'e', 0,
    'i', 's', 'R', 'e', 'a', 'd', 'a', 'b', 'l', 'e', 0,
    '_', '_', 'r', 's', 'h', 'i', 'f', 't', '_', '_', 0,
    '_', '_', 'l', 's', 'h', 'i', 'f', 't', '_', '_', 0,
    '_', '_', 'i', 'n', 'v', 'e', 'r', 't', '_', '_', 0,
    'w', 'h', 'i', 't', 'e', 'L', 'i', 's', 't', 0,
    'U', 's', 'e', 'r', 'I', 'n', 'd', 'e', 'x', 0,
    'F', 'i', 'r', 's', 't', 'N', 'a', 'm', 'e', 0,
    'H', 'e', 'a', 't', 'I', 'n', 'd', 'e', 'x', 0,
    'W', 'i', 'n', 'd', 'C', 'h', 'i', 'l', 'l', 0,
    'E', 'l', 'e', 'v', 'a', 't', 'i', 'o', 'n', 0,
    'L', 'N', 'F', 'e', 'a', 't', 'u', 'r', 'e', 0,
    'R', 'e', 'p', 'o', 'r', 't', 'M', 'a', 'p', 0,
    'D', 'S', 'T', 'O', 'f', 'f', 's', 'e', 't', 0,
    't', 'o', 'U', 'I', 'n', 't', '1', '2', '8', 0,
    'G', 'l', 'a', 's', 's', 'e', 's', '3', 'D', 0,
    'D', 'i', 's', 'p', 'l', 'a', 'y', '3', 'D', 0,
    'H', 'D', 'P', 'S', 'o', 'u', 'r', 'c', 'e', 0,
    'V', 'i', 'd', 'e', 'o', 'S', 'i', 'n', 'k', 0,
    'H', 'e', 'a', 'd', 's', 'e', 't', 'H', 'S', 0,
    'S', 'I', 'M', 'A', 'c', 'c', 'e', 's', 's', 0,
    'H', 'a', 'n', 'd', 's', 'f', 'r', 'e', 'e', 0,
    'H', 'e', 'a', 'd', 's', 'e', 't', 'A', 'G', 0,
    'A', 'u', 'd', 'i', 'o', 'S', 'i', 'n', 'k', 0,
    'U', 'd', 'i', 'C', 'P', 'l', 'a', 'i', 'n', 0,
    'l', 'o', 'c', 'a', 'l', 'P', 'o', 'r', 't', 0,
    'l', 'o', 'c', 'a', 'l', 'N', 'a', 'm', 'e', 0,
    'S', 'e', 'r', 'v', 'i', 'c', 'e', 'I', 'd', 0,
    's', 'e', 't', 'C', 'a', 'c', 'h', 'e', 'd', 0,
    'C', 'a', 'm', 'c', 'o', 'r', 'd', 'e', 'r', 0,
    'S', 'e', 't', 'T', 'o', 'p', 'B', 'o', 'x', 0,
    'T', 'o', 'y', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    'i', 's', 'R', 'u', 'n', 'n', 'i', 'n', 'g', 0,
    'a', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 0,
    'w', 'r', 'i', 't', 'e', 'D', 'a', 't', 'a', 0,
    'D', 'a', 'y', 'O', 'f', 'W', 'e', 'e', 'k', 0,
    'q', 'u', 'i', 'n', 't', '1', '2', '8', 0,
    'I', 'n', 'd', 'i', 'c', 'a', 't', 'e', 0,
    's', 'e', 'r', 'v', 'i', 'c', 'e', 's', 0,
    'L', 'a', 's', 't', 'N', 'a', 'm', 'e', 0,
    'D', 'e', 'w', 'P', 'o', 'i', 'n', 't', 0,
    'R', 'a', 'i', 'n', 'f', 'a', 'l', 'l', 0,
    'H', 'u', 'm', 'i', 'd', 'i', 't', 'y', 0,
    'N', 'e', 'w', 'A', 'l', 'e', 'r', 't', 0,
    'S', 'y', 's', 't', 'e', 'm', 'I', 'D', 0,
    't', 'o', 'U', 'I', 'n', 't', '3', '2', 0,
    't', 'o', 'U', 'I', 'n', 't', '1', '6', 0,
    'U', 's', 'e', 'r', 'D', 'a', 't', 'a', 0,
    'L', 'i', 'n', 'k', 'L', 'o', 's', 's', 0,
    'H', 'C', 'R', 'P', 'r', 'i', 'n', 't', 0,
    'I', 'r', 'M', 'C', 'S', 'y', 'n', 'c', 0,
    'p', 'e', 'e', 'r', 'P', 'o', 'r', 't', 0,
    'p', 'e', 'e', 'r', 'N', 'a', 'm', 'e', 0,
    'h', 'o', 's', 't', 'M', 'o', 'd', 'e', 0,
    'U', 'n', 'p', 'a', 'i', 'r', 'e', 'd', 0,
    'i', 's', 'C', 'a', 'c', 'h', 'e', 'd', 0,
    'T', 'o', 'y', 'R', 'o', 'b', 'o', 't', 0,
    'C', 'a', 'r', 'A', 'u', 'd', 'i', 'o', 0,
    'c', 'a', 'n', 'c', 'e', 'l', 'e', 'd', 0,
    't', 'o', 'U', 'I', 'n', 't', '6', '4', 0,
    's', 'e', 't', 'V', 'a', 'l', 'u', 'e', 0,
    'L', 'a', 'n', 'g', 'u', 'a', 'g', 'e', 0,
    't', 'o', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'c', 'o', 'n', 't', 'a', 'i', 'n', 's', 0,
    'r', 'e', 'a', 'd', 'D', 'a', 't', 'a', 0,
    'i', 's', 'A', 'c', 't', 'i', 'v', 'e', 0,
    'f', 'i', 'n', 'i', 's', 'h', 'e', 'd', 0,
    'T', 'i', 'm', 'e', 'Z', 'o', 'n', 'e', 0,
    '_', '_', 'h', 'a', 's', 'h', '_', '_', 0,
    '_', '_', 'b', 'o', 'o', 'l', '_', '_', 0,
    '_', '_', 'i', 'x', 'o', 'r', '_', '_', 0,
    '_', '_', 'i', 'a', 'n', 'd', '_', '_', 0,
    'l', 'a', 't', 'e', 'n', 'c', 'y', 0,
    's', 'e', 't', 'U', 'u', 'i', 'd', 0,
    's', 'e', 't', 'M', 'o', 'd', 'e', 0,
    'U', 'V', 'I', 'n', 'd', 'e', 'x', 0,
    'G', 'l', 'u', 'c', 'o', 's', 'e', 0,
    'T', 'x', 'P', 'o', 'w', 'e', 'r', 0,
    'H', 'D', 'P', 'S', 'i', 'n', 'k', 0,
    'H', 'C', 'R', 'S', 'c', 'a', 'n', 0,
    'H', 'e', 'a', 'd', 's', 'e', 't', 0,
    'm', 'a', 'n', 'a', 'g', 'e', 'r', 0,
    'r', 'e', 'q', 'u', 'e', 's', 't', 0,
    'I', 'c', 'o', 'n', 'U', 'r', 'l', 0,
    'p', 'o', 'w', 'e', 'r', 'O', 'n', 0,
    's', 'e', 't', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'R', 's', 's', 'i', 0,
    'T', 'o', 'y', 'G', 'a', 'm', 'e', 0,
    'T', 'o', 'y', 'D', 'o', 'l', 'l', 0,
    'U', 'n', 'k', 'n', 'o', 'w', 'n', 0,
    'r', 'a', 'w', 'D', 'a', 't', 'a', 0,
    'a', 'd', 'd', 'r', 'e', 's', 's', 0,
    's', 'e', 't', 'T', 'y', 'p', 'e', 0,
    'N', 'o', 'E', 'r', 'r', 'o', 'r', 0,
    'i', 's', 'V', 'a', 'l', 'i', 'd', 0,
    '_', '_', 'x', 'o', 'r', '_', '_', 0,
    '_', '_', 'i', 'o', 'r', '_', '_', 0,
    '_', '_', 'a', 'n', 'd', '_', '_', 0,
    '_', '_', 'i', 'n', 't', '_', '_', 0,
    'A', 'd', 'v', 'I', 'n', 'd', 0,
    'W', 'e', 'i', 'g', 'h', 't', 0,
    'V', 'O', '2', 'M', 'a', 'x', 0,
    'H', 'e', 'i', 'g', 'h', 't', 0,
    'G', 'e', 'n', 'd', 'e', 'r', 0,
    'T', 'c', 's', 'B', 'i', 'n', 0,
    'R', 'f', 'c', 'o', 'm', 'm', 0,
    'l', 'i', 's', 't', 'e', 'n', 0,
    'S', 'e', 'c', 'u', 'r', 'e', 0,
    'h', 'a', 'n', 'd', 'l', 'e', 0,
    'd', 'e', 'v', 'i', 'c', 'e', 0,
    '_', '_', 'g', 'e', '_', '_', 0,
    'i', 's', 'N', 'u', 'l', 'l', 0,
    '_', '_', 'l', 't', '_', '_', 0,
    'p', 'a', 'r', 'e', 'n', 't', 0,
    '_', '_', 'n', 'e', '_', '_', 0,
    '_', '_', 'e', 'q', '_', '_', 0,
    '_', '_', 'o', 'r', '_', '_', 0,
    'P', 'n', 'P', 'I', 'D', 0,
    'L', '2', 'c', 'a', 'p', 0,
    'A', 'v', 'd', 't', 'p', 0,
    'A', 'v', 'c', 't', 'p', 0,
    'T', 'c', 's', 'A', 't', 0,
    'a', 'b', 'o', 'r', 't', 0,
    'e', 'r', 'r', 'o', 'r', 0,
    'N', 'o', 'n', 'e', '_', 0,
    'r', 'e', 's', 'e', 't', 0,
    'a', 't', 'E', 'n', 'd', 0,
    'c', 'l', 'o', 's', 'e', 0,
    'c', 'l', 'e', 'a', 'r', 0,
    'v', 'a', 'l', 'u', 'e', 0,
    'e', 'v', 'e', 'n', 't', 0,
    's', 't', 'a', 'r', 't', 0,
    's', 't', 'a', 't', 'e', 0,
    'G', 'N', 'S', 'S', 0,
    'P', 'A', 'N', 'U', 0,
    'C', 'm', 't', 'p', 0,
    'H', 'i', 'd', 'p', 0,
    'U', 'p', 'n', 'p', 0,
    'B', 'n', 'e', 'p', 0,
    'H', 't', 't', 'p', 0,
    'O', 'b', 'e', 'x', 0,
    'R', 'S', 'S', 'I', 0,
    'r', 's', 's', 'i', 0,
    'u', 'u', 'i', 'd', 0,
    'm', 'o', 'd', 'e', 0,
    'n', 'a', 'm', 'e', 0,
    's', 'e', 'e', 'k', 0,
    'o', 'p', 'e', 'n', 0,
    's', 'i', 'z', 'e', 0,
    't', 'y', 'p', 'e', 0,
    's', 'w', 'a', 'p', 0,
    'r', 'o', 'l', 'e', 0,
    's', 't', 'o', 'p', 0,
    'A', 'g', 'e', 0,
    'H', 'D', 'P', 0,
    'N', 'A', 'P', 0,
    'W', 's', 'p', 0,
    'F', 't', 'p', 0,
    'A', 't', 't', 0,
    'T', 'c', 'p', 0,
    'U', 'd', 'p', 0,
    'S', 'd', 'p', 0,
    'p', 'u', 't', 0,
    'A', 'l', 'l', 0,
    'V', 'c', 'r', 0,
    'p', 'o', 's', 0,
    'G', 'N', 0,
    'I', 'p', 0,
    'o', 'k', 0,
};

 ::QString sipVH_QtBluetooth_16(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::QString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QString, &sipRes);

    return sipRes;
}

 ::QBluetoothTransferReply::TransferError sipVH_QtBluetooth_15(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::QBluetoothTransferReply::TransferError sipRes =  ::QBluetoothTransferReply::NoError;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "F", sipType_QBluetoothTransferReply_TransferError, &sipRes);

    return sipRes;
}

bool sipVH_QtBluetooth_14(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QIODevice::OpenMode a0)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::QIODevice::OpenMode(a0), sipType_QIODevice_OpenMode, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH_QtBluetooth_13(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "");
}

bool sipVH_QtBluetooth_12(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::qint64 a0)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "n", a0);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::qint64 sipVH_QtBluetooth_11(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::qint64 sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "n", &sipRes);

    return sipRes;
}

bool sipVH_QtBluetooth_10(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH_QtBluetooth_9(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int a0)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "i", a0);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::qint64 sipVH_QtBluetooth_8(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, char*a0, ::qint64 a1)
{
     ::qint64 sipRes = 0;
    int sipIsErr = 0;

#line 206 "sip/QtCore/qiodevice.sip"
        PyObject *result = sipCallMethod(&sipIsErr, sipMethod, "n", a1);
        
        if (result != NULL)
        {
            PyObject *buf;
        
            sipParseResult(&sipIsErr, sipMethod, result, "O", &buf);
        
            if (buf == Py_None)
                sipRes = -1L;
            else if (!SIPBytes_Check(buf))
            {
                sipBadCatcherResult(sipMethod);
                sipIsErr = 1;
            }
            else
            {
                memcpy(a0, SIPBytes_AsString(buf), SIPBytes_Size(buf));
                sipRes = SIPBytes_Size(buf);
            }
        
            Py_DECREF(buf);
            Py_DECREF(result);
        }
#line 1062 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

    Py_DECREF(sipMethod);

    if (sipIsErr)
        sipCallErrorHandler(sipErrorHandler, sipPySelf, sipGILState);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

 ::qint64 sipVH_QtBluetooth_7(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, char*a0, ::qint64 a1)
{
     ::qint64 sipRes = 0;
    int sipIsErr = 0;

#line 271 "sip/QtCore/qiodevice.sip"
        PyObject *result = sipCallMethod(&sipIsErr, sipMethod, "n", a1);
        
        if (result != NULL)
        {
            PyObject *buf;
        
            sipParseResult(&sipIsErr, sipMethod, result, "O", &buf);
        
            if (buf == Py_None)
                sipRes = -1L;
            else if (!SIPBytes_Check(buf))
            {
                sipBadCatcherResult(sipMethod);
                sipIsErr = 1;
            }
            else
            {
                memcpy(a0, SIPBytes_AsString(buf), SIPBytes_Size(buf));
                sipRes = SIPBytes_Size(buf);
            }
        
            Py_DECREF(buf);
            Py_DECREF(result);
        }
#line 1104 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

    Py_DECREF(sipMethod);

    if (sipIsErr)
        sipCallErrorHandler(sipErrorHandler, sipPySelf, sipGILState);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

 ::qint64 sipVH_QtBluetooth_6(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const char*a0,PY_LONG_LONG a1)
{
     ::qint64 sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "g", a0, (SIP_SSIZE_T)a1);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "n", &sipRes);

    return sipRes;
}

bool sipVH_QtBluetooth_5(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QEvent*a0)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", a0, sipType_QEvent, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH_QtBluetooth_4(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QObject*a0, ::QEvent*a1)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DD", a0, sipType_QObject, SIP_NULLPTR, a1, sipType_QEvent, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH_QtBluetooth_3(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QTimerEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QTimerEvent, SIP_NULLPTR);
}

void sipVH_QtBluetooth_2(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QChildEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QChildEvent, SIP_NULLPTR);
}

void sipVH_QtBluetooth_1(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QEvent, SIP_NULLPTR);
}

void sipVH_QtBluetooth_0(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::QMetaMethod& a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::QMetaMethod(a0), sipType_QMetaMethod, SIP_NULLPTR);
}


extern "C" {static PyObject *slot___rshift__(PyObject *,PyObject *);}
static PyObject *slot___rshift__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QDataStream* a0;
         ::QBluetoothUuid* a1;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "J9J9", sipType_QDataStream, &a0, sipType_QBluetoothUuid, &a1))
        {
             ::QDataStream*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = &(*a0 >> *a1);
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QDataStream,SIP_NULLPTR);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}


extern "C" {static PyObject *slot___lshift__(PyObject *,PyObject *);}
static PyObject *slot___lshift__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QDataStream* a0;
        const  ::QBluetoothUuid* a1;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "J9J9", sipType_QDataStream, &a0, sipType_QBluetoothUuid, &a1))
        {
             ::QDataStream*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = &(*a0 << *a1);
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QDataStream,SIP_NULLPTR);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotExtenderDef slotExtenders[] = {
    {(void *)slot___rshift__, rshift_slot, {0, 0, 0}},
    {(void *)slot___lshift__, lshift_slot, {0, 0, 0}},
    {SIP_NULLPTR, (sipPySlotType)0, {0, 0, 0}}
};


/* Convert to a sub-class if possible. */
extern "C" {static const sipTypeDef *sipSubClass_QBluetoothServer(void **);}
static const sipTypeDef *sipSubClass_QBluetoothServer(void **sipCppRet)
{
     ::QObject *sipCpp = reinterpret_cast< ::QObject *>(*sipCppRet);
    const sipTypeDef *sipType;

#line 32 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothserver.sip"
    static struct class_graph {
        const char *name;
        sipTypeDef **type;
        int yes, no;
    } graph[] = {
        {sipName_QBluetoothDeviceDiscoveryAgent, &sipType_QBluetoothDeviceDiscoveryAgent, -1, 1},
        {sipName_QBluetoothServiceDiscoveryAgent, &sipType_QBluetoothServiceDiscoveryAgent, -1, 2},
    #if QT_VERSION >= 0x050400
        {sipName_QLowEnergyService, &sipType_QLowEnergyService, -1, 3},
    #else
        {0, 0, -1, 3},
    #endif
        {sipName_QBluetoothTransferReply, &sipType_QBluetoothTransferReply, -1, 4},
        {sipName_QBluetoothTransferManager, &sipType_QBluetoothTransferManager, -1, 5},
        {sipName_QBluetoothServer, &sipType_QBluetoothServer, -1, 6},
    #if QT_VERSION >= 0x050400
        {sipName_QLowEnergyController, &sipType_QLowEnergyController, -1, 7},
    #else
        {0, 0, -1, 7},
    #endif
        {sipName_QBluetoothSocket, &sipType_QBluetoothSocket, -1, 8},
        {sipName_QBluetoothLocalDevice, &sipType_QBluetoothLocalDevice, -1, -1},
    };
    
    int i = 0;
    
    sipType = NULL;
    
    do
    {
        struct class_graph *cg = &graph[i];
    
        if (cg->name != NULL && sipCpp->inherits(cg->name))
        {
            sipType = *cg->type;
            i = cg->yes;
        }
        else
            i = cg->no;
    }
    while (i >= 0);
#line 1284 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

    return sipType;
}


extern "C" {static PyObject *slot_QLowEnergyService_ServiceType___or__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyService_ServiceType___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLowEnergyService::ServiceType a0;
         ::QLowEnergyService::ServiceTypes* a1;
        int a1State = 0;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "EJ1", sipType_QLowEnergyService_ServiceType, &a0, sipType_QLowEnergyService_ServiceTypes, &a1, &a1State))
        {
             ::QLowEnergyService::ServiceTypes*sipRes;

            sipRes = new  ::QLowEnergyService::ServiceTypes((a0 | *a1));
            sipReleaseType(a1,sipType_QLowEnergyService_ServiceTypes,a1State);

            return sipConvertFromNewType(sipRes,sipType_QLowEnergyService_ServiceTypes,SIP_NULLPTR);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotDef slots_QLowEnergyService_ServiceType[] = {
    {(void *)slot_QLowEnergyService_ServiceType___or__, or_slot},
    {0, (sipPySlotType)0}
};



extern "C" {static PyObject *slot_QLowEnergyCharacteristic_PropertyType___or__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyCharacteristic_PropertyType___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLowEnergyCharacteristic::PropertyType a0;
         ::QLowEnergyCharacteristic::PropertyTypes* a1;
        int a1State = 0;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "EJ1", sipType_QLowEnergyCharacteristic_PropertyType, &a0, sipType_QLowEnergyCharacteristic_PropertyTypes, &a1, &a1State))
        {
             ::QLowEnergyCharacteristic::PropertyTypes*sipRes;

            sipRes = new  ::QLowEnergyCharacteristic::PropertyTypes((a0 | *a1));
            sipReleaseType(a1,sipType_QLowEnergyCharacteristic_PropertyTypes,a1State);

            return sipConvertFromNewType(sipRes,sipType_QLowEnergyCharacteristic_PropertyTypes,SIP_NULLPTR);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotDef slots_QLowEnergyCharacteristic_PropertyType[] = {
    {(void *)slot_QLowEnergyCharacteristic_PropertyType___or__, or_slot},
    {0, (sipPySlotType)0}
};



extern "C" {static PyObject *slot_QBluetoothDeviceInfo_CoreConfiguration___or__(PyObject *,PyObject *);}
static PyObject *slot_QBluetoothDeviceInfo_CoreConfiguration___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QBluetoothDeviceInfo::CoreConfiguration a0;
         ::QBluetoothDeviceInfo::CoreConfigurations* a1;
        int a1State = 0;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "EJ1", sipType_QBluetoothDeviceInfo_CoreConfiguration, &a0, sipType_QBluetoothDeviceInfo_CoreConfigurations, &a1, &a1State))
        {
             ::QBluetoothDeviceInfo::CoreConfigurations*sipRes;

            sipRes = new  ::QBluetoothDeviceInfo::CoreConfigurations((a0 | *a1));
            sipReleaseType(a1,sipType_QBluetoothDeviceInfo_CoreConfigurations,a1State);

            return sipConvertFromNewType(sipRes,sipType_QBluetoothDeviceInfo_CoreConfigurations,SIP_NULLPTR);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotDef slots_QBluetoothDeviceInfo_CoreConfiguration[] = {
    {(void *)slot_QBluetoothDeviceInfo_CoreConfiguration___or__, or_slot},
    {0, (sipPySlotType)0}
};



extern "C" {static PyObject *slot_QBluetoothDeviceInfo_ServiceClass___or__(PyObject *,PyObject *);}
static PyObject *slot_QBluetoothDeviceInfo_ServiceClass___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QBluetoothDeviceInfo::ServiceClass a0;
         ::QBluetoothDeviceInfo::ServiceClasses* a1;
        int a1State = 0;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "EJ1", sipType_QBluetoothDeviceInfo_ServiceClass, &a0, sipType_QBluetoothDeviceInfo_ServiceClasses, &a1, &a1State))
        {
             ::QBluetoothDeviceInfo::ServiceClasses*sipRes;

            sipRes = new  ::QBluetoothDeviceInfo::ServiceClasses((a0 | *a1));
            sipReleaseType(a1,sipType_QBluetoothDeviceInfo_ServiceClasses,a1State);

            return sipConvertFromNewType(sipRes,sipType_QBluetoothDeviceInfo_ServiceClasses,SIP_NULLPTR);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotDef slots_QBluetoothDeviceInfo_ServiceClass[] = {
    {(void *)slot_QBluetoothDeviceInfo_ServiceClass___or__, or_slot},
    {0, (sipPySlotType)0}
};



extern "C" {static PyObject *slot_QBluetoothDeviceDiscoveryAgent_DiscoveryMethod___or__(PyObject *,PyObject *);}
static PyObject *slot_QBluetoothDeviceDiscoveryAgent_DiscoveryMethod___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QBluetoothDeviceDiscoveryAgent::DiscoveryMethod a0;
         ::QBluetoothDeviceDiscoveryAgent::DiscoveryMethods* a1;
        int a1State = 0;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "EJ1", sipType_QBluetoothDeviceDiscoveryAgent_DiscoveryMethod, &a0, sipType_QBluetoothDeviceDiscoveryAgent_DiscoveryMethods, &a1, &a1State))
        {
             ::QBluetoothDeviceDiscoveryAgent::DiscoveryMethods*sipRes;

            sipRes = new  ::QBluetoothDeviceDiscoveryAgent::DiscoveryMethods((a0 | *a1));
            sipReleaseType(a1,sipType_QBluetoothDeviceDiscoveryAgent_DiscoveryMethods,a1State);

            return sipConvertFromNewType(sipRes,sipType_QBluetoothDeviceDiscoveryAgent_DiscoveryMethods,SIP_NULLPTR);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotDef slots_QBluetoothDeviceDiscoveryAgent_DiscoveryMethod[] = {
    {(void *)slot_QBluetoothDeviceDiscoveryAgent_DiscoveryMethod___or__, or_slot},
    {0, (sipPySlotType)0}
};



extern "C" {static PyObject *slot_QBluetooth_AttAccessConstraint___or__(PyObject *,PyObject *);}
static PyObject *slot_QBluetooth_AttAccessConstraint___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QBluetooth::AttAccessConstraint a0;
         ::QBluetooth::AttAccessConstraints* a1;
        int a1State = 0;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "EJ1", sipType_QBluetooth_AttAccessConstraint, &a0, sipType_QBluetooth_AttAccessConstraints, &a1, &a1State))
        {
             ::QBluetooth::AttAccessConstraints*sipRes;

            sipRes = new  ::QBluetooth::AttAccessConstraints((a0 | *a1));
            sipReleaseType(a1,sipType_QBluetooth_AttAccessConstraints,a1State);

            return sipConvertFromNewType(sipRes,sipType_QBluetooth_AttAccessConstraints,SIP_NULLPTR);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotDef slots_QBluetooth_AttAccessConstraint[] = {
    {(void *)slot_QBluetooth_AttAccessConstraint___or__, or_slot},
    {0, (sipPySlotType)0}
};



extern "C" {static PyObject *slot_QBluetooth_Security___or__(PyObject *,PyObject *);}
static PyObject *slot_QBluetooth_Security___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QBluetooth::Security a0;
         ::QBluetooth::SecurityFlags* a1;
        int a1State = 0;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "EJ1", sipType_QBluetooth_Security, &a0, sipType_QBluetooth_SecurityFlags, &a1, &a1State))
        {
             ::QBluetooth::SecurityFlags*sipRes;

            sipRes = new  ::QBluetooth::SecurityFlags((a0 | *a1));
            sipReleaseType(a1,sipType_QBluetooth_SecurityFlags,a1State);

            return sipConvertFromNewType(sipRes,sipType_QBluetooth_SecurityFlags,SIP_NULLPTR);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotDef slots_QBluetooth_Security[] = {
    {(void *)slot_QBluetooth_Security___or__, or_slot},
    {0, (sipPySlotType)0}
};

static sipEnumTypeDef enumTypes[] = {
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QLowEnergyServiceData__ServiceType, {0}, 0}, sipNameNr_ServiceType, 94, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QLowEnergyService__WriteMode, {0}, 0}, sipNameNr_WriteMode, 88, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QLowEnergyService__ServiceState, {0}, 0}, sipNameNr_ServiceState, 88, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QLowEnergyService__ServiceError, {0}, 0}, sipNameNr_ServiceError, 88, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QLowEnergyService__ServiceType, {0}, 0}, sipNameNr_ServiceType, 88, slots_QLowEnergyService_ServiceType},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QLowEnergyController__Role, {0}, 0}, sipNameNr_Role, 81, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QLowEnergyController__RemoteAddressType, {0}, 0}, sipNameNr_RemoteAddressType, 81, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QLowEnergyController__ControllerState, {0}, 0}, sipNameNr_ControllerState, 81, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QLowEnergyController__Error, {0}, 0}, sipNameNr_Error, 81, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QLowEnergyCharacteristic__PropertyType, {0}, 0}, sipNameNr_PropertyType, 76, slots_QLowEnergyCharacteristic_PropertyType},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QLowEnergyAdvertisingParameters__FilterPolicy, {0}, 0}, sipNameNr_FilterPolicy, 72, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QLowEnergyAdvertisingParameters__Mode, {0}, 0}, sipNameNr_Mode, 72, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QLowEnergyAdvertisingData__Discoverability, {0}, 0}, sipNameNr_Discoverability, 70, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothUuid__DescriptorType, {0}, 0}, sipNameNr_DescriptorType, 52, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothUuid__CharacteristicType, {0}, 0}, sipNameNr_CharacteristicType, 52, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothUuid__ServiceClassUuid, {0}, 0}, sipNameNr_ServiceClassUuid, 52, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothUuid__ProtocolUuid, {0}, 0}, sipNameNr_ProtocolUuid, 52, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothTransferRequest__Attribute, {0}, 0}, sipNameNr_Attribute, 50, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothTransferReply__TransferError, {0}, 0}, sipNameNr_TransferError, 48, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothSocket__SocketError, {0}, 0}, sipNameNr_SocketError, 44, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothSocket__SocketState, {0}, 0}, sipNameNr_SocketState, 44, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothServiceInfo__Protocol, {0}, 0}, sipNameNr_Protocol, 40, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothServiceInfo__AttributeId, {0}, 0}, sipNameNr_AttributeId, 40, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothServiceDiscoveryAgent__DiscoveryMode, {0}, 0}, sipNameNr_DiscoveryMode, 37, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothServiceDiscoveryAgent__Error, {0}, 0}, sipNameNr_Error, 37, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothServer__Error, {0}, 0}, sipNameNr_Error, 35, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothLocalDevice__Error, {0}, 0}, sipNameNr_Error, 31, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothLocalDevice__HostMode, {0}, 0}, sipNameNr_HostMode, 31, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothLocalDevice__Pairing, {0}, 0}, sipNameNr_Pairing, 31, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_SCOPED_ENUM, sipNameNr_QBluetoothDeviceInfo__Field, {0}, 0}, sipNameNr_Field, 11, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothDeviceInfo__CoreConfiguration, {0}, 0}, sipNameNr_CoreConfiguration, 11, slots_QBluetoothDeviceInfo_CoreConfiguration},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothDeviceInfo__DataCompleteness, {0}, 0}, sipNameNr_DataCompleteness, 11, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothDeviceInfo__ServiceClass, {0}, 0}, sipNameNr_ServiceClass, 11, slots_QBluetoothDeviceInfo_ServiceClass},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothDeviceInfo__MinorHealthClass, {0}, 0}, sipNameNr_MinorHealthClass, 11, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothDeviceInfo__MinorToyClass, {0}, 0}, sipNameNr_MinorToyClass, 11, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothDeviceInfo__MinorWearableClass, {0}, 0}, sipNameNr_MinorWearableClass, 11, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothDeviceInfo__MinorImagingClass, {0}, 0}, sipNameNr_MinorImagingClass, 11, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothDeviceInfo__MinorPeripheralClass, {0}, 0}, sipNameNr_MinorPeripheralClass, 11, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothDeviceInfo__MinorAudioVideoClass, {0}, 0}, sipNameNr_MinorAudioVideoClass, 11, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothDeviceInfo__MinorNetworkClass, {0}, 0}, sipNameNr_MinorNetworkClass, 11, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothDeviceInfo__MinorPhoneClass, {0}, 0}, sipNameNr_MinorPhoneClass, 11, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothDeviceInfo__MinorComputerClass, {0}, 0}, sipNameNr_MinorComputerClass, 11, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothDeviceInfo__MinorMiscellaneousClass, {0}, 0}, sipNameNr_MinorMiscellaneousClass, 11, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothDeviceInfo__MajorDeviceClass, {0}, 0}, sipNameNr_MajorDeviceClass, 11, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothDeviceDiscoveryAgent__DiscoveryMethod, {0}, 0}, sipNameNr_DiscoveryMethod, 6, slots_QBluetoothDeviceDiscoveryAgent_DiscoveryMethod},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothDeviceDiscoveryAgent__InquiryType, {0}, 0}, sipNameNr_InquiryType, 6, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetoothDeviceDiscoveryAgent__Error, {0}, 0}, sipNameNr_Error, 6, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetooth__AttAccessConstraint, {0}, 0}, sipNameNr_AttAccessConstraint, 0, slots_QBluetooth_AttAccessConstraint},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QBluetooth__Security, {0}, 0}, sipNameNr_Security, 0, slots_QBluetooth_Security},
};


/*
 * This defines each type in this module.
 */
sipTypeDef *sipExportedTypes_QtBluetooth[] = {
    &sipTypeDef_QtBluetooth_QBluetooth.ctd_base,
    &enumTypes[47].etd_base,
    &sipTypeDef_QtBluetooth_QBluetooth_AttAccessConstraints.ctd_base,
    &enumTypes[48].etd_base,
    &sipTypeDef_QtBluetooth_QBluetooth_SecurityFlags.ctd_base,
    &sipTypeDef_QtBluetooth_QBluetoothAddress.ctd_base,
    &sipTypeDef_QtBluetooth_QBluetoothDeviceDiscoveryAgent.ctd_base,
    &enumTypes[44].etd_base,
    &sipTypeDef_QtBluetooth_QBluetoothDeviceDiscoveryAgent_DiscoveryMethods.ctd_base,
    &enumTypes[46].etd_base,
    &enumTypes[45].etd_base,
    &sipTypeDef_QtBluetooth_QBluetoothDeviceInfo.ctd_base,
    &enumTypes[30].etd_base,
    &sipTypeDef_QtBluetooth_QBluetoothDeviceInfo_CoreConfigurations.ctd_base,
    &enumTypes[31].etd_base,
    &enumTypes[29].etd_base,
    &sipTypeDef_QtBluetooth_QBluetoothDeviceInfo_Fields.ctd_base,
    &enumTypes[43].etd_base,
    &enumTypes[38].etd_base,
    &enumTypes[41].etd_base,
    &enumTypes[33].etd_base,
    &enumTypes[36].etd_base,
    &enumTypes[42].etd_base,
    &enumTypes[39].etd_base,
    &enumTypes[37].etd_base,
    &enumTypes[40].etd_base,
    &enumTypes[34].etd_base,
    &enumTypes[35].etd_base,
    &enumTypes[32].etd_base,
    &sipTypeDef_QtBluetooth_QBluetoothDeviceInfo_ServiceClasses.ctd_base,
    &sipTypeDef_QtBluetooth_QBluetoothHostInfo.ctd_base,
    &sipTypeDef_QtBluetooth_QBluetoothLocalDevice.ctd_base,
    &enumTypes[26].etd_base,
    &enumTypes[27].etd_base,
    &enumTypes[28].etd_base,
    &sipTypeDef_QtBluetooth_QBluetoothServer.ctd_base,
    &enumTypes[25].etd_base,
    &sipTypeDef_QtBluetooth_QBluetoothServiceDiscoveryAgent.ctd_base,
    &enumTypes[23].etd_base,
    &enumTypes[24].etd_base,
    &sipTypeDef_QtBluetooth_QBluetoothServiceInfo.ctd_base,
    &enumTypes[22].etd_base,
    &enumTypes[21].etd_base,
    &sipTypeDef_QtBluetooth_QBluetoothServiceInfo_Sequence.mtd_base,
    &sipTypeDef_QtBluetooth_QBluetoothSocket.ctd_base,
    &enumTypes[19].etd_base,
    &enumTypes[20].etd_base,
    &sipTypeDef_QtBluetooth_QBluetoothTransferManager.ctd_base,
    &sipTypeDef_QtBluetooth_QBluetoothTransferReply.ctd_base,
    &enumTypes[18].etd_base,
    &sipTypeDef_QtBluetooth_QBluetoothTransferRequest.ctd_base,
    &enumTypes[17].etd_base,
    &sipTypeDef_QtBluetooth_QBluetoothUuid.ctd_base,
    &enumTypes[14].etd_base,
    &enumTypes[13].etd_base,
    &enumTypes[16].etd_base,
    &enumTypes[15].etd_base,
    &sipTypeDef_QtBluetooth_QHash_1600_0100QByteArray.mtd_base,
    &sipTypeDef_QtBluetooth_QList_0100QBluetoothAddress.mtd_base,
    &sipTypeDef_QtBluetooth_QList_0100QBluetoothDeviceInfo.mtd_base,
    &sipTypeDef_QtBluetooth_QList_0100QBluetoothHostInfo.mtd_base,
    &sipTypeDef_QtBluetooth_QList_0100QBluetoothServiceInfo.mtd_base,
    &sipTypeDef_QtBluetooth_QList_0100QBluetoothUuid.mtd_base,
    &sipTypeDef_QtBluetooth_QList_0100QLowEnergyAdvertisingParameters_AddressInfo.mtd_base,
    &sipTypeDef_QtBluetooth_QList_0100QLowEnergyCharacteristic.mtd_base,
    &sipTypeDef_QtBluetooth_QList_0100QLowEnergyCharacteristicData.mtd_base,
    &sipTypeDef_QtBluetooth_QList_0100QLowEnergyDescriptor.mtd_base,
    &sipTypeDef_QtBluetooth_QList_0100QLowEnergyDescriptorData.mtd_base,
    &sipTypeDef_QtBluetooth_QList_0101QLowEnergyService.mtd_base,
    &sipTypeDef_QtBluetooth_QList_1600.mtd_base,
    &sipTypeDef_QtBluetooth_QLowEnergyAdvertisingData.ctd_base,
    &enumTypes[12].etd_base,
    &sipTypeDef_QtBluetooth_QLowEnergyAdvertisingParameters.ctd_base,
    &sipTypeDef_QtBluetooth_QLowEnergyAdvertisingParameters_AddressInfo.ctd_base,
    &enumTypes[10].etd_base,
    &enumTypes[11].etd_base,
    &sipTypeDef_QtBluetooth_QLowEnergyCharacteristic.ctd_base,
    &enumTypes[9].etd_base,
    &sipTypeDef_QtBluetooth_QLowEnergyCharacteristic_PropertyTypes.ctd_base,
    &sipTypeDef_QtBluetooth_QLowEnergyCharacteristicData.ctd_base,
    &sipTypeDef_QtBluetooth_QLowEnergyConnectionParameters.ctd_base,
    &sipTypeDef_QtBluetooth_QLowEnergyController.ctd_base,
    &enumTypes[7].etd_base,
    &enumTypes[8].etd_base,
    &enumTypes[6].etd_base,
    &enumTypes[5].etd_base,
    &sipTypeDef_QtBluetooth_QLowEnergyDescriptor.ctd_base,
    &sipTypeDef_QtBluetooth_QLowEnergyDescriptorData.ctd_base,
    &sipTypeDef_QtBluetooth_QLowEnergyService.ctd_base,
    &enumTypes[3].etd_base,
    &enumTypes[2].etd_base,
    &enumTypes[4].etd_base,
    &sipTypeDef_QtBluetooth_QLowEnergyService_ServiceTypes.ctd_base,
    &enumTypes[1].etd_base,
    &sipTypeDef_QtBluetooth_QLowEnergyServiceData.ctd_base,
    &enumTypes[0].etd_base,
    &sipTypeDef_QtBluetooth_quint128.mtd_base,
};


/*
 * These define each typedef in this module.
 */
static sipTypedefDef typedefsTable[] = {
    {"QLowEnergyHandle", "unsigned short"},
};


/* This defines the types that this module needs to import from QtCore. */
sipImportedTypeDef sipImportedTypes_QtBluetooth_QtCore[] = {
    {"QByteArray"},
    {"QChildEvent"},
    {"QDataStream"},
    {"QEvent"},
    {"QIODevice"},
    {"QIODevice::OpenMode"},
    {"QMetaMethod"},
    {"QObject"},
    {"QString"},
    {"QTimerEvent"},
    {"QUuid"},
    {"QVariant"},
    {"QVector<quint16>"},
    {SIP_NULLPTR}
};


/*
 * This defines the virtual error handlers that this module needs to import
 * from QtCore.
 */
sipImportedVirtErrorHandlerDef sipImportedVirtErrorHandlers_QtBluetooth_QtCore[] = {
    {"PyQt5"},
    {SIP_NULLPTR}
};


/* This defines the modules that this module needs to import. */
static sipImportedModuleDef importsTable[] = {
    {"PyQt5.QtCore", sipImportedTypes_QtBluetooth_QtCore, sipImportedVirtErrorHandlers_QtBluetooth_QtCore, SIP_NULLPTR},
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
};


/* This defines the class sub-convertors that this module defines. */
static sipSubClassConvertorDef convertorsTable[] = {
    {sipSubClass_QBluetoothServer, {7, 0, 0}, SIP_NULLPTR},
    {SIP_NULLPTR, {0, 0, 0}, SIP_NULLPTR}
};


/* This defines this module. */
sipExportedModuleDef sipModuleAPI_QtBluetooth = {
    0,
    SIP_API_MINOR_NR,
    sipNameNr_PyQt5_QtBluetooth,
    0,
    sipStrings_QtBluetooth,
    importsTable,
    SIP_NULLPTR,
    97,
    sipExportedTypes_QtBluetooth,
    SIP_NULLPTR,
    0,
    SIP_NULLPTR,
    1,
    typedefsTable,
    SIP_NULLPTR,
    convertorsTable,
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    SIP_NULLPTR,
    SIP_NULLPTR,
    slotExtenders,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};


/* The SIP API and the APIs of any imported modules. */
const sipAPIDef *sipAPI_QtBluetooth;

sip_qt_metaobject_func sip_QtBluetooth_qt_metaobject;
sip_qt_metacall_func sip_QtBluetooth_qt_metacall;
sip_qt_metacast_func sip_QtBluetooth_qt_metacast;


/* The Python module initialisation function. */
#if PY_MAJOR_VERSION >= 3
#define SIP_MODULE_ENTRY        PyInit_QtBluetooth
#define SIP_MODULE_TYPE         PyObject *
#define SIP_MODULE_DISCARD(r)   Py_DECREF(r)
#define SIP_MODULE_RETURN(r)    return (r)
#else
#define SIP_MODULE_ENTRY        initQtBluetooth
#define SIP_MODULE_TYPE         void
#define SIP_MODULE_DISCARD(r)
#define SIP_MODULE_RETURN(r)    return
#endif

#if defined(SIP_STATIC_MODULE)
extern "C" SIP_MODULE_TYPE SIP_MODULE_ENTRY()
#else
PyMODINIT_FUNC SIP_MODULE_ENTRY()
#endif
{
    static PyMethodDef sip_methods[] = {
        {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
    };

#if PY_MAJOR_VERSION >= 3
    static PyModuleDef sip_module_def = {
        PyModuleDef_HEAD_INIT,
        "PyQt5.QtBluetooth",
        SIP_NULLPTR,
        -1,
        sip_methods,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_NULLPTR
    };
#endif

    PyObject *sipModule, *sipModuleDict;
    PyObject *sip_sipmod, *sip_capiobj;

    /* Initialise the module and get it's dictionary. */
#if PY_MAJOR_VERSION >= 3
    sipModule = PyModule_Create(&sip_module_def);
#elif PY_VERSION_HEX >= 0x02050000
    sipModule = Py_InitModule(sipName_PyQt5_QtBluetooth, sip_methods);
#else
    sipModule = Py_InitModule(const_cast<char *>(sipName_PyQt5_QtBluetooth), sip_methods);
#endif

    if (sipModule == SIP_NULLPTR)
        SIP_MODULE_RETURN(SIP_NULLPTR);

    sipModuleDict = PyModule_GetDict(sipModule);

    /* Get the SIP module's API. */
#if PY_VERSION_HEX >= 0x02050000
    sip_sipmod = PyImport_ImportModule("PyQt5.sip");
#else
    sip_sipmod = PyImport_ImportModule(const_cast<char *>("PyQt5.sip"));
#endif

    if (sip_sipmod == SIP_NULLPTR)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(SIP_NULLPTR);
    }

    sip_capiobj = PyDict_GetItemString(PyModule_GetDict(sip_sipmod), "_C_API");
    Py_DECREF(sip_sipmod);

#if defined(SIP_USE_PYCAPSULE)
    if (sip_capiobj == SIP_NULLPTR || !PyCapsule_CheckExact(sip_capiobj))
#else
    if (sip_capiobj == SIP_NULLPTR || !PyCObject_Check(sip_capiobj))
#endif
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(SIP_NULLPTR);
    }

#if defined(SIP_USE_PYCAPSULE)
    sipAPI_QtBluetooth = reinterpret_cast<const sipAPIDef *>(PyCapsule_GetPointer(sip_capiobj, "PyQt5.sip._C_API"));
#else
    sipAPI_QtBluetooth = reinterpret_cast<const sipAPIDef *>(PyCObject_AsVoidPtr(sip_capiobj));
#endif

#if defined(SIP_USE_PYCAPSULE)
    if (sipAPI_QtBluetooth == SIP_NULLPTR)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(SIP_NULLPTR);
    }
#endif

    /* Export the module and publish it's API. */
    if (sipExportModule(&sipModuleAPI_QtBluetooth,SIP_API_MAJOR_NR,SIP_API_MINOR_NR,0) < 0)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(SIP_NULLPTR);
    }

    sip_QtBluetooth_qt_metaobject = (sip_qt_metaobject_func)sipImportSymbol("qtcore_qt_metaobject");
    sip_QtBluetooth_qt_metacall = (sip_qt_metacall_func)sipImportSymbol("qtcore_qt_metacall");
    sip_QtBluetooth_qt_metacast = (sip_qt_metacast_func)sipImportSymbol("qtcore_qt_metacast");

    if (!sip_QtBluetooth_qt_metacast)
        Py_FatalError("Unable to import qtcore_qt_metacast");

    /* Initialise the module now all its dependencies have been set up. */
    if (sipInitModule(&sipModuleAPI_QtBluetooth,sipModuleDict) < 0)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(SIP_NULLPTR);
    }

    SIP_MODULE_RETURN(sipModule);
}

#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 1913 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergycharacteristicdata.sip"
#include <qlowenergycharacteristicdata.h>
#line 1917 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"


extern "C" {static void assign_QList_0100QLowEnergyCharacteristicData(void *, SIP_SSIZE_T, void *);}
static void assign_QList_0100QLowEnergyCharacteristicData(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast<QList< ::QLowEnergyCharacteristicData> *>(sipDst)[sipDstIdx] = *reinterpret_cast<QList< ::QLowEnergyCharacteristicData> *>(sipSrc);
}


extern "C" {static void *array_QList_0100QLowEnergyCharacteristicData(SIP_SSIZE_T);}
static void *array_QList_0100QLowEnergyCharacteristicData(SIP_SSIZE_T sipNrElem)
{
    return new QList< ::QLowEnergyCharacteristicData>[sipNrElem];
}


extern "C" {static void *copy_QList_0100QLowEnergyCharacteristicData(const void *, SIP_SSIZE_T);}
static void *copy_QList_0100QLowEnergyCharacteristicData(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new QList< ::QLowEnergyCharacteristicData>(reinterpret_cast<const QList< ::QLowEnergyCharacteristicData> *>(sipSrc)[sipSrcIdx]);
}


/* Call the mapped type's destructor. */
extern "C" {static void release_QList_0100QLowEnergyCharacteristicData(void *, int);}
static void release_QList_0100QLowEnergyCharacteristicData(void *ptr, int)
{
    delete reinterpret_cast<QList< ::QLowEnergyCharacteristicData> *>(ptr);
}



extern "C" {static int convertTo_QList_0100QLowEnergyCharacteristicData(PyObject *, void **, int *, PyObject *);}
static int convertTo_QList_0100QLowEnergyCharacteristicData(PyObject *sipPy,void **sipCppPtrV,int *sipIsErr,PyObject *sipTransferObj)
{
    QList< ::QLowEnergyCharacteristicData> **sipCppPtr = reinterpret_cast<QList< ::QLowEnergyCharacteristicData> **>(sipCppPtrV);

#line 68 "sip/QtCore/qpycore_qlist.sip"
    PyObject *iter = PyObject_GetIter(sipPy);

    if (!sipIsErr)
    {
        PyErr_Clear();
        Py_XDECREF(iter);

        return (iter
#if PY_MAJOR_VERSION < 3
                && !PyString_Check(sipPy)
#endif
                && !PyUnicode_Check(sipPy));
    }

    if (!iter)
    {
        *sipIsErr = 1;

        return 0;
    }

    QList<QLowEnergyCharacteristicData> *ql = new QList<QLowEnergyCharacteristicData>;
 
    for (Py_ssize_t i = 0; ; ++i)
    {
        PyErr_Clear();
        PyObject *itm = PyIter_Next(iter);

        if (!itm)
        {
            if (PyErr_Occurred())
            {
                delete ql;
                Py_DECREF(iter);
                *sipIsErr = 1;

                return 0;
            }

            break;
        }

        int state;
        QLowEnergyCharacteristicData *t = reinterpret_cast<QLowEnergyCharacteristicData *>(
                sipForceConvertToType(itm, sipType_QLowEnergyCharacteristicData, sipTransferObj,
                        SIP_NOT_NONE, &state, sipIsErr));

        if (*sipIsErr)
        {
            PyErr_Format(PyExc_TypeError,
                    "index %zd has type '%s' but 'QLowEnergyCharacteristicData' is expected", i,
                    sipPyTypeName(Py_TYPE(itm)));

            Py_DECREF(itm);
            delete ql;
            Py_DECREF(iter);

            return 0;
        }

        ql->append(*t);

        sipReleaseType(t, sipType_QLowEnergyCharacteristicData, state);
        Py_DECREF(itm);
    }
 
    Py_DECREF(iter);

    *sipCppPtr = ql;
 
    return sipGetState(sipTransferObj);
#line 2027 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


extern "C" {static PyObject *convertFrom_QList_0100QLowEnergyCharacteristicData(void *, PyObject *);}
static PyObject *convertFrom_QList_0100QLowEnergyCharacteristicData(void *sipCppV, PyObject *sipTransferObj)
{
   QList< ::QLowEnergyCharacteristicData> *sipCpp = reinterpret_cast<QList< ::QLowEnergyCharacteristicData> *>(sipCppV);

#line 42 "sip/QtCore/qpycore_qlist.sip"
    PyObject *l = PyList_New(sipCpp->size());

    if (!l)
        return 0;

    for (int i = 0; i < sipCpp->size(); ++i)
    {
        QLowEnergyCharacteristicData *t = new QLowEnergyCharacteristicData(sipCpp->at(i));
        PyObject *tobj = sipConvertFromNewType(t, sipType_QLowEnergyCharacteristicData,
                sipTransferObj);

        if (!tobj)
        {
            delete t;
            Py_DECREF(l);

            return 0;
        }

        PyList_SetItem(l, i, tobj);
    }

    return l;
#line 2060 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


sipMappedTypeDef sipTypeDef_QtBluetooth_QList_0100QLowEnergyCharacteristicData = {
    {
        -1,
        SIP_NULLPTR,
        0,
        SIP_TYPE_MAPPED,
        sipNameNr_1564,     /* QList<QLowEnergyCharacteristicData> */
        {0},
        0
    },
    {
        -1,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    },
    assign_QList_0100QLowEnergyCharacteristicData,
    array_QList_0100QLowEnergyCharacteristicData,
    copy_QList_0100QLowEnergyCharacteristicData,
    release_QList_0100QLowEnergyCharacteristicData,
    convertTo_QList_0100QLowEnergyCharacteristicData,
    convertFrom_QList_0100QLowEnergyCharacteristicData
};

#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 2092 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergyservice.sip"
#include <qlowenergyservice.h>
#line 2096 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"


extern "C" {static void assign_QList_0101QLowEnergyService(void *, SIP_SSIZE_T, void *);}
static void assign_QList_0101QLowEnergyService(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast<QList< ::QLowEnergyService*> *>(sipDst)[sipDstIdx] = *reinterpret_cast<QList< ::QLowEnergyService*> *>(sipSrc);
}


extern "C" {static void *array_QList_0101QLowEnergyService(SIP_SSIZE_T);}
static void *array_QList_0101QLowEnergyService(SIP_SSIZE_T sipNrElem)
{
    return new QList< ::QLowEnergyService*>[sipNrElem];
}


extern "C" {static void *copy_QList_0101QLowEnergyService(const void *, SIP_SSIZE_T);}
static void *copy_QList_0101QLowEnergyService(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new QList< ::QLowEnergyService*>(reinterpret_cast<const QList< ::QLowEnergyService*> *>(sipSrc)[sipSrcIdx]);
}


/* Call the mapped type's destructor. */
extern "C" {static void release_QList_0101QLowEnergyService(void *, int);}
static void release_QList_0101QLowEnergyService(void *ptr, int)
{
    delete reinterpret_cast<QList< ::QLowEnergyService*> *>(ptr);
}



extern "C" {static int convertTo_QList_0101QLowEnergyService(PyObject *, void **, int *, PyObject *);}
static int convertTo_QList_0101QLowEnergyService(PyObject *sipPy,void **sipCppPtrV,int *sipIsErr,PyObject *sipTransferObj)
{
    QList< ::QLowEnergyService*> **sipCppPtr = reinterpret_cast<QList< ::QLowEnergyService*> **>(sipCppPtrV);

#line 184 "sip/QtCore/qpycore_qlist.sip"
    PyObject *iter = PyObject_GetIter(sipPy);

    if (!sipIsErr)
    {
        PyErr_Clear();
        Py_XDECREF(iter);

        return (iter
#if PY_MAJOR_VERSION < 3
                && !PyString_Check(sipPy)
#endif
                && !PyUnicode_Check(sipPy));
    }

    if (!iter)
    {
        *sipIsErr = 1;

        return 0;
    }

    QList<QLowEnergyService *> *ql = new QList<QLowEnergyService *>;
 
    for (Py_ssize_t i = 0; ; ++i)
    {
        PyErr_Clear();
        PyObject *itm = PyIter_Next(iter);

        if (!itm)
        {
            if (PyErr_Occurred())
            {
                delete ql;
                Py_DECREF(iter);
                *sipIsErr = 1;

                return 0;
            }

            break;
        }

        QLowEnergyService *t = reinterpret_cast<QLowEnergyService *>(
                sipForceConvertToType(itm, sipType_QLowEnergyService, sipTransferObj, 0,
                        0, sipIsErr));
 
        if (*sipIsErr)
        {
            PyErr_Format(PyExc_TypeError,
                    "index %zd has type '%s' but 'QLowEnergyService' is expected", i,
                    sipPyTypeName(Py_TYPE(itm)));

            Py_DECREF(itm);
            delete ql;
            Py_DECREF(iter);

            return 0;
        }

        ql->append(t);

        Py_DECREF(itm);
    }

    Py_DECREF(iter);
 
    *sipCppPtr = ql;
 
    return sipGetState(sipTransferObj);
#line 2204 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


extern "C" {static PyObject *convertFrom_QList_0101QLowEnergyService(void *, PyObject *);}
static PyObject *convertFrom_QList_0101QLowEnergyService(void *sipCppV, PyObject *sipTransferObj)
{
   QList< ::QLowEnergyService*> *sipCpp = reinterpret_cast<QList< ::QLowEnergyService*> *>(sipCppV);

#line 153 "sip/QtCore/qpycore_qlist.sip"
    int gc_enabled = sipEnableGC(0);
    PyObject *l = PyList_New(sipCpp->size());

    if (l)
    {
        for (int i = 0; i < sipCpp->size(); ++i)
        {
            QLowEnergyService *t = sipCpp->at(i);

            // The explicit (void *) cast allows QLowEnergyService to be const.
            PyObject *tobj = sipConvertFromType((void *)t, sipType_QLowEnergyService,
                    sipTransferObj);

            if (!tobj)
            {
                Py_DECREF(l);
                l = 0;

                break;
            }

            PyList_SetItem(l, i, tobj);
        }
    }

    sipEnableGC(gc_enabled);

    return l;
#line 2242 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


sipMappedTypeDef sipTypeDef_QtBluetooth_QList_0101QLowEnergyService = {
    {
        -1,
        SIP_NULLPTR,
        0,
        SIP_TYPE_MAPPED,
        sipNameNr_3895,     /* QList<QLowEnergyService*> */
        {0},
        0
    },
    {
        -1,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    },
    assign_QList_0101QLowEnergyService,
    array_QList_0101QLowEnergyService,
    copy_QList_0101QLowEnergyService,
    release_QList_0101QLowEnergyService,
    convertTo_QList_0101QLowEnergyService,
    convertFrom_QList_0101QLowEnergyService
};

#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 2274 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergycharacteristic.sip"
#include <qlowenergycharacteristic.h>
#line 2278 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"


extern "C" {static void assign_QList_0100QLowEnergyCharacteristic(void *, SIP_SSIZE_T, void *);}
static void assign_QList_0100QLowEnergyCharacteristic(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast<QList< ::QLowEnergyCharacteristic> *>(sipDst)[sipDstIdx] = *reinterpret_cast<QList< ::QLowEnergyCharacteristic> *>(sipSrc);
}


extern "C" {static void *array_QList_0100QLowEnergyCharacteristic(SIP_SSIZE_T);}
static void *array_QList_0100QLowEnergyCharacteristic(SIP_SSIZE_T sipNrElem)
{
    return new QList< ::QLowEnergyCharacteristic>[sipNrElem];
}


extern "C" {static void *copy_QList_0100QLowEnergyCharacteristic(const void *, SIP_SSIZE_T);}
static void *copy_QList_0100QLowEnergyCharacteristic(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new QList< ::QLowEnergyCharacteristic>(reinterpret_cast<const QList< ::QLowEnergyCharacteristic> *>(sipSrc)[sipSrcIdx]);
}


/* Call the mapped type's destructor. */
extern "C" {static void release_QList_0100QLowEnergyCharacteristic(void *, int);}
static void release_QList_0100QLowEnergyCharacteristic(void *ptr, int)
{
    delete reinterpret_cast<QList< ::QLowEnergyCharacteristic> *>(ptr);
}



extern "C" {static int convertTo_QList_0100QLowEnergyCharacteristic(PyObject *, void **, int *, PyObject *);}
static int convertTo_QList_0100QLowEnergyCharacteristic(PyObject *sipPy,void **sipCppPtrV,int *sipIsErr,PyObject *sipTransferObj)
{
    QList< ::QLowEnergyCharacteristic> **sipCppPtr = reinterpret_cast<QList< ::QLowEnergyCharacteristic> **>(sipCppPtrV);

#line 68 "sip/QtCore/qpycore_qlist.sip"
    PyObject *iter = PyObject_GetIter(sipPy);

    if (!sipIsErr)
    {
        PyErr_Clear();
        Py_XDECREF(iter);

        return (iter
#if PY_MAJOR_VERSION < 3
                && !PyString_Check(sipPy)
#endif
                && !PyUnicode_Check(sipPy));
    }

    if (!iter)
    {
        *sipIsErr = 1;

        return 0;
    }

    QList<QLowEnergyCharacteristic> *ql = new QList<QLowEnergyCharacteristic>;
 
    for (Py_ssize_t i = 0; ; ++i)
    {
        PyErr_Clear();
        PyObject *itm = PyIter_Next(iter);

        if (!itm)
        {
            if (PyErr_Occurred())
            {
                delete ql;
                Py_DECREF(iter);
                *sipIsErr = 1;

                return 0;
            }

            break;
        }

        int state;
        QLowEnergyCharacteristic *t = reinterpret_cast<QLowEnergyCharacteristic *>(
                sipForceConvertToType(itm, sipType_QLowEnergyCharacteristic, sipTransferObj,
                        SIP_NOT_NONE, &state, sipIsErr));

        if (*sipIsErr)
        {
            PyErr_Format(PyExc_TypeError,
                    "index %zd has type '%s' but 'QLowEnergyCharacteristic' is expected", i,
                    sipPyTypeName(Py_TYPE(itm)));

            Py_DECREF(itm);
            delete ql;
            Py_DECREF(iter);

            return 0;
        }

        ql->append(*t);

        sipReleaseType(t, sipType_QLowEnergyCharacteristic, state);
        Py_DECREF(itm);
    }
 
    Py_DECREF(iter);

    *sipCppPtr = ql;
 
    return sipGetState(sipTransferObj);
#line 2388 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


extern "C" {static PyObject *convertFrom_QList_0100QLowEnergyCharacteristic(void *, PyObject *);}
static PyObject *convertFrom_QList_0100QLowEnergyCharacteristic(void *sipCppV, PyObject *sipTransferObj)
{
   QList< ::QLowEnergyCharacteristic> *sipCpp = reinterpret_cast<QList< ::QLowEnergyCharacteristic> *>(sipCppV);

#line 42 "sip/QtCore/qpycore_qlist.sip"
    PyObject *l = PyList_New(sipCpp->size());

    if (!l)
        return 0;

    for (int i = 0; i < sipCpp->size(); ++i)
    {
        QLowEnergyCharacteristic *t = new QLowEnergyCharacteristic(sipCpp->at(i));
        PyObject *tobj = sipConvertFromNewType(t, sipType_QLowEnergyCharacteristic,
                sipTransferObj);

        if (!tobj)
        {
            delete t;
            Py_DECREF(l);

            return 0;
        }

        PyList_SetItem(l, i, tobj);
    }

    return l;
#line 2421 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


sipMappedTypeDef sipTypeDef_QtBluetooth_QList_0100QLowEnergyCharacteristic = {
    {
        -1,
        SIP_NULLPTR,
        0,
        SIP_TYPE_MAPPED,
        sipNameNr_2078,     /* QList<QLowEnergyCharacteristic> */
        {0},
        0
    },
    {
        -1,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    },
    assign_QList_0100QLowEnergyCharacteristic,
    array_QList_0100QLowEnergyCharacteristic,
    copy_QList_0100QLowEnergyCharacteristic,
    release_QList_0100QLowEnergyCharacteristic,
    convertTo_QList_0100QLowEnergyCharacteristic,
    convertFrom_QList_0100QLowEnergyCharacteristic
};

#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 2453 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergydescriptordata.sip"
#include <qlowenergydescriptordata.h>
#line 2457 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"


extern "C" {static void assign_QList_0100QLowEnergyDescriptorData(void *, SIP_SSIZE_T, void *);}
static void assign_QList_0100QLowEnergyDescriptorData(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast<QList< ::QLowEnergyDescriptorData> *>(sipDst)[sipDstIdx] = *reinterpret_cast<QList< ::QLowEnergyDescriptorData> *>(sipSrc);
}


extern "C" {static void *array_QList_0100QLowEnergyDescriptorData(SIP_SSIZE_T);}
static void *array_QList_0100QLowEnergyDescriptorData(SIP_SSIZE_T sipNrElem)
{
    return new QList< ::QLowEnergyDescriptorData>[sipNrElem];
}


extern "C" {static void *copy_QList_0100QLowEnergyDescriptorData(const void *, SIP_SSIZE_T);}
static void *copy_QList_0100QLowEnergyDescriptorData(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new QList< ::QLowEnergyDescriptorData>(reinterpret_cast<const QList< ::QLowEnergyDescriptorData> *>(sipSrc)[sipSrcIdx]);
}


/* Call the mapped type's destructor. */
extern "C" {static void release_QList_0100QLowEnergyDescriptorData(void *, int);}
static void release_QList_0100QLowEnergyDescriptorData(void *ptr, int)
{
    delete reinterpret_cast<QList< ::QLowEnergyDescriptorData> *>(ptr);
}



extern "C" {static int convertTo_QList_0100QLowEnergyDescriptorData(PyObject *, void **, int *, PyObject *);}
static int convertTo_QList_0100QLowEnergyDescriptorData(PyObject *sipPy,void **sipCppPtrV,int *sipIsErr,PyObject *sipTransferObj)
{
    QList< ::QLowEnergyDescriptorData> **sipCppPtr = reinterpret_cast<QList< ::QLowEnergyDescriptorData> **>(sipCppPtrV);

#line 68 "sip/QtCore/qpycore_qlist.sip"
    PyObject *iter = PyObject_GetIter(sipPy);

    if (!sipIsErr)
    {
        PyErr_Clear();
        Py_XDECREF(iter);

        return (iter
#if PY_MAJOR_VERSION < 3
                && !PyString_Check(sipPy)
#endif
                && !PyUnicode_Check(sipPy));
    }

    if (!iter)
    {
        *sipIsErr = 1;

        return 0;
    }

    QList<QLowEnergyDescriptorData> *ql = new QList<QLowEnergyDescriptorData>;
 
    for (Py_ssize_t i = 0; ; ++i)
    {
        PyErr_Clear();
        PyObject *itm = PyIter_Next(iter);

        if (!itm)
        {
            if (PyErr_Occurred())
            {
                delete ql;
                Py_DECREF(iter);
                *sipIsErr = 1;

                return 0;
            }

            break;
        }

        int state;
        QLowEnergyDescriptorData *t = reinterpret_cast<QLowEnergyDescriptorData *>(
                sipForceConvertToType(itm, sipType_QLowEnergyDescriptorData, sipTransferObj,
                        SIP_NOT_NONE, &state, sipIsErr));

        if (*sipIsErr)
        {
            PyErr_Format(PyExc_TypeError,
                    "index %zd has type '%s' but 'QLowEnergyDescriptorData' is expected", i,
                    sipPyTypeName(Py_TYPE(itm)));

            Py_DECREF(itm);
            delete ql;
            Py_DECREF(iter);

            return 0;
        }

        ql->append(*t);

        sipReleaseType(t, sipType_QLowEnergyDescriptorData, state);
        Py_DECREF(itm);
    }
 
    Py_DECREF(iter);

    *sipCppPtr = ql;
 
    return sipGetState(sipTransferObj);
#line 2567 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


extern "C" {static PyObject *convertFrom_QList_0100QLowEnergyDescriptorData(void *, PyObject *);}
static PyObject *convertFrom_QList_0100QLowEnergyDescriptorData(void *sipCppV, PyObject *sipTransferObj)
{
   QList< ::QLowEnergyDescriptorData> *sipCpp = reinterpret_cast<QList< ::QLowEnergyDescriptorData> *>(sipCppV);

#line 42 "sip/QtCore/qpycore_qlist.sip"
    PyObject *l = PyList_New(sipCpp->size());

    if (!l)
        return 0;

    for (int i = 0; i < sipCpp->size(); ++i)
    {
        QLowEnergyDescriptorData *t = new QLowEnergyDescriptorData(sipCpp->at(i));
        PyObject *tobj = sipConvertFromNewType(t, sipType_QLowEnergyDescriptorData,
                sipTransferObj);

        if (!tobj)
        {
            delete t;
            Py_DECREF(l);

            return 0;
        }

        PyList_SetItem(l, i, tobj);
    }

    return l;
#line 2600 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


sipMappedTypeDef sipTypeDef_QtBluetooth_QList_0100QLowEnergyDescriptorData = {
    {
        -1,
        SIP_NULLPTR,
        0,
        SIP_TYPE_MAPPED,
        sipNameNr_2110,     /* QList<QLowEnergyDescriptorData> */
        {0},
        0
    },
    {
        -1,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    },
    assign_QList_0100QLowEnergyDescriptorData,
    array_QList_0100QLowEnergyDescriptorData,
    copy_QList_0100QLowEnergyDescriptorData,
    release_QList_0100QLowEnergyDescriptorData,
    convertTo_QList_0100QLowEnergyDescriptorData,
    convertFrom_QList_0100QLowEnergyDescriptorData
};

#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 2632 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergydescriptor.sip"
#include <qlowenergydescriptor.h>
#line 2636 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"


extern "C" {static void assign_QList_0100QLowEnergyDescriptor(void *, SIP_SSIZE_T, void *);}
static void assign_QList_0100QLowEnergyDescriptor(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast<QList< ::QLowEnergyDescriptor> *>(sipDst)[sipDstIdx] = *reinterpret_cast<QList< ::QLowEnergyDescriptor> *>(sipSrc);
}


extern "C" {static void *array_QList_0100QLowEnergyDescriptor(SIP_SSIZE_T);}
static void *array_QList_0100QLowEnergyDescriptor(SIP_SSIZE_T sipNrElem)
{
    return new QList< ::QLowEnergyDescriptor>[sipNrElem];
}


extern "C" {static void *copy_QList_0100QLowEnergyDescriptor(const void *, SIP_SSIZE_T);}
static void *copy_QList_0100QLowEnergyDescriptor(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new QList< ::QLowEnergyDescriptor>(reinterpret_cast<const QList< ::QLowEnergyDescriptor> *>(sipSrc)[sipSrcIdx]);
}


/* Call the mapped type's destructor. */
extern "C" {static void release_QList_0100QLowEnergyDescriptor(void *, int);}
static void release_QList_0100QLowEnergyDescriptor(void *ptr, int)
{
    delete reinterpret_cast<QList< ::QLowEnergyDescriptor> *>(ptr);
}



extern "C" {static int convertTo_QList_0100QLowEnergyDescriptor(PyObject *, void **, int *, PyObject *);}
static int convertTo_QList_0100QLowEnergyDescriptor(PyObject *sipPy,void **sipCppPtrV,int *sipIsErr,PyObject *sipTransferObj)
{
    QList< ::QLowEnergyDescriptor> **sipCppPtr = reinterpret_cast<QList< ::QLowEnergyDescriptor> **>(sipCppPtrV);

#line 68 "sip/QtCore/qpycore_qlist.sip"
    PyObject *iter = PyObject_GetIter(sipPy);

    if (!sipIsErr)
    {
        PyErr_Clear();
        Py_XDECREF(iter);

        return (iter
#if PY_MAJOR_VERSION < 3
                && !PyString_Check(sipPy)
#endif
                && !PyUnicode_Check(sipPy));
    }

    if (!iter)
    {
        *sipIsErr = 1;

        return 0;
    }

    QList<QLowEnergyDescriptor> *ql = new QList<QLowEnergyDescriptor>;
 
    for (Py_ssize_t i = 0; ; ++i)
    {
        PyErr_Clear();
        PyObject *itm = PyIter_Next(iter);

        if (!itm)
        {
            if (PyErr_Occurred())
            {
                delete ql;
                Py_DECREF(iter);
                *sipIsErr = 1;

                return 0;
            }

            break;
        }

        int state;
        QLowEnergyDescriptor *t = reinterpret_cast<QLowEnergyDescriptor *>(
                sipForceConvertToType(itm, sipType_QLowEnergyDescriptor, sipTransferObj,
                        SIP_NOT_NONE, &state, sipIsErr));

        if (*sipIsErr)
        {
            PyErr_Format(PyExc_TypeError,
                    "index %zd has type '%s' but 'QLowEnergyDescriptor' is expected", i,
                    sipPyTypeName(Py_TYPE(itm)));

            Py_DECREF(itm);
            delete ql;
            Py_DECREF(iter);

            return 0;
        }

        ql->append(*t);

        sipReleaseType(t, sipType_QLowEnergyDescriptor, state);
        Py_DECREF(itm);
    }
 
    Py_DECREF(iter);

    *sipCppPtr = ql;
 
    return sipGetState(sipTransferObj);
#line 2746 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


extern "C" {static PyObject *convertFrom_QList_0100QLowEnergyDescriptor(void *, PyObject *);}
static PyObject *convertFrom_QList_0100QLowEnergyDescriptor(void *sipCppV, PyObject *sipTransferObj)
{
   QList< ::QLowEnergyDescriptor> *sipCpp = reinterpret_cast<QList< ::QLowEnergyDescriptor> *>(sipCppV);

#line 42 "sip/QtCore/qpycore_qlist.sip"
    PyObject *l = PyList_New(sipCpp->size());

    if (!l)
        return 0;

    for (int i = 0; i < sipCpp->size(); ++i)
    {
        QLowEnergyDescriptor *t = new QLowEnergyDescriptor(sipCpp->at(i));
        PyObject *tobj = sipConvertFromNewType(t, sipType_QLowEnergyDescriptor,
                sipTransferObj);

        if (!tobj)
        {
            delete t;
            Py_DECREF(l);

            return 0;
        }

        PyList_SetItem(l, i, tobj);
    }

    return l;
#line 2779 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


sipMappedTypeDef sipTypeDef_QtBluetooth_QList_0100QLowEnergyDescriptor = {
    {
        -1,
        SIP_NULLPTR,
        0,
        SIP_TYPE_MAPPED,
        sipNameNr_3238,     /* QList<QLowEnergyDescriptor> */
        {0},
        0
    },
    {
        -1,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    },
    assign_QList_0100QLowEnergyDescriptor,
    array_QList_0100QLowEnergyDescriptor,
    copy_QList_0100QLowEnergyDescriptor,
    release_QList_0100QLowEnergyDescriptor,
    convertTo_QList_0100QLowEnergyDescriptor,
    convertFrom_QList_0100QLowEnergyDescriptor
};

#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 2811 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergyadvertisingparameters.sip"
#include <qlowenergyadvertisingparameters.h>
#line 49 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergyadvertisingparameters.sip"
#include <qlowenergyadvertisingparameters.h>
#line 2817 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"


extern "C" {static void assign_QList_0100QLowEnergyAdvertisingParameters_AddressInfo(void *, SIP_SSIZE_T, void *);}
static void assign_QList_0100QLowEnergyAdvertisingParameters_AddressInfo(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast<QList< ::QLowEnergyAdvertisingParameters::AddressInfo> *>(sipDst)[sipDstIdx] = *reinterpret_cast<QList< ::QLowEnergyAdvertisingParameters::AddressInfo> *>(sipSrc);
}


extern "C" {static void *array_QList_0100QLowEnergyAdvertisingParameters_AddressInfo(SIP_SSIZE_T);}
static void *array_QList_0100QLowEnergyAdvertisingParameters_AddressInfo(SIP_SSIZE_T sipNrElem)
{
    return new QList< ::QLowEnergyAdvertisingParameters::AddressInfo>[sipNrElem];
}


extern "C" {static void *copy_QList_0100QLowEnergyAdvertisingParameters_AddressInfo(const void *, SIP_SSIZE_T);}
static void *copy_QList_0100QLowEnergyAdvertisingParameters_AddressInfo(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new QList< ::QLowEnergyAdvertisingParameters::AddressInfo>(reinterpret_cast<const QList< ::QLowEnergyAdvertisingParameters::AddressInfo> *>(sipSrc)[sipSrcIdx]);
}


/* Call the mapped type's destructor. */
extern "C" {static void release_QList_0100QLowEnergyAdvertisingParameters_AddressInfo(void *, int);}
static void release_QList_0100QLowEnergyAdvertisingParameters_AddressInfo(void *ptr, int)
{
    delete reinterpret_cast<QList< ::QLowEnergyAdvertisingParameters::AddressInfo> *>(ptr);
}



extern "C" {static int convertTo_QList_0100QLowEnergyAdvertisingParameters_AddressInfo(PyObject *, void **, int *, PyObject *);}
static int convertTo_QList_0100QLowEnergyAdvertisingParameters_AddressInfo(PyObject *sipPy,void **sipCppPtrV,int *sipIsErr,PyObject *sipTransferObj)
{
    QList< ::QLowEnergyAdvertisingParameters::AddressInfo> **sipCppPtr = reinterpret_cast<QList< ::QLowEnergyAdvertisingParameters::AddressInfo> **>(sipCppPtrV);

#line 68 "sip/QtCore/qpycore_qlist.sip"
    PyObject *iter = PyObject_GetIter(sipPy);

    if (!sipIsErr)
    {
        PyErr_Clear();
        Py_XDECREF(iter);

        return (iter
#if PY_MAJOR_VERSION < 3
                && !PyString_Check(sipPy)
#endif
                && !PyUnicode_Check(sipPy));
    }

    if (!iter)
    {
        *sipIsErr = 1;

        return 0;
    }

    QList<QLowEnergyAdvertisingParameters::AddressInfo> *ql = new QList<QLowEnergyAdvertisingParameters::AddressInfo>;
 
    for (Py_ssize_t i = 0; ; ++i)
    {
        PyErr_Clear();
        PyObject *itm = PyIter_Next(iter);

        if (!itm)
        {
            if (PyErr_Occurred())
            {
                delete ql;
                Py_DECREF(iter);
                *sipIsErr = 1;

                return 0;
            }

            break;
        }

        int state;
        QLowEnergyAdvertisingParameters::AddressInfo *t = reinterpret_cast<QLowEnergyAdvertisingParameters::AddressInfo *>(
                sipForceConvertToType(itm, sipType_QLowEnergyAdvertisingParameters_AddressInfo, sipTransferObj,
                        SIP_NOT_NONE, &state, sipIsErr));

        if (*sipIsErr)
        {
            PyErr_Format(PyExc_TypeError,
                    "index %zd has type '%s' but 'QLowEnergyAdvertisingParameters::AddressInfo' is expected", i,
                    sipPyTypeName(Py_TYPE(itm)));

            Py_DECREF(itm);
            delete ql;
            Py_DECREF(iter);

            return 0;
        }

        ql->append(*t);

        sipReleaseType(t, sipType_QLowEnergyAdvertisingParameters_AddressInfo, state);
        Py_DECREF(itm);
    }
 
    Py_DECREF(iter);

    *sipCppPtr = ql;
 
    return sipGetState(sipTransferObj);
#line 2927 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


extern "C" {static PyObject *convertFrom_QList_0100QLowEnergyAdvertisingParameters_AddressInfo(void *, PyObject *);}
static PyObject *convertFrom_QList_0100QLowEnergyAdvertisingParameters_AddressInfo(void *sipCppV, PyObject *sipTransferObj)
{
   QList< ::QLowEnergyAdvertisingParameters::AddressInfo> *sipCpp = reinterpret_cast<QList< ::QLowEnergyAdvertisingParameters::AddressInfo> *>(sipCppV);

#line 42 "sip/QtCore/qpycore_qlist.sip"
    PyObject *l = PyList_New(sipCpp->size());

    if (!l)
        return 0;

    for (int i = 0; i < sipCpp->size(); ++i)
    {
        QLowEnergyAdvertisingParameters::AddressInfo *t = new QLowEnergyAdvertisingParameters::AddressInfo(sipCpp->at(i));
        PyObject *tobj = sipConvertFromNewType(t, sipType_QLowEnergyAdvertisingParameters_AddressInfo,
                sipTransferObj);

        if (!tobj)
        {
            delete t;
            Py_DECREF(l);

            return 0;
        }

        PyList_SetItem(l, i, tobj);
    }

    return l;
#line 2960 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


sipMappedTypeDef sipTypeDef_QtBluetooth_QList_0100QLowEnergyAdvertisingParameters_AddressInfo = {
    {
        -1,
        SIP_NULLPTR,
        0,
        SIP_TYPE_MAPPED,
        sipNameNr_0,     /* QList<QLowEnergyAdvertisingParameters::AddressInfo> */
        {0},
        0
    },
    {
        -1,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    },
    assign_QList_0100QLowEnergyAdvertisingParameters_AddressInfo,
    array_QList_0100QLowEnergyAdvertisingParameters_AddressInfo,
    copy_QList_0100QLowEnergyAdvertisingParameters_AddressInfo,
    release_QList_0100QLowEnergyAdvertisingParameters_AddressInfo,
    convertTo_QList_0100QLowEnergyAdvertisingParameters_AddressInfo,
    convertFrom_QList_0100QLowEnergyAdvertisingParameters_AddressInfo
};

#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 2992 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothserviceinfo.sip"
#include <qbluetoothserviceinfo.h>
#line 2996 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"


extern "C" {static void assign_QList_0100QBluetoothServiceInfo(void *, SIP_SSIZE_T, void *);}
static void assign_QList_0100QBluetoothServiceInfo(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast<QList< ::QBluetoothServiceInfo> *>(sipDst)[sipDstIdx] = *reinterpret_cast<QList< ::QBluetoothServiceInfo> *>(sipSrc);
}


extern "C" {static void *array_QList_0100QBluetoothServiceInfo(SIP_SSIZE_T);}
static void *array_QList_0100QBluetoothServiceInfo(SIP_SSIZE_T sipNrElem)
{
    return new QList< ::QBluetoothServiceInfo>[sipNrElem];
}


extern "C" {static void *copy_QList_0100QBluetoothServiceInfo(const void *, SIP_SSIZE_T);}
static void *copy_QList_0100QBluetoothServiceInfo(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new QList< ::QBluetoothServiceInfo>(reinterpret_cast<const QList< ::QBluetoothServiceInfo> *>(sipSrc)[sipSrcIdx]);
}


/* Call the mapped type's destructor. */
extern "C" {static void release_QList_0100QBluetoothServiceInfo(void *, int);}
static void release_QList_0100QBluetoothServiceInfo(void *ptr, int)
{
    delete reinterpret_cast<QList< ::QBluetoothServiceInfo> *>(ptr);
}



extern "C" {static int convertTo_QList_0100QBluetoothServiceInfo(PyObject *, void **, int *, PyObject *);}
static int convertTo_QList_0100QBluetoothServiceInfo(PyObject *sipPy,void **sipCppPtrV,int *sipIsErr,PyObject *sipTransferObj)
{
    QList< ::QBluetoothServiceInfo> **sipCppPtr = reinterpret_cast<QList< ::QBluetoothServiceInfo> **>(sipCppPtrV);

#line 68 "sip/QtCore/qpycore_qlist.sip"
    PyObject *iter = PyObject_GetIter(sipPy);

    if (!sipIsErr)
    {
        PyErr_Clear();
        Py_XDECREF(iter);

        return (iter
#if PY_MAJOR_VERSION < 3
                && !PyString_Check(sipPy)
#endif
                && !PyUnicode_Check(sipPy));
    }

    if (!iter)
    {
        *sipIsErr = 1;

        return 0;
    }

    QList<QBluetoothServiceInfo> *ql = new QList<QBluetoothServiceInfo>;
 
    for (Py_ssize_t i = 0; ; ++i)
    {
        PyErr_Clear();
        PyObject *itm = PyIter_Next(iter);

        if (!itm)
        {
            if (PyErr_Occurred())
            {
                delete ql;
                Py_DECREF(iter);
                *sipIsErr = 1;

                return 0;
            }

            break;
        }

        int state;
        QBluetoothServiceInfo *t = reinterpret_cast<QBluetoothServiceInfo *>(
                sipForceConvertToType(itm, sipType_QBluetoothServiceInfo, sipTransferObj,
                        SIP_NOT_NONE, &state, sipIsErr));

        if (*sipIsErr)
        {
            PyErr_Format(PyExc_TypeError,
                    "index %zd has type '%s' but 'QBluetoothServiceInfo' is expected", i,
                    sipPyTypeName(Py_TYPE(itm)));

            Py_DECREF(itm);
            delete ql;
            Py_DECREF(iter);

            return 0;
        }

        ql->append(*t);

        sipReleaseType(t, sipType_QBluetoothServiceInfo, state);
        Py_DECREF(itm);
    }
 
    Py_DECREF(iter);

    *sipCppPtr = ql;
 
    return sipGetState(sipTransferObj);
#line 3106 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


extern "C" {static PyObject *convertFrom_QList_0100QBluetoothServiceInfo(void *, PyObject *);}
static PyObject *convertFrom_QList_0100QBluetoothServiceInfo(void *sipCppV, PyObject *sipTransferObj)
{
   QList< ::QBluetoothServiceInfo> *sipCpp = reinterpret_cast<QList< ::QBluetoothServiceInfo> *>(sipCppV);

#line 42 "sip/QtCore/qpycore_qlist.sip"
    PyObject *l = PyList_New(sipCpp->size());

    if (!l)
        return 0;

    for (int i = 0; i < sipCpp->size(); ++i)
    {
        QBluetoothServiceInfo *t = new QBluetoothServiceInfo(sipCpp->at(i));
        PyObject *tobj = sipConvertFromNewType(t, sipType_QBluetoothServiceInfo,
                sipTransferObj);

        if (!tobj)
        {
            delete t;
            Py_DECREF(l);

            return 0;
        }

        PyList_SetItem(l, i, tobj);
    }

    return l;
#line 3139 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


sipMappedTypeDef sipTypeDef_QtBluetooth_QList_0100QBluetoothServiceInfo = {
    {
        -1,
        SIP_NULLPTR,
        0,
        SIP_TYPE_MAPPED,
        sipNameNr_2919,     /* QList<QBluetoothServiceInfo> */
        {0},
        0
    },
    {
        -1,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    },
    assign_QList_0100QBluetoothServiceInfo,
    array_QList_0100QBluetoothServiceInfo,
    copy_QList_0100QBluetoothServiceInfo,
    release_QList_0100QBluetoothServiceInfo,
    convertTo_QList_0100QBluetoothServiceInfo,
    convertFrom_QList_0100QBluetoothServiceInfo
};

#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 3171 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothaddress.sip"
#include <qbluetoothaddress.h>
#line 3175 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"


extern "C" {static void assign_QList_0100QBluetoothAddress(void *, SIP_SSIZE_T, void *);}
static void assign_QList_0100QBluetoothAddress(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast<QList< ::QBluetoothAddress> *>(sipDst)[sipDstIdx] = *reinterpret_cast<QList< ::QBluetoothAddress> *>(sipSrc);
}


extern "C" {static void *array_QList_0100QBluetoothAddress(SIP_SSIZE_T);}
static void *array_QList_0100QBluetoothAddress(SIP_SSIZE_T sipNrElem)
{
    return new QList< ::QBluetoothAddress>[sipNrElem];
}


extern "C" {static void *copy_QList_0100QBluetoothAddress(const void *, SIP_SSIZE_T);}
static void *copy_QList_0100QBluetoothAddress(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new QList< ::QBluetoothAddress>(reinterpret_cast<const QList< ::QBluetoothAddress> *>(sipSrc)[sipSrcIdx]);
}


/* Call the mapped type's destructor. */
extern "C" {static void release_QList_0100QBluetoothAddress(void *, int);}
static void release_QList_0100QBluetoothAddress(void *ptr, int)
{
    delete reinterpret_cast<QList< ::QBluetoothAddress> *>(ptr);
}



extern "C" {static int convertTo_QList_0100QBluetoothAddress(PyObject *, void **, int *, PyObject *);}
static int convertTo_QList_0100QBluetoothAddress(PyObject *sipPy,void **sipCppPtrV,int *sipIsErr,PyObject *sipTransferObj)
{
    QList< ::QBluetoothAddress> **sipCppPtr = reinterpret_cast<QList< ::QBluetoothAddress> **>(sipCppPtrV);

#line 68 "sip/QtCore/qpycore_qlist.sip"
    PyObject *iter = PyObject_GetIter(sipPy);

    if (!sipIsErr)
    {
        PyErr_Clear();
        Py_XDECREF(iter);

        return (iter
#if PY_MAJOR_VERSION < 3
                && !PyString_Check(sipPy)
#endif
                && !PyUnicode_Check(sipPy));
    }

    if (!iter)
    {
        *sipIsErr = 1;

        return 0;
    }

    QList<QBluetoothAddress> *ql = new QList<QBluetoothAddress>;
 
    for (Py_ssize_t i = 0; ; ++i)
    {
        PyErr_Clear();
        PyObject *itm = PyIter_Next(iter);

        if (!itm)
        {
            if (PyErr_Occurred())
            {
                delete ql;
                Py_DECREF(iter);
                *sipIsErr = 1;

                return 0;
            }

            break;
        }

        int state;
        QBluetoothAddress *t = reinterpret_cast<QBluetoothAddress *>(
                sipForceConvertToType(itm, sipType_QBluetoothAddress, sipTransferObj,
                        SIP_NOT_NONE, &state, sipIsErr));

        if (*sipIsErr)
        {
            PyErr_Format(PyExc_TypeError,
                    "index %zd has type '%s' but 'QBluetoothAddress' is expected", i,
                    sipPyTypeName(Py_TYPE(itm)));

            Py_DECREF(itm);
            delete ql;
            Py_DECREF(iter);

            return 0;
        }

        ql->append(*t);

        sipReleaseType(t, sipType_QBluetoothAddress, state);
        Py_DECREF(itm);
    }
 
    Py_DECREF(iter);

    *sipCppPtr = ql;
 
    return sipGetState(sipTransferObj);
#line 3285 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


extern "C" {static PyObject *convertFrom_QList_0100QBluetoothAddress(void *, PyObject *);}
static PyObject *convertFrom_QList_0100QBluetoothAddress(void *sipCppV, PyObject *sipTransferObj)
{
   QList< ::QBluetoothAddress> *sipCpp = reinterpret_cast<QList< ::QBluetoothAddress> *>(sipCppV);

#line 42 "sip/QtCore/qpycore_qlist.sip"
    PyObject *l = PyList_New(sipCpp->size());

    if (!l)
        return 0;

    for (int i = 0; i < sipCpp->size(); ++i)
    {
        QBluetoothAddress *t = new QBluetoothAddress(sipCpp->at(i));
        PyObject *tobj = sipConvertFromNewType(t, sipType_QBluetoothAddress,
                sipTransferObj);

        if (!tobj)
        {
            delete t;
            Py_DECREF(l);

            return 0;
        }

        PyList_SetItem(l, i, tobj);
    }

    return l;
#line 3318 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


sipMappedTypeDef sipTypeDef_QtBluetooth_QList_0100QBluetoothAddress = {
    {
        -1,
        SIP_NULLPTR,
        0,
        SIP_TYPE_MAPPED,
        sipNameNr_4467,     /* QList<QBluetoothAddress> */
        {0},
        0
    },
    {
        -1,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    },
    assign_QList_0100QBluetoothAddress,
    array_QList_0100QBluetoothAddress,
    copy_QList_0100QBluetoothAddress,
    release_QList_0100QBluetoothAddress,
    convertTo_QList_0100QBluetoothAddress,
    convertFrom_QList_0100QBluetoothAddress
};

#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 3350 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothhostinfo.sip"
#include <qbluetoothhostinfo.h>
#line 3354 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"


extern "C" {static void assign_QList_0100QBluetoothHostInfo(void *, SIP_SSIZE_T, void *);}
static void assign_QList_0100QBluetoothHostInfo(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast<QList< ::QBluetoothHostInfo> *>(sipDst)[sipDstIdx] = *reinterpret_cast<QList< ::QBluetoothHostInfo> *>(sipSrc);
}


extern "C" {static void *array_QList_0100QBluetoothHostInfo(SIP_SSIZE_T);}
static void *array_QList_0100QBluetoothHostInfo(SIP_SSIZE_T sipNrElem)
{
    return new QList< ::QBluetoothHostInfo>[sipNrElem];
}


extern "C" {static void *copy_QList_0100QBluetoothHostInfo(const void *, SIP_SSIZE_T);}
static void *copy_QList_0100QBluetoothHostInfo(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new QList< ::QBluetoothHostInfo>(reinterpret_cast<const QList< ::QBluetoothHostInfo> *>(sipSrc)[sipSrcIdx]);
}


/* Call the mapped type's destructor. */
extern "C" {static void release_QList_0100QBluetoothHostInfo(void *, int);}
static void release_QList_0100QBluetoothHostInfo(void *ptr, int)
{
    delete reinterpret_cast<QList< ::QBluetoothHostInfo> *>(ptr);
}



extern "C" {static int convertTo_QList_0100QBluetoothHostInfo(PyObject *, void **, int *, PyObject *);}
static int convertTo_QList_0100QBluetoothHostInfo(PyObject *sipPy,void **sipCppPtrV,int *sipIsErr,PyObject *sipTransferObj)
{
    QList< ::QBluetoothHostInfo> **sipCppPtr = reinterpret_cast<QList< ::QBluetoothHostInfo> **>(sipCppPtrV);

#line 68 "sip/QtCore/qpycore_qlist.sip"
    PyObject *iter = PyObject_GetIter(sipPy);

    if (!sipIsErr)
    {
        PyErr_Clear();
        Py_XDECREF(iter);

        return (iter
#if PY_MAJOR_VERSION < 3
                && !PyString_Check(sipPy)
#endif
                && !PyUnicode_Check(sipPy));
    }

    if (!iter)
    {
        *sipIsErr = 1;

        return 0;
    }

    QList<QBluetoothHostInfo> *ql = new QList<QBluetoothHostInfo>;
 
    for (Py_ssize_t i = 0; ; ++i)
    {
        PyErr_Clear();
        PyObject *itm = PyIter_Next(iter);

        if (!itm)
        {
            if (PyErr_Occurred())
            {
                delete ql;
                Py_DECREF(iter);
                *sipIsErr = 1;

                return 0;
            }

            break;
        }

        int state;
        QBluetoothHostInfo *t = reinterpret_cast<QBluetoothHostInfo *>(
                sipForceConvertToType(itm, sipType_QBluetoothHostInfo, sipTransferObj,
                        SIP_NOT_NONE, &state, sipIsErr));

        if (*sipIsErr)
        {
            PyErr_Format(PyExc_TypeError,
                    "index %zd has type '%s' but 'QBluetoothHostInfo' is expected", i,
                    sipPyTypeName(Py_TYPE(itm)));

            Py_DECREF(itm);
            delete ql;
            Py_DECREF(iter);

            return 0;
        }

        ql->append(*t);

        sipReleaseType(t, sipType_QBluetoothHostInfo, state);
        Py_DECREF(itm);
    }
 
    Py_DECREF(iter);

    *sipCppPtr = ql;
 
    return sipGetState(sipTransferObj);
#line 3464 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


extern "C" {static PyObject *convertFrom_QList_0100QBluetoothHostInfo(void *, PyObject *);}
static PyObject *convertFrom_QList_0100QBluetoothHostInfo(void *sipCppV, PyObject *sipTransferObj)
{
   QList< ::QBluetoothHostInfo> *sipCpp = reinterpret_cast<QList< ::QBluetoothHostInfo> *>(sipCppV);

#line 42 "sip/QtCore/qpycore_qlist.sip"
    PyObject *l = PyList_New(sipCpp->size());

    if (!l)
        return 0;

    for (int i = 0; i < sipCpp->size(); ++i)
    {
        QBluetoothHostInfo *t = new QBluetoothHostInfo(sipCpp->at(i));
        PyObject *tobj = sipConvertFromNewType(t, sipType_QBluetoothHostInfo,
                sipTransferObj);

        if (!tobj)
        {
            delete t;
            Py_DECREF(l);

            return 0;
        }

        PyList_SetItem(l, i, tobj);
    }

    return l;
#line 3497 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


sipMappedTypeDef sipTypeDef_QtBluetooth_QList_0100QBluetoothHostInfo = {
    {
        -1,
        SIP_NULLPTR,
        0,
        SIP_TYPE_MAPPED,
        sipNameNr_3921,     /* QList<QBluetoothHostInfo> */
        {0},
        0
    },
    {
        -1,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    },
    assign_QList_0100QBluetoothHostInfo,
    array_QList_0100QBluetoothHostInfo,
    copy_QList_0100QBluetoothHostInfo,
    release_QList_0100QBluetoothHostInfo,
    convertTo_QList_0100QBluetoothHostInfo,
    convertFrom_QList_0100QBluetoothHostInfo
};

#line 390 "sip/QtCore/qpycore_qhash.sip"
#include <qhash.h>
#line 3529 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

#line 30 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 3533 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"


extern "C" {static void assign_QHash_1600_0100QByteArray(void *, SIP_SSIZE_T, void *);}
static void assign_QHash_1600_0100QByteArray(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast<QHash< ::quint16, ::QByteArray> *>(sipDst)[sipDstIdx] = *reinterpret_cast<QHash< ::quint16, ::QByteArray> *>(sipSrc);
}


extern "C" {static void *array_QHash_1600_0100QByteArray(SIP_SSIZE_T);}
static void *array_QHash_1600_0100QByteArray(SIP_SSIZE_T sipNrElem)
{
    return new QHash< ::quint16, ::QByteArray>[sipNrElem];
}


extern "C" {static void *copy_QHash_1600_0100QByteArray(const void *, SIP_SSIZE_T);}
static void *copy_QHash_1600_0100QByteArray(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new QHash< ::quint16, ::QByteArray>(reinterpret_cast<const QHash< ::quint16, ::QByteArray> *>(sipSrc)[sipSrcIdx]);
}


/* Call the mapped type's destructor. */
extern "C" {static void release_QHash_1600_0100QByteArray(void *, int);}
static void release_QHash_1600_0100QByteArray(void *ptr, int)
{
    delete reinterpret_cast<QHash< ::quint16, ::QByteArray> *>(ptr);
}



extern "C" {static int convertTo_QHash_1600_0100QByteArray(PyObject *, void **, int *, PyObject *);}
static int convertTo_QHash_1600_0100QByteArray(PyObject *sipPy,void **sipCppPtrV,int *sipIsErr,PyObject *sipTransferObj)
{
    QHash< ::quint16, ::QByteArray> **sipCppPtr = reinterpret_cast<QHash< ::quint16, ::QByteArray> **>(sipCppPtrV);

#line 445 "sip/QtCore/qpycore_qhash.sip"
    if (!sipIsErr)
        return PyDict_Check(sipPy);

    QHash<quint16, QByteArray> *qh = new QHash<quint16, QByteArray>;

    Py_ssize_t pos = 0;
    PyObject *kobj, *vobj;
 
    while (PyDict_Next(sipPy, &pos, &kobj, &vobj))
    {
        quint16 k = sipLong_AsUnsignedShort(kobj);

        if (PyErr_Occurred())
        {
            if (PyErr_ExceptionMatches(PyExc_TypeError))
                PyErr_Format(PyExc_TypeError,
                        "a dict key has type '%s' but 'int' is expected",
                        sipPyTypeName(Py_TYPE(kobj)));

            delete qh;
            *sipIsErr = 1;

            return 0;
        }

        int vstate;
        QByteArray *v = reinterpret_cast<QByteArray *>(
                sipForceConvertToType(vobj, sipType_QByteArray, sipTransferObj,
                        SIP_NOT_NONE, &vstate, sipIsErr));

        if (*sipIsErr)
        {
            PyErr_Format(PyExc_TypeError,
                    "a dict value has type '%s' but 'QByteArray' is expected",
                    sipPyTypeName(Py_TYPE(vobj)));

            delete qh;

            return 0;
        }

        qh->insert(k, *v);

        sipReleaseType(v, sipType_QByteArray, vstate);
    }
 
    *sipCppPtr = qh;
 
    return sipGetState(sipTransferObj);
#line 3621 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


extern "C" {static PyObject *convertFrom_QHash_1600_0100QByteArray(void *, PyObject *);}
static PyObject *convertFrom_QHash_1600_0100QByteArray(void *sipCppV, PyObject *sipTransferObj)
{
   QHash< ::quint16, ::QByteArray> *sipCpp = reinterpret_cast<QHash< ::quint16, ::QByteArray> *>(sipCppV);

#line 394 "sip/QtCore/qpycore_qhash.sip"
    PyObject *d = PyDict_New();

    if (!d)
        return 0;

    QHash<quint16, QByteArray>::const_iterator it = sipCpp->constBegin();
    QHash<quint16, QByteArray>::const_iterator end = sipCpp->constEnd();

    while (it != end)
    {
        PyObject *kobj = SIPLong_FromLong(it.key());

        if (!kobj)
        {
            Py_DECREF(d);

            return 0;
        }

        QByteArray *v = new QByteArray(it.value());
        PyObject *vobj = sipConvertFromNewType(v, sipType_QByteArray,
                sipTransferObj);

        if (!vobj)
        {
            delete v;
            Py_DECREF(kobj);
            Py_DECREF(d);

            return 0;
        }

        int rc = PyDict_SetItem(d, kobj, vobj);

        Py_DECREF(vobj);
        Py_DECREF(kobj);

        if (rc < 0)
        {
            Py_DECREF(d);

            return 0;
        }

        ++it;
    }

    return d;
#line 3679 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


sipMappedTypeDef sipTypeDef_QtBluetooth_QHash_1600_0100QByteArray = {
    {
        -1,
        SIP_NULLPTR,
        0,
        SIP_TYPE_MAPPED,
        sipNameNr_3947,     /* QHash<quint16,QByteArray> */
        {0},
        0
    },
    {
        -1,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    },
    assign_QHash_1600_0100QByteArray,
    array_QHash_1600_0100QByteArray,
    copy_QHash_1600_0100QByteArray,
    release_QHash_1600_0100QByteArray,
    convertTo_QHash_1600_0100QByteArray,
    convertFrom_QHash_1600_0100QByteArray
};

#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 3711 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothuuid.sip"
#include <qbluetoothuuid.h>
#line 3715 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"


extern "C" {static void assign_QList_0100QBluetoothUuid(void *, SIP_SSIZE_T, void *);}
static void assign_QList_0100QBluetoothUuid(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast<QList< ::QBluetoothUuid> *>(sipDst)[sipDstIdx] = *reinterpret_cast<QList< ::QBluetoothUuid> *>(sipSrc);
}


extern "C" {static void *array_QList_0100QBluetoothUuid(SIP_SSIZE_T);}
static void *array_QList_0100QBluetoothUuid(SIP_SSIZE_T sipNrElem)
{
    return new QList< ::QBluetoothUuid>[sipNrElem];
}


extern "C" {static void *copy_QList_0100QBluetoothUuid(const void *, SIP_SSIZE_T);}
static void *copy_QList_0100QBluetoothUuid(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new QList< ::QBluetoothUuid>(reinterpret_cast<const QList< ::QBluetoothUuid> *>(sipSrc)[sipSrcIdx]);
}


/* Call the mapped type's destructor. */
extern "C" {static void release_QList_0100QBluetoothUuid(void *, int);}
static void release_QList_0100QBluetoothUuid(void *ptr, int)
{
    delete reinterpret_cast<QList< ::QBluetoothUuid> *>(ptr);
}



extern "C" {static int convertTo_QList_0100QBluetoothUuid(PyObject *, void **, int *, PyObject *);}
static int convertTo_QList_0100QBluetoothUuid(PyObject *sipPy,void **sipCppPtrV,int *sipIsErr,PyObject *sipTransferObj)
{
    QList< ::QBluetoothUuid> **sipCppPtr = reinterpret_cast<QList< ::QBluetoothUuid> **>(sipCppPtrV);

#line 68 "sip/QtCore/qpycore_qlist.sip"
    PyObject *iter = PyObject_GetIter(sipPy);

    if (!sipIsErr)
    {
        PyErr_Clear();
        Py_XDECREF(iter);

        return (iter
#if PY_MAJOR_VERSION < 3
                && !PyString_Check(sipPy)
#endif
                && !PyUnicode_Check(sipPy));
    }

    if (!iter)
    {
        *sipIsErr = 1;

        return 0;
    }

    QList<QBluetoothUuid> *ql = new QList<QBluetoothUuid>;
 
    for (Py_ssize_t i = 0; ; ++i)
    {
        PyErr_Clear();
        PyObject *itm = PyIter_Next(iter);

        if (!itm)
        {
            if (PyErr_Occurred())
            {
                delete ql;
                Py_DECREF(iter);
                *sipIsErr = 1;

                return 0;
            }

            break;
        }

        int state;
        QBluetoothUuid *t = reinterpret_cast<QBluetoothUuid *>(
                sipForceConvertToType(itm, sipType_QBluetoothUuid, sipTransferObj,
                        SIP_NOT_NONE, &state, sipIsErr));

        if (*sipIsErr)
        {
            PyErr_Format(PyExc_TypeError,
                    "index %zd has type '%s' but 'QBluetoothUuid' is expected", i,
                    sipPyTypeName(Py_TYPE(itm)));

            Py_DECREF(itm);
            delete ql;
            Py_DECREF(iter);

            return 0;
        }

        ql->append(*t);

        sipReleaseType(t, sipType_QBluetoothUuid, state);
        Py_DECREF(itm);
    }
 
    Py_DECREF(iter);

    *sipCppPtr = ql;
 
    return sipGetState(sipTransferObj);
#line 3825 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


extern "C" {static PyObject *convertFrom_QList_0100QBluetoothUuid(void *, PyObject *);}
static PyObject *convertFrom_QList_0100QBluetoothUuid(void *sipCppV, PyObject *sipTransferObj)
{
   QList< ::QBluetoothUuid> *sipCpp = reinterpret_cast<QList< ::QBluetoothUuid> *>(sipCppV);

#line 42 "sip/QtCore/qpycore_qlist.sip"
    PyObject *l = PyList_New(sipCpp->size());

    if (!l)
        return 0;

    for (int i = 0; i < sipCpp->size(); ++i)
    {
        QBluetoothUuid *t = new QBluetoothUuid(sipCpp->at(i));
        PyObject *tobj = sipConvertFromNewType(t, sipType_QBluetoothUuid,
                sipTransferObj);

        if (!tobj)
        {
            delete t;
            Py_DECREF(l);

            return 0;
        }

        PyList_SetItem(l, i, tobj);
    }

    return l;
#line 3858 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


sipMappedTypeDef sipTypeDef_QtBluetooth_QList_0100QBluetoothUuid = {
    {
        -1,
        SIP_NULLPTR,
        0,
        SIP_TYPE_MAPPED,
        sipNameNr_5931,     /* QList<QBluetoothUuid> */
        {0},
        0
    },
    {
        -1,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    },
    assign_QList_0100QBluetoothUuid,
    array_QList_0100QBluetoothUuid,
    copy_QList_0100QBluetoothUuid,
    release_QList_0100QBluetoothUuid,
    convertTo_QList_0100QBluetoothUuid,
    convertFrom_QList_0100QBluetoothUuid
};

#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 3890 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothdeviceinfo.sip"
#include <qbluetoothdeviceinfo.h>
#line 3894 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"


extern "C" {static void assign_QList_0100QBluetoothDeviceInfo(void *, SIP_SSIZE_T, void *);}
static void assign_QList_0100QBluetoothDeviceInfo(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast<QList< ::QBluetoothDeviceInfo> *>(sipDst)[sipDstIdx] = *reinterpret_cast<QList< ::QBluetoothDeviceInfo> *>(sipSrc);
}


extern "C" {static void *array_QList_0100QBluetoothDeviceInfo(SIP_SSIZE_T);}
static void *array_QList_0100QBluetoothDeviceInfo(SIP_SSIZE_T sipNrElem)
{
    return new QList< ::QBluetoothDeviceInfo>[sipNrElem];
}


extern "C" {static void *copy_QList_0100QBluetoothDeviceInfo(const void *, SIP_SSIZE_T);}
static void *copy_QList_0100QBluetoothDeviceInfo(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new QList< ::QBluetoothDeviceInfo>(reinterpret_cast<const QList< ::QBluetoothDeviceInfo> *>(sipSrc)[sipSrcIdx]);
}


/* Call the mapped type's destructor. */
extern "C" {static void release_QList_0100QBluetoothDeviceInfo(void *, int);}
static void release_QList_0100QBluetoothDeviceInfo(void *ptr, int)
{
    delete reinterpret_cast<QList< ::QBluetoothDeviceInfo> *>(ptr);
}



extern "C" {static int convertTo_QList_0100QBluetoothDeviceInfo(PyObject *, void **, int *, PyObject *);}
static int convertTo_QList_0100QBluetoothDeviceInfo(PyObject *sipPy,void **sipCppPtrV,int *sipIsErr,PyObject *sipTransferObj)
{
    QList< ::QBluetoothDeviceInfo> **sipCppPtr = reinterpret_cast<QList< ::QBluetoothDeviceInfo> **>(sipCppPtrV);

#line 68 "sip/QtCore/qpycore_qlist.sip"
    PyObject *iter = PyObject_GetIter(sipPy);

    if (!sipIsErr)
    {
        PyErr_Clear();
        Py_XDECREF(iter);

        return (iter
#if PY_MAJOR_VERSION < 3
                && !PyString_Check(sipPy)
#endif
                && !PyUnicode_Check(sipPy));
    }

    if (!iter)
    {
        *sipIsErr = 1;

        return 0;
    }

    QList<QBluetoothDeviceInfo> *ql = new QList<QBluetoothDeviceInfo>;
 
    for (Py_ssize_t i = 0; ; ++i)
    {
        PyErr_Clear();
        PyObject *itm = PyIter_Next(iter);

        if (!itm)
        {
            if (PyErr_Occurred())
            {
                delete ql;
                Py_DECREF(iter);
                *sipIsErr = 1;

                return 0;
            }

            break;
        }

        int state;
        QBluetoothDeviceInfo *t = reinterpret_cast<QBluetoothDeviceInfo *>(
                sipForceConvertToType(itm, sipType_QBluetoothDeviceInfo, sipTransferObj,
                        SIP_NOT_NONE, &state, sipIsErr));

        if (*sipIsErr)
        {
            PyErr_Format(PyExc_TypeError,
                    "index %zd has type '%s' but 'QBluetoothDeviceInfo' is expected", i,
                    sipPyTypeName(Py_TYPE(itm)));

            Py_DECREF(itm);
            delete ql;
            Py_DECREF(iter);

            return 0;
        }

        ql->append(*t);

        sipReleaseType(t, sipType_QBluetoothDeviceInfo, state);
        Py_DECREF(itm);
    }
 
    Py_DECREF(iter);

    *sipCppPtr = ql;
 
    return sipGetState(sipTransferObj);
#line 4004 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


extern "C" {static PyObject *convertFrom_QList_0100QBluetoothDeviceInfo(void *, PyObject *);}
static PyObject *convertFrom_QList_0100QBluetoothDeviceInfo(void *sipCppV, PyObject *sipTransferObj)
{
   QList< ::QBluetoothDeviceInfo> *sipCpp = reinterpret_cast<QList< ::QBluetoothDeviceInfo> *>(sipCppV);

#line 42 "sip/QtCore/qpycore_qlist.sip"
    PyObject *l = PyList_New(sipCpp->size());

    if (!l)
        return 0;

    for (int i = 0; i < sipCpp->size(); ++i)
    {
        QBluetoothDeviceInfo *t = new QBluetoothDeviceInfo(sipCpp->at(i));
        PyObject *tobj = sipConvertFromNewType(t, sipType_QBluetoothDeviceInfo,
                sipTransferObj);

        if (!tobj)
        {
            delete t;
            Py_DECREF(l);

            return 0;
        }

        PyList_SetItem(l, i, tobj);
    }

    return l;
#line 4037 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


sipMappedTypeDef sipTypeDef_QtBluetooth_QList_0100QBluetoothDeviceInfo = {
    {
        -1,
        SIP_NULLPTR,
        0,
        SIP_TYPE_MAPPED,
        sipNameNr_3266,     /* QList<QBluetoothDeviceInfo> */
        {0},
        0
    },
    {
        -1,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    },
    assign_QList_0100QBluetoothDeviceInfo,
    array_QList_0100QBluetoothDeviceInfo,
    copy_QList_0100QBluetoothDeviceInfo,
    release_QList_0100QBluetoothDeviceInfo,
    convertTo_QList_0100QBluetoothDeviceInfo,
    convertFrom_QList_0100QBluetoothDeviceInfo
};

#line 138 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qpybluetooth_qlist.sip"
#include <qbluetoothserviceinfo.h>
#line 4069 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"



extern "C" {static void assign_QBluetoothServiceInfo_Sequence(void *, SIP_SSIZE_T, void *);}
static void assign_QBluetoothServiceInfo_Sequence(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast< ::QBluetoothServiceInfo::Sequence *>(sipDst)[sipDstIdx] = *reinterpret_cast< ::QBluetoothServiceInfo::Sequence *>(sipSrc);
}


extern "C" {static void *array_QBluetoothServiceInfo_Sequence(SIP_SSIZE_T);}
static void *array_QBluetoothServiceInfo_Sequence(SIP_SSIZE_T sipNrElem)
{
    return new  ::QBluetoothServiceInfo::Sequence[sipNrElem];
}


extern "C" {static void *copy_QBluetoothServiceInfo_Sequence(const void *, SIP_SSIZE_T);}
static void *copy_QBluetoothServiceInfo_Sequence(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new  ::QBluetoothServiceInfo::Sequence(reinterpret_cast<const  ::QBluetoothServiceInfo::Sequence *>(sipSrc)[sipSrcIdx]);
}


/* Call the mapped type's destructor. */
extern "C" {static void release_QBluetoothServiceInfo_Sequence(void *, int);}
static void release_QBluetoothServiceInfo_Sequence(void *ptr, int)
{
    delete reinterpret_cast< ::QBluetoothServiceInfo::Sequence *>(ptr);
}



extern "C" {static int convertTo_QBluetoothServiceInfo_Sequence(PyObject *, void **, int *, PyObject *);}
static int convertTo_QBluetoothServiceInfo_Sequence(PyObject *sipPy,void **sipCppPtrV,int *sipIsErr,PyObject *sipTransferObj)
{
     ::QBluetoothServiceInfo::Sequence **sipCppPtr = reinterpret_cast< ::QBluetoothServiceInfo::Sequence **>(sipCppPtrV);

#line 168 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qpybluetooth_qlist.sip"
    PyObject *iter = PyObject_GetIter(sipPy);

    if (!sipIsErr)
    {
        PyErr_Clear();
        Py_XDECREF(iter);

        return (iter
#if PY_MAJOR_VERSION < 3
                && !PyString_Check(sipPy)
#endif
                && !PyUnicode_Check(sipPy));
    }

    if (!iter)
    {
        *sipIsErr = 1;

        return 0;
    }

    QBluetoothServiceInfo::Sequence *ql = new QBluetoothServiceInfo::Sequence;

    for (Py_ssize_t i = 0; ; ++i)
    {
        PyErr_Clear();
        PyObject *itm = PyIter_Next(iter);

        if (!itm)
        {
            if (PyErr_Occurred())
            {
                delete ql;
                Py_DECREF(iter);
                *sipIsErr = 1;

                return 0;
            }

            break;
        }

        int state;
        QVariant *t = reinterpret_cast<QVariant *>(
                sipForceConvertToType(itm, sipType_QVariant, sipTransferObj,
                        SIP_NOT_NONE, &state, sipIsErr));

        if (*sipIsErr)
        {
            PyErr_Format(PyExc_TypeError,
                    "index %zd has type '%s' but '_TYPE_' is expected", i,
                    sipPyTypeName(Py_TYPE(itm)));

            Py_DECREF(itm);
            delete ql;
            Py_DECREF(iter);

            return 0;
        }

        ql->append(*t);

        sipReleaseType(t, sipType_QVariant, state);
        Py_DECREF(itm);
    }

    Py_DECREF(iter);

    *sipCppPtr = ql;

    return sipGetState(sipTransferObj);
#line 4180 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


extern "C" {static PyObject *convertFrom_QBluetoothServiceInfo_Sequence(void *, PyObject *);}
static PyObject *convertFrom_QBluetoothServiceInfo_Sequence(void *sipCppV, PyObject *sipTransferObj)
{
    ::QBluetoothServiceInfo::Sequence *sipCpp = reinterpret_cast< ::QBluetoothServiceInfo::Sequence *>(sipCppV);

#line 142 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qpybluetooth_qlist.sip"
    PyObject *l = PyList_New(sipCpp->size());

    if (!l)
        return 0;

    for (int i = 0; i < sipCpp->size(); ++i)
    {
        QVariant *t = new QVariant(sipCpp->at(i));
        PyObject *tobj = sipConvertFromNewType(t, sipType_QVariant,
                sipTransferObj);

        if (!tobj)
        {
            delete t;
            Py_DECREF(l);

            return 0;
        }

        PyList_SetItem(l, i, tobj);
    }

    return l;
#line 4213 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


sipMappedTypeDef sipTypeDef_QtBluetooth_QBluetoothServiceInfo_Sequence = {
    {
        -1,
        SIP_NULLPTR,
        0,
        SIP_TYPE_MAPPED,
        sipNameNr_QBluetoothServiceInfo__Sequence,     /* QBluetoothServiceInfo::Sequence */
        {0},
        0
    },
    {
        -1,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    },
    assign_QBluetoothServiceInfo_Sequence,
    array_QBluetoothServiceInfo_Sequence,
    copy_QBluetoothServiceInfo_Sequence,
    release_QBluetoothServiceInfo_Sequence,
    convertTo_QBluetoothServiceInfo_Sequence,
    convertFrom_QBluetoothServiceInfo_Sequence
};

#line 27 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qpybluetooth_qlist.sip"
#include <qlist.h>
#line 4245 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"



extern "C" {static void assign_QList_1600(void *, SIP_SSIZE_T, void *);}
static void assign_QList_1600(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast< ::QList< ::quint16> *>(sipDst)[sipDstIdx] = *reinterpret_cast< ::QList< ::quint16> *>(sipSrc);
}


extern "C" {static void *array_QList_1600(SIP_SSIZE_T);}
static void *array_QList_1600(SIP_SSIZE_T sipNrElem)
{
    return new  ::QList< ::quint16>[sipNrElem];
}


extern "C" {static void *copy_QList_1600(const void *, SIP_SSIZE_T);}
static void *copy_QList_1600(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new  ::QList< ::quint16>(reinterpret_cast<const  ::QList< ::quint16> *>(sipSrc)[sipSrcIdx]);
}


/* Call the mapped type's destructor. */
extern "C" {static void release_QList_1600(void *, int);}
static void release_QList_1600(void *ptr, int)
{
    delete reinterpret_cast< ::QList< ::quint16> *>(ptr);
}



extern "C" {static int convertTo_QList_1600(PyObject *, void **, int *, PyObject *);}
static int convertTo_QList_1600(PyObject *sipPy,void **sipCppPtrV,int *sipIsErr,PyObject *sipTransferObj)
{
     ::QList< ::quint16> **sipCppPtr = reinterpret_cast< ::QList< ::quint16> **>(sipCppPtrV);

#line 56 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qpybluetooth_qlist.sip"
    PyObject *iter = PyObject_GetIter(sipPy);

    if (!sipIsErr)
    {
        PyErr_Clear();
        Py_XDECREF(iter);

        return (iter
#if PY_MAJOR_VERSION < 3
                && !PyString_Check(sipPy)
#endif
                && !PyUnicode_Check(sipPy));
    }

    if (!iter)
    {
        *sipIsErr = 1;

        return 0;
    }

    QList<quint16> *qv = new QList<quint16>;

    for (Py_ssize_t i = 0; ; ++i)
    {
        PyErr_Clear();
        PyObject *itm = PyIter_Next(iter);

        if (!itm)
        {
            if (PyErr_Occurred())
            {
                delete qv;
                Py_DECREF(iter);
                *sipIsErr = 1;

                return 0;
            }

            break;
        }

        PyErr_Clear();
        unsigned long val = PyLong_AsUnsignedLongMask(itm);

        if (PyErr_Occurred())
        {
            PyErr_Format(PyExc_TypeError,
                    "index %zd has type '%s' but 'int' is expected", i,
                    sipPyTypeName(Py_TYPE(itm)));

            Py_DECREF(itm);
            delete qv;
            Py_DECREF(iter);
            *sipIsErr = 1;

            return 0;
        }

        qv->append(val);

        Py_DECREF(itm);
    }

    Py_DECREF(iter);

    *sipCppPtr = qv;

    return sipGetState(sipTransferObj);
#line 4354 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


extern "C" {static PyObject *convertFrom_QList_1600(void *, PyObject *);}
static PyObject *convertFrom_QList_1600(void *sipCppV, PyObject *)
{
    ::QList< ::quint16> *sipCpp = reinterpret_cast< ::QList< ::quint16> *>(sipCppV);

#line 31 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qpybluetooth_qlist.sip"
    PyObject *l = PyList_New(sipCpp->size());

    if (!l)
        return 0;

    for (int i = 0; i < sipCpp->size(); ++i)
    {
        // Convert to a Python long to make sure it doesn't get interpreted as
        // a signed value.
        PyObject *pobj = PyLong_FromUnsignedLongLong(sipCpp->value(i));

        if (!pobj)
        {
            Py_DECREF(l);

            return 0;
        }

        PyList_SetItem(l, i, pobj);
    }

    return l;
#line 4386 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


sipMappedTypeDef sipTypeDef_QtBluetooth_QList_1600 = {
    {
        -1,
        SIP_NULLPTR,
        0,
        SIP_TYPE_MAPPED,
        sipNameNr_10843,     /* QList<quint16> */
        {0},
        0
    },
    {
        -1,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    },
    assign_QList_1600,
    array_QList_1600,
    copy_QList_1600,
    release_QList_1600,
    convertTo_QList_1600,
    convertFrom_QList_1600
};

#line 24 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qpybluetooth_quint128.sip"
#include <qbluetoothuuid.h>
#line 4418 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"



extern "C" {static void assign_quint128(void *, SIP_SSIZE_T, void *);}
static void assign_quint128(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast< ::quint128 *>(sipDst)[sipDstIdx] = *reinterpret_cast< ::quint128 *>(sipSrc);
}


extern "C" {static void *array_quint128(SIP_SSIZE_T);}
static void *array_quint128(SIP_SSIZE_T sipNrElem)
{
    return new  ::quint128[sipNrElem];
}


extern "C" {static void *copy_quint128(const void *, SIP_SSIZE_T);}
static void *copy_quint128(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new  ::quint128(reinterpret_cast<const  ::quint128 *>(sipSrc)[sipSrcIdx]);
}


/* Call the mapped type's destructor. */
extern "C" {static void release_quint128(void *, int);}
static void release_quint128(void *ptr, int)
{
    delete reinterpret_cast< ::quint128 *>(ptr);
}



extern "C" {static int convertTo_quint128(PyObject *, void **, int *, PyObject *);}
static int convertTo_quint128(PyObject *sipPy,void **sipCppPtrV,int *sipIsErr,PyObject *sipTransferObj)
{
     ::quint128 **sipCppPtr = reinterpret_cast< ::quint128 **>(sipCppPtrV);

#line 53 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qpybluetooth_quint128.sip"
    if (!sipIsErr)
        return (PySequence_Check(sipPy)
#if PY_MAJOR_VERSION < 3
                && !PyString_Check(sipPy)
#endif
                && !PyUnicode_Check(sipPy));

    Py_ssize_t len = PySequence_Size(sipPy);

    if (len != 16)
    {
        // A negative length should only be an internal error so let the
        // original exception stand.
        if (len >= 0)
            PyErr_Format(PyExc_TypeError,
                    "sequence has %zd elements but 16 elements are expected",
                    len);

        *sipIsErr = 1;

        return 0;
    }

    quint128 *qv = new quint128;

    for (Py_ssize_t i = 0; i < 16; ++i)
    {
        PyObject *itm = PySequence_GetItem(sipPy, i);

        if (!itm)
        {
            delete qv;
            *sipIsErr = 1;

            return 0;
        }

        PyErr_Clear();
        unsigned long val = PyLong_AsUnsignedLongMask(itm);

        if (PyErr_Occurred())
        {
            PyErr_Format(PyExc_TypeError,
                    "element %zd has type '%s' but 'int' is expected", i,
                    sipPyTypeName(Py_TYPE(itm)));

            Py_DECREF(itm);
            delete qv;
            *sipIsErr = 1;

            return 0;
        }

        qv->data[i] = val;

        Py_DECREF(itm);
    }

    *sipCppPtr = qv;

    return sipGetState(sipTransferObj);
#line 4519 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


extern "C" {static PyObject *convertFrom_quint128(void *, PyObject *);}
static PyObject *convertFrom_quint128(void *sipCppV, PyObject *)
{
    ::quint128 *sipCpp = reinterpret_cast< ::quint128 *>(sipCppV);

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qpybluetooth_quint128.sip"
    PyObject *t = PyTuple_New(16);

    if (!t)
        return 0;

    for (Py_ssize_t i = 0; i < 16; ++i)
    {
        // Convert to a Python long to make sure it doesn't get interpreted as
        // a signed value.
        PyObject *pobj = PyLong_FromUnsignedLong(sipCpp->data[i]);

        if (!pobj)
        {
            Py_DECREF(t);

            return 0;
        }

        PyTuple_SetItem(t, i, pobj);
    }

    return t;
#line 4551 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


sipMappedTypeDef sipTypeDef_QtBluetooth_quint128 = {
    {
        -1,
        SIP_NULLPTR,
        0,
        SIP_TYPE_MAPPED,
        sipNameNr_quint128,     /* quint128 */
        {0},
        0
    },
    {
        -1,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    },
    assign_quint128,
    array_quint128,
    copy_quint128,
    release_quint128,
    convertTo_quint128,
    convertFrom_quint128
};

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergyservicedata.sip"
#include <qlowenergyservicedata.h>
#line 4583 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergycharacteristicdata.sip"
#include <qlowenergycharacteristicdata.h>
#line 4587 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 4590 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergyservice.sip"
#include <qlowenergyservice.h>
#line 4593 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 4596 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothuuid.sip"
#include <qbluetoothuuid.h>
#line 4599 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"


PyDoc_STRVAR(doc_QLowEnergyServiceData_type, "type(self) -> QLowEnergyServiceData.ServiceType");

extern "C" {static PyObject *meth_QLowEnergyServiceData_type(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyServiceData_type(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyServiceData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyServiceData, &sipCpp))
        {
             ::QLowEnergyServiceData::ServiceType sipRes;

            sipRes = sipCpp->type();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QLowEnergyServiceData_ServiceType);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyServiceData, sipName_type, doc_QLowEnergyServiceData_type);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyServiceData_setType, "setType(self, QLowEnergyServiceData.ServiceType)");

extern "C" {static PyObject *meth_QLowEnergyServiceData_setType(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyServiceData_setType(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLowEnergyServiceData::ServiceType a0;
         ::QLowEnergyServiceData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QLowEnergyServiceData, &sipCpp, sipType_QLowEnergyServiceData_ServiceType, &a0))
        {
            sipCpp->setType(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyServiceData, sipName_setType, doc_QLowEnergyServiceData_setType);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyServiceData_uuid, "uuid(self) -> QBluetoothUuid");

extern "C" {static PyObject *meth_QLowEnergyServiceData_uuid(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyServiceData_uuid(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyServiceData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyServiceData, &sipCpp))
        {
             ::QBluetoothUuid*sipRes;

            sipRes = new  ::QBluetoothUuid(sipCpp->uuid());

            return sipConvertFromNewType(sipRes,sipType_QBluetoothUuid,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyServiceData, sipName_uuid, doc_QLowEnergyServiceData_uuid);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyServiceData_setUuid, "setUuid(self, QBluetoothUuid)");

extern "C" {static PyObject *meth_QLowEnergyServiceData_setUuid(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyServiceData_setUuid(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QBluetoothUuid* a0;
         ::QLowEnergyServiceData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QLowEnergyServiceData, &sipCpp, sipType_QBluetoothUuid, &a0))
        {
            sipCpp->setUuid(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyServiceData, sipName_setUuid, doc_QLowEnergyServiceData_setUuid);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyServiceData_includedServices, "includedServices(self) -> List[QLowEnergyService]");

extern "C" {static PyObject *meth_QLowEnergyServiceData_includedServices(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyServiceData_includedServices(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyServiceData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyServiceData, &sipCpp))
        {
            QList< ::QLowEnergyService*>*sipRes;

            sipRes = new QList< ::QLowEnergyService*>(sipCpp->includedServices());

            return sipConvertFromNewType(sipRes,sipType_QList_0101QLowEnergyService,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyServiceData, sipName_includedServices, doc_QLowEnergyServiceData_includedServices);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyServiceData_setIncludedServices, "setIncludedServices(self, Iterable[QLowEnergyService])");

extern "C" {static PyObject *meth_QLowEnergyServiceData_setIncludedServices(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyServiceData_setIncludedServices(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const QList< ::QLowEnergyService*>* a0;
        int a0State = 0;
         ::QLowEnergyServiceData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QLowEnergyServiceData, &sipCpp, sipType_QList_0101QLowEnergyService,&a0, &a0State))
        {
            sipCpp->setIncludedServices(*a0);
            sipReleaseType(const_cast<QList< ::QLowEnergyService*> *>(a0),sipType_QList_0101QLowEnergyService,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyServiceData, sipName_setIncludedServices, doc_QLowEnergyServiceData_setIncludedServices);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyServiceData_addIncludedService, "addIncludedService(self, QLowEnergyService)");

extern "C" {static PyObject *meth_QLowEnergyServiceData_addIncludedService(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyServiceData_addIncludedService(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLowEnergyService* a0;
         ::QLowEnergyServiceData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QLowEnergyServiceData, &sipCpp, sipType_QLowEnergyService, &a0))
        {
            sipCpp->addIncludedService(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyServiceData, sipName_addIncludedService, doc_QLowEnergyServiceData_addIncludedService);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyServiceData_characteristics, "characteristics(self) -> List[QLowEnergyCharacteristicData]");

extern "C" {static PyObject *meth_QLowEnergyServiceData_characteristics(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyServiceData_characteristics(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyServiceData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyServiceData, &sipCpp))
        {
            QList< ::QLowEnergyCharacteristicData>*sipRes;

            sipRes = new QList< ::QLowEnergyCharacteristicData>(sipCpp->characteristics());

            return sipConvertFromNewType(sipRes,sipType_QList_0100QLowEnergyCharacteristicData,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyServiceData, sipName_characteristics, doc_QLowEnergyServiceData_characteristics);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyServiceData_setCharacteristics, "setCharacteristics(self, Iterable[QLowEnergyCharacteristicData])");

extern "C" {static PyObject *meth_QLowEnergyServiceData_setCharacteristics(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyServiceData_setCharacteristics(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const QList< ::QLowEnergyCharacteristicData>* a0;
        int a0State = 0;
         ::QLowEnergyServiceData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QLowEnergyServiceData, &sipCpp, sipType_QList_0100QLowEnergyCharacteristicData,&a0, &a0State))
        {
            sipCpp->setCharacteristics(*a0);
            sipReleaseType(const_cast<QList< ::QLowEnergyCharacteristicData> *>(a0),sipType_QList_0100QLowEnergyCharacteristicData,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyServiceData, sipName_setCharacteristics, doc_QLowEnergyServiceData_setCharacteristics);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyServiceData_addCharacteristic, "addCharacteristic(self, QLowEnergyCharacteristicData)");

extern "C" {static PyObject *meth_QLowEnergyServiceData_addCharacteristic(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyServiceData_addCharacteristic(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyCharacteristicData* a0;
         ::QLowEnergyServiceData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QLowEnergyServiceData, &sipCpp, sipType_QLowEnergyCharacteristicData, &a0))
        {
            sipCpp->addCharacteristic(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyServiceData, sipName_addCharacteristic, doc_QLowEnergyServiceData_addCharacteristic);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyServiceData_isValid, "isValid(self) -> bool");

extern "C" {static PyObject *meth_QLowEnergyServiceData_isValid(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyServiceData_isValid(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyServiceData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyServiceData, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isValid();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyServiceData, sipName_isValid, doc_QLowEnergyServiceData_isValid);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyServiceData_swap, "swap(self, QLowEnergyServiceData)");

extern "C" {static PyObject *meth_QLowEnergyServiceData_swap(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyServiceData_swap(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLowEnergyServiceData* a0;
         ::QLowEnergyServiceData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QLowEnergyServiceData, &sipCpp, sipType_QLowEnergyServiceData, &a0))
        {
            sipCpp->swap(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyServiceData, sipName_swap, doc_QLowEnergyServiceData_swap);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *slot_QLowEnergyServiceData___eq__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyServiceData___eq__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QLowEnergyServiceData *sipCpp = reinterpret_cast< ::QLowEnergyServiceData *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyServiceData));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyServiceData* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QLowEnergyServiceData, &a0))
        {
            bool sipRes;

            sipRes = operator==((*sipCpp), *a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth, eq_slot, sipType_QLowEnergyServiceData, sipSelf, sipArg);
}


extern "C" {static PyObject *slot_QLowEnergyServiceData___ne__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyServiceData___ne__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QLowEnergyServiceData *sipCpp = reinterpret_cast< ::QLowEnergyServiceData *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyServiceData));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyServiceData* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QLowEnergyServiceData, &a0))
        {
            bool sipRes;

            sipRes = operator!=((*sipCpp), *a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth, ne_slot, sipType_QLowEnergyServiceData, sipSelf, sipArg);
}


/* Call the instance's destructor. */
extern "C" {static void release_QLowEnergyServiceData(void *, int);}
static void release_QLowEnergyServiceData(void *sipCppV, int)
{
    delete reinterpret_cast< ::QLowEnergyServiceData *>(sipCppV);
}


extern "C" {static void assign_QLowEnergyServiceData(void *, SIP_SSIZE_T, void *);}
static void assign_QLowEnergyServiceData(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast< ::QLowEnergyServiceData *>(sipDst)[sipDstIdx] = *reinterpret_cast< ::QLowEnergyServiceData *>(sipSrc);
}


extern "C" {static void *array_QLowEnergyServiceData(SIP_SSIZE_T);}
static void *array_QLowEnergyServiceData(SIP_SSIZE_T sipNrElem)
{
    return new  ::QLowEnergyServiceData[sipNrElem];
}


extern "C" {static void *copy_QLowEnergyServiceData(const void *, SIP_SSIZE_T);}
static void *copy_QLowEnergyServiceData(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new  ::QLowEnergyServiceData(reinterpret_cast<const  ::QLowEnergyServiceData *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_QLowEnergyServiceData(sipSimpleWrapper *);}
static void dealloc_QLowEnergyServiceData(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_QLowEnergyServiceData(sipGetAddress(sipSelf), 0);
    }
}


extern "C" {static void *init_type_QLowEnergyServiceData(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QLowEnergyServiceData(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
     ::QLowEnergyServiceData *sipCpp = SIP_NULLPTR;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, ""))
        {
            sipCpp = new  ::QLowEnergyServiceData();

            return sipCpp;
        }
    }

    {
        const  ::QLowEnergyServiceData* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "J9", sipType_QLowEnergyServiceData, &a0))
        {
            sipCpp = new  ::QLowEnergyServiceData(*a0);

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's Python slots. */
static sipPySlotDef slots_QLowEnergyServiceData[] = {
    {(void *)slot_QLowEnergyServiceData___eq__, eq_slot},
    {(void *)slot_QLowEnergyServiceData___ne__, ne_slot},
    {0, (sipPySlotType)0}
};


static PyMethodDef methods_QLowEnergyServiceData[] = {
    {SIP_MLNAME_CAST(sipName_addCharacteristic), meth_QLowEnergyServiceData_addCharacteristic, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyServiceData_addCharacteristic)},
    {SIP_MLNAME_CAST(sipName_addIncludedService), meth_QLowEnergyServiceData_addIncludedService, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyServiceData_addIncludedService)},
    {SIP_MLNAME_CAST(sipName_characteristics), meth_QLowEnergyServiceData_characteristics, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyServiceData_characteristics)},
    {SIP_MLNAME_CAST(sipName_includedServices), meth_QLowEnergyServiceData_includedServices, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyServiceData_includedServices)},
    {SIP_MLNAME_CAST(sipName_isValid), meth_QLowEnergyServiceData_isValid, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyServiceData_isValid)},
    {SIP_MLNAME_CAST(sipName_setCharacteristics), meth_QLowEnergyServiceData_setCharacteristics, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyServiceData_setCharacteristics)},
    {SIP_MLNAME_CAST(sipName_setIncludedServices), meth_QLowEnergyServiceData_setIncludedServices, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyServiceData_setIncludedServices)},
    {SIP_MLNAME_CAST(sipName_setType), meth_QLowEnergyServiceData_setType, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyServiceData_setType)},
    {SIP_MLNAME_CAST(sipName_setUuid), meth_QLowEnergyServiceData_setUuid, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyServiceData_setUuid)},
    {SIP_MLNAME_CAST(sipName_swap), meth_QLowEnergyServiceData_swap, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyServiceData_swap)},
    {SIP_MLNAME_CAST(sipName_type), meth_QLowEnergyServiceData_type, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyServiceData_type)},
    {SIP_MLNAME_CAST(sipName_uuid), meth_QLowEnergyServiceData_uuid, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyServiceData_uuid)}
};

static sipEnumMemberDef enummembers_QLowEnergyServiceData[] = {
    {sipName_ServiceTypePrimary, static_cast<int>( ::QLowEnergyServiceData::ServiceTypePrimary), 95},
    {sipName_ServiceTypeSecondary, static_cast<int>( ::QLowEnergyServiceData::ServiceTypeSecondary), 95},
};

PyDoc_STRVAR(doc_QLowEnergyServiceData, "\1QLowEnergyServiceData()\n"
"QLowEnergyServiceData(QLowEnergyServiceData)");


static pyqt5ClassPluginDef plugin_QLowEnergyServiceData = {
    SIP_NULLPTR,
    0,
    SIP_NULLPTR,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtBluetooth_QLowEnergyServiceData = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QLowEnergyServiceData,
        {SIP_NULLPTR},
        &plugin_QLowEnergyServiceData
    },
    {
        sipNameNr_QLowEnergyServiceData,
        {0, 0, 1},
        12, methods_QLowEnergyServiceData,
        2, enummembers_QLowEnergyServiceData,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QLowEnergyServiceData,
    -1,
    -1,
    SIP_NULLPTR,
    slots_QLowEnergyServiceData,
    init_type_QLowEnergyServiceData,
    SIP_NULLPTR,
    SIP_NULLPTR,
#if PY_MAJOR_VERSION >= 3
    SIP_NULLPTR,
    SIP_NULLPTR,
#else
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
#endif
    dealloc_QLowEnergyServiceData,
    assign_QLowEnergyServiceData,
    array_QLowEnergyServiceData,
    copy_QLowEnergyServiceData,
    release_QLowEnergyServiceData,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergyservice.sip"
#include <qlowenergyservice.h>
#line 5167 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergyservice.sip"
#include <qlowenergyservice.h>
#line 5171 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"


extern "C" {static long slot_QLowEnergyService_ServiceTypes___hash__(PyObject *);}
static long slot_QLowEnergyService_ServiceTypes___hash__(PyObject *sipSelf)
{
     ::QLowEnergyService::ServiceTypes *sipCpp = reinterpret_cast< ::QLowEnergyService::ServiceTypes *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyService_ServiceTypes));

    if (!sipCpp)
        return 0L;


    {
        {
            long sipRes = 0;

#line 116 "sip/QtCore/qglobal.sip"
        sipRes = sipCpp->operator QLowEnergyService::ServiceTypes::Int();
#line 5189 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

            return sipRes;
        }
    }

    return 0;
}


extern "C" {static int slot_QLowEnergyService_ServiceTypes___bool__(PyObject *);}
static int slot_QLowEnergyService_ServiceTypes___bool__(PyObject *sipSelf)
{
     ::QLowEnergyService::ServiceTypes *sipCpp = reinterpret_cast< ::QLowEnergyService::ServiceTypes *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyService_ServiceTypes));

    if (!sipCpp)
        return -1;


    {
        {
            int sipRes = 0;

#line 111 "sip/QtCore/qglobal.sip"
        sipRes = (sipCpp->operator QLowEnergyService::ServiceTypes::Int() != 0);
#line 5214 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

            return sipRes;
        }
    }

    return 0;
}


extern "C" {static PyObject *slot_QLowEnergyService_ServiceTypes___ne__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyService_ServiceTypes___ne__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QLowEnergyService::ServiceTypes *sipCpp = reinterpret_cast< ::QLowEnergyService::ServiceTypes *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyService_ServiceTypes));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyService::ServiceTypes* a0;
        int a0State = 0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J1", sipType_QLowEnergyService_ServiceTypes, &a0, &a0State))
        {
            bool sipRes = 0;

#line 106 "sip/QtCore/qglobal.sip"
        sipRes = (sipCpp->operator QLowEnergyService::ServiceTypes::Int() != a0->operator QLowEnergyService::ServiceTypes::Int());
#line 5244 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
            sipReleaseType(const_cast< ::QLowEnergyService::ServiceTypes *>(a0),sipType_QLowEnergyService_ServiceTypes,a0State);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth, ne_slot, sipType_QLowEnergyService_ServiceTypes, sipSelf, sipArg);
}


extern "C" {static PyObject *slot_QLowEnergyService_ServiceTypes___eq__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyService_ServiceTypes___eq__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QLowEnergyService::ServiceTypes *sipCpp = reinterpret_cast< ::QLowEnergyService::ServiceTypes *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyService_ServiceTypes));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyService::ServiceTypes* a0;
        int a0State = 0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J1", sipType_QLowEnergyService_ServiceTypes, &a0, &a0State))
        {
            bool sipRes = 0;

#line 101 "sip/QtCore/qglobal.sip"
        sipRes = (sipCpp->operator QLowEnergyService::ServiceTypes::Int() == a0->operator QLowEnergyService::ServiceTypes::Int());
#line 5280 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
            sipReleaseType(const_cast< ::QLowEnergyService::ServiceTypes *>(a0),sipType_QLowEnergyService_ServiceTypes,a0State);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth, eq_slot, sipType_QLowEnergyService_ServiceTypes, sipSelf, sipArg);
}


extern "C" {static PyObject *slot_QLowEnergyService_ServiceTypes___ixor__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyService_ServiceTypes___ixor__(PyObject *sipSelf,PyObject *sipArg)
{
    if (!PyObject_TypeCheck(sipSelf, sipTypeAsPyTypeObject(sipType_QLowEnergyService_ServiceTypes)))
    {
        Py_INCREF(Py_NotImplemented);
        return Py_NotImplemented;
    }

     ::QLowEnergyService::ServiceTypes *sipCpp = reinterpret_cast< ::QLowEnergyService::ServiceTypes *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyService_ServiceTypes));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1i", &a0))
        {
#line 95 "sip/QtCore/qglobal.sip"
        *sipCpp = QLowEnergyService::ServiceTypes(*sipCpp ^ a0);
#line 5319 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

            Py_INCREF(sipSelf);
            return sipSelf;
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    PyErr_Clear();

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}


extern "C" {static PyObject *slot_QLowEnergyService_ServiceTypes___xor__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyService_ServiceTypes___xor__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLowEnergyService::ServiceTypes* a0;
        int a0State = 0;
        int a1;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "J1i", sipType_QLowEnergyService_ServiceTypes, &a0, &a0State, &a1))
        {
             ::QLowEnergyService::ServiceTypes*sipRes;

            sipRes = new  ::QLowEnergyService::ServiceTypes((*a0 ^ a1));
            sipReleaseType(a0,sipType_QLowEnergyService_ServiceTypes,a0State);

            return sipConvertFromNewType(sipRes,sipType_QLowEnergyService_ServiceTypes,SIP_NULLPTR);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth, xor_slot, SIP_NULLPTR, sipArg0, sipArg1);
}


extern "C" {static PyObject *slot_QLowEnergyService_ServiceTypes___ior__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyService_ServiceTypes___ior__(PyObject *sipSelf,PyObject *sipArg)
{
    if (!PyObject_TypeCheck(sipSelf, sipTypeAsPyTypeObject(sipType_QLowEnergyService_ServiceTypes)))
    {
        Py_INCREF(Py_NotImplemented);
        return Py_NotImplemented;
    }

     ::QLowEnergyService::ServiceTypes *sipCpp = reinterpret_cast< ::QLowEnergyService::ServiceTypes *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyService_ServiceTypes));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1i", &a0))
        {
#line 89 "sip/QtCore/qglobal.sip"
        *sipCpp = QLowEnergyService::ServiceTypes(*sipCpp | a0);
#line 5391 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

            Py_INCREF(sipSelf);
            return sipSelf;
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    PyErr_Clear();

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}


extern "C" {static PyObject *slot_QLowEnergyService_ServiceTypes___or__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyService_ServiceTypes___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLowEnergyService::ServiceTypes* a0;
        int a0State = 0;
        int a1;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "J1i", sipType_QLowEnergyService_ServiceTypes, &a0, &a0State, &a1))
        {
             ::QLowEnergyService::ServiceTypes*sipRes;

            sipRes = new  ::QLowEnergyService::ServiceTypes((*a0 | a1));
            sipReleaseType(a0,sipType_QLowEnergyService_ServiceTypes,a0State);

            return sipConvertFromNewType(sipRes,sipType_QLowEnergyService_ServiceTypes,SIP_NULLPTR);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth, or_slot, SIP_NULLPTR, sipArg0, sipArg1);
}


extern "C" {static PyObject *slot_QLowEnergyService_ServiceTypes___iand__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyService_ServiceTypes___iand__(PyObject *sipSelf,PyObject *sipArg)
{
    if (!PyObject_TypeCheck(sipSelf, sipTypeAsPyTypeObject(sipType_QLowEnergyService_ServiceTypes)))
    {
        Py_INCREF(Py_NotImplemented);
        return Py_NotImplemented;
    }

     ::QLowEnergyService::ServiceTypes *sipCpp = reinterpret_cast< ::QLowEnergyService::ServiceTypes *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyService_ServiceTypes));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1i", &a0))
        {
            sipCpp-> ::QLowEnergyService::ServiceTypes::operator&=(a0);

            Py_INCREF(sipSelf);
            return sipSelf;
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    PyErr_Clear();

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}


extern "C" {static PyObject *slot_QLowEnergyService_ServiceTypes___and__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyService_ServiceTypes___and__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLowEnergyService::ServiceTypes* a0;
        int a0State = 0;
        int a1;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "J1i", sipType_QLowEnergyService_ServiceTypes, &a0, &a0State, &a1))
        {
             ::QLowEnergyService::ServiceTypes*sipRes;

            sipRes = new  ::QLowEnergyService::ServiceTypes((*a0 & a1));
            sipReleaseType(a0,sipType_QLowEnergyService_ServiceTypes,a0State);

            return sipConvertFromNewType(sipRes,sipType_QLowEnergyService_ServiceTypes,SIP_NULLPTR);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth, and_slot, SIP_NULLPTR, sipArg0, sipArg1);
}


extern "C" {static PyObject *slot_QLowEnergyService_ServiceTypes___invert__(PyObject *);}
static PyObject *slot_QLowEnergyService_ServiceTypes___invert__(PyObject *sipSelf)
{
     ::QLowEnergyService::ServiceTypes *sipCpp = reinterpret_cast< ::QLowEnergyService::ServiceTypes *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyService_ServiceTypes));

    if (!sipCpp)
        return SIP_NULLPTR;


    {
        {
             ::QLowEnergyService::ServiceTypes*sipRes;

            sipRes = new  ::QLowEnergyService::ServiceTypes(~(*sipCpp));

            return sipConvertFromNewType(sipRes,sipType_QLowEnergyService_ServiceTypes,SIP_NULLPTR);
        }
    }

    return 0;
}


extern "C" {static PyObject *slot_QLowEnergyService_ServiceTypes___int__(PyObject *);}
static PyObject *slot_QLowEnergyService_ServiceTypes___int__(PyObject *sipSelf)
{
     ::QLowEnergyService::ServiceTypes *sipCpp = reinterpret_cast< ::QLowEnergyService::ServiceTypes *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyService_ServiceTypes));

    if (!sipCpp)
        return SIP_NULLPTR;


    {
        {
            int sipRes;

            sipRes = *sipCpp;

            return SIPLong_FromLong(sipRes);
        }
    }

    return 0;
}


/* Call the instance's destructor. */
extern "C" {static void release_QLowEnergyService_ServiceTypes(void *, int);}
static void release_QLowEnergyService_ServiceTypes(void *sipCppV, int)
{
    delete reinterpret_cast< ::QLowEnergyService::ServiceTypes *>(sipCppV);
}


extern "C" {static void assign_QLowEnergyService_ServiceTypes(void *, SIP_SSIZE_T, void *);}
static void assign_QLowEnergyService_ServiceTypes(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast< ::QLowEnergyService::ServiceTypes *>(sipDst)[sipDstIdx] = *reinterpret_cast< ::QLowEnergyService::ServiceTypes *>(sipSrc);
}


extern "C" {static void *array_QLowEnergyService_ServiceTypes(SIP_SSIZE_T);}
static void *array_QLowEnergyService_ServiceTypes(SIP_SSIZE_T sipNrElem)
{
    return new  ::QLowEnergyService::ServiceTypes[sipNrElem];
}


extern "C" {static void *copy_QLowEnergyService_ServiceTypes(const void *, SIP_SSIZE_T);}
static void *copy_QLowEnergyService_ServiceTypes(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new  ::QLowEnergyService::ServiceTypes(reinterpret_cast<const  ::QLowEnergyService::ServiceTypes *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_QLowEnergyService_ServiceTypes(sipSimpleWrapper *);}
static void dealloc_QLowEnergyService_ServiceTypes(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_QLowEnergyService_ServiceTypes(sipGetAddress(sipSelf), 0);
    }
}


extern "C" {static void *init_type_QLowEnergyService_ServiceTypes(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QLowEnergyService_ServiceTypes(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
     ::QLowEnergyService::ServiceTypes *sipCpp = SIP_NULLPTR;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, ""))
        {
            sipCpp = new  ::QLowEnergyService::ServiceTypes();

            return sipCpp;
        }
    }

    {
        int a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "i", &a0))
        {
            sipCpp = new  ::QLowEnergyService::ServiceTypes(a0);

            return sipCpp;
        }
    }

    {
        const  ::QLowEnergyService::ServiceTypes* a0;
        int a0State = 0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "J1", sipType_QLowEnergyService_ServiceTypes, &a0, &a0State))
        {
            sipCpp = new  ::QLowEnergyService::ServiceTypes(*a0);
            sipReleaseType(const_cast< ::QLowEnergyService::ServiceTypes *>(a0),sipType_QLowEnergyService_ServiceTypes,a0State);

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


extern "C" {static int convertTo_QLowEnergyService_ServiceTypes(PyObject *, void **, int *, PyObject *);}
static int convertTo_QLowEnergyService_ServiceTypes(PyObject *sipPy,void **sipCppPtrV,int *sipIsErr,PyObject *sipTransferObj)
{
     ::QLowEnergyService::ServiceTypes **sipCppPtr = reinterpret_cast< ::QLowEnergyService::ServiceTypes **>(sipCppPtrV);

#line 121 "sip/QtCore/qglobal.sip"
// Allow an instance of the base enum whenever a QLowEnergyService::ServiceTypes is expected.

if (sipIsErr == NULL)
    return (PyObject_TypeCheck(sipPy, sipTypeAsPyTypeObject(sipType_QLowEnergyService_ServiceType)) ||
            sipCanConvertToType(sipPy, sipType_QLowEnergyService_ServiceTypes, SIP_NO_CONVERTORS));

if (PyObject_TypeCheck(sipPy, sipTypeAsPyTypeObject(sipType_QLowEnergyService_ServiceType)))
{
    *sipCppPtr = new QLowEnergyService::ServiceTypes(int(SIPLong_AsLong(sipPy)));

    return sipGetState(sipTransferObj);
}

*sipCppPtr = reinterpret_cast<QLowEnergyService::ServiceTypes *>(sipConvertToType(sipPy, sipType_QLowEnergyService_ServiceTypes, sipTransferObj, SIP_NO_CONVERTORS, 0, sipIsErr));

return 0;
#line 5659 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


/* Define this type's Python slots. */
static sipPySlotDef slots_QLowEnergyService_ServiceTypes[] = {
    {(void *)slot_QLowEnergyService_ServiceTypes___hash__, hash_slot},
    {(void *)slot_QLowEnergyService_ServiceTypes___bool__, bool_slot},
    {(void *)slot_QLowEnergyService_ServiceTypes___ne__, ne_slot},
    {(void *)slot_QLowEnergyService_ServiceTypes___eq__, eq_slot},
    {(void *)slot_QLowEnergyService_ServiceTypes___ixor__, ixor_slot},
    {(void *)slot_QLowEnergyService_ServiceTypes___xor__, xor_slot},
    {(void *)slot_QLowEnergyService_ServiceTypes___ior__, ior_slot},
    {(void *)slot_QLowEnergyService_ServiceTypes___or__, or_slot},
    {(void *)slot_QLowEnergyService_ServiceTypes___iand__, iand_slot},
    {(void *)slot_QLowEnergyService_ServiceTypes___and__, and_slot},
    {(void *)slot_QLowEnergyService_ServiceTypes___invert__, invert_slot},
    {(void *)slot_QLowEnergyService_ServiceTypes___int__, int_slot},
    {0, (sipPySlotType)0}
};

PyDoc_STRVAR(doc_QLowEnergyService_ServiceTypes, "\1QLowEnergyService.ServiceTypes()\n"
"QLowEnergyService.ServiceTypes(Union[QLowEnergyService.ServiceTypes, QLowEnergyService.ServiceType])\n"
"QLowEnergyService.ServiceTypes(QLowEnergyService.ServiceTypes)");


static pyqt5ClassPluginDef plugin_QLowEnergyService_ServiceTypes = {
    SIP_NULLPTR,
    1,
    SIP_NULLPTR,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtBluetooth_QLowEnergyService_ServiceTypes = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QLowEnergyService__ServiceTypes,
        {SIP_NULLPTR},
        &plugin_QLowEnergyService_ServiceTypes
    },
    {
        sipNameNr_ServiceTypes,
        {88, 255, 0},
        0, SIP_NULLPTR,
        0, SIP_NULLPTR,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QLowEnergyService_ServiceTypes,
    -1,
    -1,
    SIP_NULLPTR,
    slots_QLowEnergyService_ServiceTypes,
    init_type_QLowEnergyService_ServiceTypes,
    SIP_NULLPTR,
    SIP_NULLPTR,
#if PY_MAJOR_VERSION >= 3
    SIP_NULLPTR,
    SIP_NULLPTR,
#else
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
#endif
    dealloc_QLowEnergyService_ServiceTypes,
    assign_QLowEnergyService_ServiceTypes,
    array_QLowEnergyService_ServiceTypes,
    copy_QLowEnergyService_ServiceTypes,
    release_QLowEnergyService_ServiceTypes,
    SIP_NULLPTR,
    convertTo_QLowEnergyService_ServiceTypes,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergyservice.sip"
#include <qlowenergyservice.h>
#line 5747 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergydescriptor.sip"
#include <qlowenergydescriptor.h>
#line 5751 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 30 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 5754 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergycharacteristic.sip"
#include <qlowenergycharacteristic.h>
#line 5757 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 5760 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothuuid.sip"
#include <qbluetoothuuid.h>
#line 5763 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 5766 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergyservice.sip"
#include <qlowenergyservice.h>
#line 5769 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 5772 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 26 "sip/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 5775 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 5778 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 247 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 5781 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 235 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 5784 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 5787 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 26 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 5790 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 5793 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 5796 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 5799 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 26 "sip/QtCore/qthread.sip"
#include <qthread.h>
#line 5802 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 5805 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 26 "sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 5808 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 26 "sip/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 5811 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 5814 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"


PyDoc_STRVAR(doc_QLowEnergyService_includedServices, "includedServices(self) -> List[QBluetoothUuid]");

extern "C" {static PyObject *meth_QLowEnergyService_includedServices(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_includedServices(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyService, &sipCpp))
        {
            QList< ::QBluetoothUuid>*sipRes;

            sipRes = new QList< ::QBluetoothUuid>(sipCpp->includedServices());

            return sipConvertFromNewType(sipRes,sipType_QList_0100QBluetoothUuid,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_includedServices, doc_QLowEnergyService_includedServices);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyService_type, "type(self) -> QLowEnergyService.ServiceTypes");

extern "C" {static PyObject *meth_QLowEnergyService_type(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_type(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyService, &sipCpp))
        {
             ::QLowEnergyService::ServiceTypes*sipRes;

            sipRes = new  ::QLowEnergyService::ServiceTypes(sipCpp->type());

            return sipConvertFromNewType(sipRes,sipType_QLowEnergyService_ServiceTypes,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_type, doc_QLowEnergyService_type);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyService_state, "state(self) -> QLowEnergyService.ServiceState");

extern "C" {static PyObject *meth_QLowEnergyService_state(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_state(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyService, &sipCpp))
        {
             ::QLowEnergyService::ServiceState sipRes;

            sipRes = sipCpp->state();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QLowEnergyService_ServiceState);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_state, doc_QLowEnergyService_state);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyService_characteristic, "characteristic(self, QBluetoothUuid) -> QLowEnergyCharacteristic");

extern "C" {static PyObject *meth_QLowEnergyService_characteristic(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_characteristic(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QBluetoothUuid* a0;
        const  ::QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QLowEnergyService, &sipCpp, sipType_QBluetoothUuid, &a0))
        {
             ::QLowEnergyCharacteristic*sipRes;

            sipRes = new  ::QLowEnergyCharacteristic(sipCpp->characteristic(*a0));

            return sipConvertFromNewType(sipRes,sipType_QLowEnergyCharacteristic,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_characteristic, doc_QLowEnergyService_characteristic);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyService_characteristics, "characteristics(self) -> List[QLowEnergyCharacteristic]");

extern "C" {static PyObject *meth_QLowEnergyService_characteristics(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_characteristics(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyService, &sipCpp))
        {
            QList< ::QLowEnergyCharacteristic>*sipRes;

            sipRes = new QList< ::QLowEnergyCharacteristic>(sipCpp->characteristics());

            return sipConvertFromNewType(sipRes,sipType_QList_0100QLowEnergyCharacteristic,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_characteristics, doc_QLowEnergyService_characteristics);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyService_serviceUuid, "serviceUuid(self) -> QBluetoothUuid");

extern "C" {static PyObject *meth_QLowEnergyService_serviceUuid(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_serviceUuid(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyService, &sipCpp))
        {
             ::QBluetoothUuid*sipRes;

            sipRes = new  ::QBluetoothUuid(sipCpp->serviceUuid());

            return sipConvertFromNewType(sipRes,sipType_QBluetoothUuid,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_serviceUuid, doc_QLowEnergyService_serviceUuid);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyService_serviceName, "serviceName(self) -> str");

extern "C" {static PyObject *meth_QLowEnergyService_serviceName(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_serviceName(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyService, &sipCpp))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->serviceName());

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_serviceName, doc_QLowEnergyService_serviceName);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyService_discoverDetails, "discoverDetails(self)");

extern "C" {static PyObject *meth_QLowEnergyService_discoverDetails(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_discoverDetails(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyService, &sipCpp))
        {
            sipCpp->discoverDetails();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_discoverDetails, doc_QLowEnergyService_discoverDetails);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyService_error, "error(self) -> QLowEnergyService.ServiceError");

extern "C" {static PyObject *meth_QLowEnergyService_error(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_error(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyService, &sipCpp))
        {
             ::QLowEnergyService::ServiceError sipRes;

            sipRes = sipCpp->error();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QLowEnergyService_ServiceError);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_error, doc_QLowEnergyService_error);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyService_contains, "contains(self, QLowEnergyCharacteristic) -> bool\n"
"contains(self, QLowEnergyDescriptor) -> bool");

extern "C" {static PyObject *meth_QLowEnergyService_contains(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_contains(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyCharacteristic* a0;
        const  ::QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QLowEnergyService, &sipCpp, sipType_QLowEnergyCharacteristic, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->contains(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    {
        const  ::QLowEnergyDescriptor* a0;
        const  ::QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QLowEnergyService, &sipCpp, sipType_QLowEnergyDescriptor, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->contains(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_contains, doc_QLowEnergyService_contains);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyService_writeCharacteristic, "writeCharacteristic(self, QLowEnergyCharacteristic, Union[QByteArray, bytes, bytearray], mode: QLowEnergyService.WriteMode = QLowEnergyService.WriteWithResponse)");

extern "C" {static PyObject *meth_QLowEnergyService_writeCharacteristic(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_writeCharacteristic(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyCharacteristic* a0;
        const  ::QByteArray* a1;
        int a1State = 0;
         ::QLowEnergyService::WriteMode a2 = QLowEnergyService::WriteWithResponse;
         ::QLowEnergyService *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9J1|E", &sipSelf, sipType_QLowEnergyService, &sipCpp, sipType_QLowEnergyCharacteristic, &a0, sipType_QByteArray, &a1, &a1State, sipType_QLowEnergyService_WriteMode, &a2))
        {
            sipCpp->writeCharacteristic(*a0,*a1,a2);
            sipReleaseType(const_cast< ::QByteArray *>(a1),sipType_QByteArray,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_writeCharacteristic, doc_QLowEnergyService_writeCharacteristic);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyService_writeDescriptor, "writeDescriptor(self, QLowEnergyDescriptor, Union[QByteArray, bytes, bytearray])");

extern "C" {static PyObject *meth_QLowEnergyService_writeDescriptor(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_writeDescriptor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyDescriptor* a0;
        const  ::QByteArray* a1;
        int a1State = 0;
         ::QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9J1", &sipSelf, sipType_QLowEnergyService, &sipCpp, sipType_QLowEnergyDescriptor, &a0, sipType_QByteArray, &a1, &a1State))
        {
            sipCpp->writeDescriptor(*a0,*a1);
            sipReleaseType(const_cast< ::QByteArray *>(a1),sipType_QByteArray,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_writeDescriptor, doc_QLowEnergyService_writeDescriptor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyService_readCharacteristic, "readCharacteristic(self, QLowEnergyCharacteristic)");

extern "C" {static PyObject *meth_QLowEnergyService_readCharacteristic(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_readCharacteristic(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyCharacteristic* a0;
         ::QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QLowEnergyService, &sipCpp, sipType_QLowEnergyCharacteristic, &a0))
        {
            sipCpp->readCharacteristic(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_readCharacteristic, doc_QLowEnergyService_readCharacteristic);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyService_readDescriptor, "readDescriptor(self, QLowEnergyDescriptor)");

extern "C" {static PyObject *meth_QLowEnergyService_readDescriptor(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_readDescriptor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyDescriptor* a0;
         ::QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QLowEnergyService, &sipCpp, sipType_QLowEnergyDescriptor, &a0))
        {
            sipCpp->readDescriptor(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_readDescriptor, doc_QLowEnergyService_readDescriptor);

    return SIP_NULLPTR;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QLowEnergyService(void *, const sipTypeDef *);}
static void *cast_QLowEnergyService(void *sipCppV, const sipTypeDef *targetType)
{
     ::QLowEnergyService *sipCpp = reinterpret_cast< ::QLowEnergyService *>(sipCppV);

    if (targetType == sipType_QObject)
        return static_cast< ::QObject *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QLowEnergyService(void *, int);}
static void release_QLowEnergyService(void *sipCppV, int)
{
     ::QLowEnergyService *sipCpp = reinterpret_cast< ::QLowEnergyService *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void dealloc_QLowEnergyService(sipSimpleWrapper *);}
static void dealloc_QLowEnergyService(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_QLowEnergyService(sipGetAddress(sipSelf), 0);
    }
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QLowEnergyService[] = {{7, 0, 1}};


static PyMethodDef methods_QLowEnergyService[] = {
    {SIP_MLNAME_CAST(sipName_characteristic), meth_QLowEnergyService_characteristic, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_characteristic)},
    {SIP_MLNAME_CAST(sipName_characteristics), meth_QLowEnergyService_characteristics, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_characteristics)},
    {SIP_MLNAME_CAST(sipName_contains), meth_QLowEnergyService_contains, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_contains)},
    {SIP_MLNAME_CAST(sipName_discoverDetails), meth_QLowEnergyService_discoverDetails, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_discoverDetails)},
    {SIP_MLNAME_CAST(sipName_error), meth_QLowEnergyService_error, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_error)},
    {SIP_MLNAME_CAST(sipName_includedServices), meth_QLowEnergyService_includedServices, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_includedServices)},
    {SIP_MLNAME_CAST(sipName_readCharacteristic), meth_QLowEnergyService_readCharacteristic, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_readCharacteristic)},
    {SIP_MLNAME_CAST(sipName_readDescriptor), meth_QLowEnergyService_readDescriptor, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_readDescriptor)},
    {SIP_MLNAME_CAST(sipName_serviceName), meth_QLowEnergyService_serviceName, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_serviceName)},
    {SIP_MLNAME_CAST(sipName_serviceUuid), meth_QLowEnergyService_serviceUuid, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_serviceUuid)},
    {SIP_MLNAME_CAST(sipName_state), meth_QLowEnergyService_state, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_state)},
    {SIP_MLNAME_CAST(sipName_type), meth_QLowEnergyService_type, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_type)},
    {SIP_MLNAME_CAST(sipName_writeCharacteristic), SIP_MLMETH_CAST(meth_QLowEnergyService_writeCharacteristic), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QLowEnergyService_writeCharacteristic)},
    {SIP_MLNAME_CAST(sipName_writeDescriptor), meth_QLowEnergyService_writeDescriptor, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_writeDescriptor)}
};

static sipEnumMemberDef enummembers_QLowEnergyService[] = {
    {sipName_CharacteristicReadError, static_cast<int>( ::QLowEnergyService::CharacteristicReadError), 89},
    {sipName_CharacteristicWriteError, static_cast<int>( ::QLowEnergyService::CharacteristicWriteError), 89},
    {sipName_DescriptorReadError, static_cast<int>( ::QLowEnergyService::DescriptorReadError), 89},
    {sipName_DescriptorWriteError, static_cast<int>( ::QLowEnergyService::DescriptorWriteError), 89},
    {sipName_DiscoveringServices, static_cast<int>( ::QLowEnergyService::DiscoveringServices), 90},
    {sipName_DiscoveryRequired, static_cast<int>( ::QLowEnergyService::DiscoveryRequired), 90},
    {sipName_IncludedService, static_cast<int>( ::QLowEnergyService::IncludedService), 91},
    {sipName_InvalidService, static_cast<int>( ::QLowEnergyService::InvalidService), 90},
    {sipName_LocalService, static_cast<int>( ::QLowEnergyService::LocalService), 90},
    {sipName_NoError, static_cast<int>( ::QLowEnergyService::NoError), 89},
    {sipName_OperationError, static_cast<int>( ::QLowEnergyService::OperationError), 89},
    {sipName_PrimaryService, static_cast<int>( ::QLowEnergyService::PrimaryService), 91},
    {sipName_ServiceDiscovered, static_cast<int>( ::QLowEnergyService::ServiceDiscovered), 90},
    {sipName_UnknownError, static_cast<int>( ::QLowEnergyService::UnknownError), 89},
    {sipName_WriteSigned, static_cast<int>( ::QLowEnergyService::WriteSigned), 93},
    {sipName_WriteWithResponse, static_cast<int>( ::QLowEnergyService::WriteWithResponse), 93},
    {sipName_WriteWithoutResponse, static_cast<int>( ::QLowEnergyService::WriteWithoutResponse), 93},
};


/* Define this type's signals. */
static const pyqt5QtSignal signals_QLowEnergyService[] = {
    {"descriptorRead(QLowEnergyDescriptor,QByteArray)", "\1descriptorRead(self, QLowEnergyDescriptor, Union[QByteArray, bytes, bytearray])", SIP_NULLPTR, SIP_NULLPTR},
    {"characteristicRead(QLowEnergyCharacteristic,QByteArray)", "\1characteristicRead(self, QLowEnergyCharacteristic, Union[QByteArray, bytes, bytearray])", SIP_NULLPTR, SIP_NULLPTR},
    {"descriptorWritten(QLowEnergyDescriptor,QByteArray)", "\1descriptorWritten(self, QLowEnergyDescriptor, Union[QByteArray, bytes, bytearray])", SIP_NULLPTR, SIP_NULLPTR},
    {"characteristicWritten(QLowEnergyCharacteristic,QByteArray)", "\1characteristicWritten(self, QLowEnergyCharacteristic, Union[QByteArray, bytes, bytearray])", SIP_NULLPTR, SIP_NULLPTR},
    {"characteristicChanged(QLowEnergyCharacteristic,QByteArray)", "\1characteristicChanged(self, QLowEnergyCharacteristic, Union[QByteArray, bytes, bytearray])", SIP_NULLPTR, SIP_NULLPTR},
    {"stateChanged(QLowEnergyService::ServiceState)", "\1stateChanged(self, QLowEnergyService.ServiceState)", SIP_NULLPTR, SIP_NULLPTR},
    {"error(QLowEnergyService::ServiceError)", "\1error(self, QLowEnergyService.ServiceError)", &methods_QLowEnergyService[4], SIP_NULLPTR},
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
};


static pyqt5ClassPluginDef plugin_QLowEnergyService = {
    & ::QLowEnergyService::staticMetaObject,
    0,
    signals_QLowEnergyService,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtBluetooth_QLowEnergyService = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QLowEnergyService,
        {SIP_NULLPTR},
        &plugin_QLowEnergyService
    },
    {
        sipNameNr_QLowEnergyService,
        {0, 0, 1},
        14, methods_QLowEnergyService,
        17, enummembers_QLowEnergyService,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    SIP_NULLPTR,
    -1,
    -1,
    supers_QLowEnergyService,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
#if PY_MAJOR_VERSION >= 3
    SIP_NULLPTR,
    SIP_NULLPTR,
#else
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
#endif
    dealloc_QLowEnergyService,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    release_QLowEnergyService,
    cast_QLowEnergyService,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergydescriptordata.sip"
#include <qlowenergydescriptordata.h>
#line 6389 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothuuid.sip"
#include <qbluetoothuuid.h>
#line 6393 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 30 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 6396 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetooth.sip"
#include <qbluetooth.h>
#line 6399 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"


PyDoc_STRVAR(doc_QLowEnergyDescriptorData_value, "value(self) -> QByteArray");

extern "C" {static PyObject *meth_QLowEnergyDescriptorData_value(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyDescriptorData_value(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyDescriptorData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyDescriptorData, &sipCpp))
        {
             ::QByteArray*sipRes;

            sipRes = new  ::QByteArray(sipCpp->value());

            return sipConvertFromNewType(sipRes,sipType_QByteArray,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyDescriptorData, sipName_value, doc_QLowEnergyDescriptorData_value);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyDescriptorData_setValue, "setValue(self, Union[QByteArray, bytes, bytearray])");

extern "C" {static PyObject *meth_QLowEnergyDescriptorData_setValue(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyDescriptorData_setValue(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QByteArray* a0;
        int a0State = 0;
         ::QLowEnergyDescriptorData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QLowEnergyDescriptorData, &sipCpp, sipType_QByteArray, &a0, &a0State))
        {
            sipCpp->setValue(*a0);
            sipReleaseType(const_cast< ::QByteArray *>(a0),sipType_QByteArray,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyDescriptorData, sipName_setValue, doc_QLowEnergyDescriptorData_setValue);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyDescriptorData_uuid, "uuid(self) -> QBluetoothUuid");

extern "C" {static PyObject *meth_QLowEnergyDescriptorData_uuid(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyDescriptorData_uuid(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyDescriptorData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyDescriptorData, &sipCpp))
        {
             ::QBluetoothUuid*sipRes;

            sipRes = new  ::QBluetoothUuid(sipCpp->uuid());

            return sipConvertFromNewType(sipRes,sipType_QBluetoothUuid,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyDescriptorData, sipName_uuid, doc_QLowEnergyDescriptorData_uuid);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyDescriptorData_setUuid, "setUuid(self, QBluetoothUuid)");

extern "C" {static PyObject *meth_QLowEnergyDescriptorData_setUuid(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyDescriptorData_setUuid(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QBluetoothUuid* a0;
         ::QLowEnergyDescriptorData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QLowEnergyDescriptorData, &sipCpp, sipType_QBluetoothUuid, &a0))
        {
            sipCpp->setUuid(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyDescriptorData, sipName_setUuid, doc_QLowEnergyDescriptorData_setUuid);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyDescriptorData_isValid, "isValid(self) -> bool");

extern "C" {static PyObject *meth_QLowEnergyDescriptorData_isValid(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyDescriptorData_isValid(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyDescriptorData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyDescriptorData, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isValid();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyDescriptorData, sipName_isValid, doc_QLowEnergyDescriptorData_isValid);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyDescriptorData_setReadPermissions, "setReadPermissions(self, bool, constraints: Union[QBluetooth.AttAccessConstraints, QBluetooth.AttAccessConstraint] = QBluetooth.AttAccessConstraints())");

extern "C" {static PyObject *meth_QLowEnergyDescriptorData_setReadPermissions(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyDescriptorData_setReadPermissions(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QBluetooth::AttAccessConstraints a1def = QBluetooth::AttAccessConstraints();
         ::QBluetooth::AttAccessConstraints* a1 = &a1def;
        int a1State = 0;
         ::QLowEnergyDescriptorData *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_constraints,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bb|J1", &sipSelf, sipType_QLowEnergyDescriptorData, &sipCpp, &a0, sipType_QBluetooth_AttAccessConstraints, &a1, &a1State))
        {
            sipCpp->setReadPermissions(a0,*a1);
            sipReleaseType(a1,sipType_QBluetooth_AttAccessConstraints,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyDescriptorData, sipName_setReadPermissions, doc_QLowEnergyDescriptorData_setReadPermissions);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyDescriptorData_isReadable, "isReadable(self) -> bool");

extern "C" {static PyObject *meth_QLowEnergyDescriptorData_isReadable(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyDescriptorData_isReadable(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyDescriptorData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyDescriptorData, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isReadable();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyDescriptorData, sipName_isReadable, doc_QLowEnergyDescriptorData_isReadable);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyDescriptorData_readConstraints, "readConstraints(self) -> QBluetooth.AttAccessConstraints");

extern "C" {static PyObject *meth_QLowEnergyDescriptorData_readConstraints(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyDescriptorData_readConstraints(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyDescriptorData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyDescriptorData, &sipCpp))
        {
             ::QBluetooth::AttAccessConstraints*sipRes;

            sipRes = new  ::QBluetooth::AttAccessConstraints(sipCpp->readConstraints());

            return sipConvertFromNewType(sipRes,sipType_QBluetooth_AttAccessConstraints,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyDescriptorData, sipName_readConstraints, doc_QLowEnergyDescriptorData_readConstraints);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyDescriptorData_setWritePermissions, "setWritePermissions(self, bool, constraints: Union[QBluetooth.AttAccessConstraints, QBluetooth.AttAccessConstraint] = QBluetooth.AttAccessConstraints())");

extern "C" {static PyObject *meth_QLowEnergyDescriptorData_setWritePermissions(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyDescriptorData_setWritePermissions(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QBluetooth::AttAccessConstraints a1def = QBluetooth::AttAccessConstraints();
         ::QBluetooth::AttAccessConstraints* a1 = &a1def;
        int a1State = 0;
         ::QLowEnergyDescriptorData *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_constraints,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bb|J1", &sipSelf, sipType_QLowEnergyDescriptorData, &sipCpp, &a0, sipType_QBluetooth_AttAccessConstraints, &a1, &a1State))
        {
            sipCpp->setWritePermissions(a0,*a1);
            sipReleaseType(a1,sipType_QBluetooth_AttAccessConstraints,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyDescriptorData, sipName_setWritePermissions, doc_QLowEnergyDescriptorData_setWritePermissions);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyDescriptorData_isWritable, "isWritable(self) -> bool");

extern "C" {static PyObject *meth_QLowEnergyDescriptorData_isWritable(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyDescriptorData_isWritable(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyDescriptorData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyDescriptorData, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isWritable();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyDescriptorData, sipName_isWritable, doc_QLowEnergyDescriptorData_isWritable);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyDescriptorData_writeConstraints, "writeConstraints(self) -> QBluetooth.AttAccessConstraints");

extern "C" {static PyObject *meth_QLowEnergyDescriptorData_writeConstraints(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyDescriptorData_writeConstraints(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyDescriptorData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyDescriptorData, &sipCpp))
        {
             ::QBluetooth::AttAccessConstraints*sipRes;

            sipRes = new  ::QBluetooth::AttAccessConstraints(sipCpp->writeConstraints());

            return sipConvertFromNewType(sipRes,sipType_QBluetooth_AttAccessConstraints,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyDescriptorData, sipName_writeConstraints, doc_QLowEnergyDescriptorData_writeConstraints);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyDescriptorData_swap, "swap(self, QLowEnergyDescriptorData)");

extern "C" {static PyObject *meth_QLowEnergyDescriptorData_swap(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyDescriptorData_swap(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLowEnergyDescriptorData* a0;
         ::QLowEnergyDescriptorData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QLowEnergyDescriptorData, &sipCpp, sipType_QLowEnergyDescriptorData, &a0))
        {
            sipCpp->swap(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyDescriptorData, sipName_swap, doc_QLowEnergyDescriptorData_swap);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *slot_QLowEnergyDescriptorData___eq__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyDescriptorData___eq__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QLowEnergyDescriptorData *sipCpp = reinterpret_cast< ::QLowEnergyDescriptorData *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyDescriptorData));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyDescriptorData* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QLowEnergyDescriptorData, &a0))
        {
            bool sipRes;

            sipRes = operator==((*sipCpp), *a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth, eq_slot, sipType_QLowEnergyDescriptorData, sipSelf, sipArg);
}


extern "C" {static PyObject *slot_QLowEnergyDescriptorData___ne__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyDescriptorData___ne__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QLowEnergyDescriptorData *sipCpp = reinterpret_cast< ::QLowEnergyDescriptorData *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyDescriptorData));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyDescriptorData* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QLowEnergyDescriptorData, &a0))
        {
            bool sipRes;

            sipRes = operator!=((*sipCpp), *a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth, ne_slot, sipType_QLowEnergyDescriptorData, sipSelf, sipArg);
}


/* Call the instance's destructor. */
extern "C" {static void release_QLowEnergyDescriptorData(void *, int);}
static void release_QLowEnergyDescriptorData(void *sipCppV, int)
{
    delete reinterpret_cast< ::QLowEnergyDescriptorData *>(sipCppV);
}


extern "C" {static void assign_QLowEnergyDescriptorData(void *, SIP_SSIZE_T, void *);}
static void assign_QLowEnergyDescriptorData(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast< ::QLowEnergyDescriptorData *>(sipDst)[sipDstIdx] = *reinterpret_cast< ::QLowEnergyDescriptorData *>(sipSrc);
}


extern "C" {static void *array_QLowEnergyDescriptorData(SIP_SSIZE_T);}
static void *array_QLowEnergyDescriptorData(SIP_SSIZE_T sipNrElem)
{
    return new  ::QLowEnergyDescriptorData[sipNrElem];
}


extern "C" {static void *copy_QLowEnergyDescriptorData(const void *, SIP_SSIZE_T);}
static void *copy_QLowEnergyDescriptorData(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new  ::QLowEnergyDescriptorData(reinterpret_cast<const  ::QLowEnergyDescriptorData *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_QLowEnergyDescriptorData(sipSimpleWrapper *);}
static void dealloc_QLowEnergyDescriptorData(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_QLowEnergyDescriptorData(sipGetAddress(sipSelf), 0);
    }
}


extern "C" {static void *init_type_QLowEnergyDescriptorData(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QLowEnergyDescriptorData(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
     ::QLowEnergyDescriptorData *sipCpp = SIP_NULLPTR;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, ""))
        {
            sipCpp = new  ::QLowEnergyDescriptorData();

            return sipCpp;
        }
    }

    {
        const  ::QBluetoothUuid* a0;
        const  ::QByteArray* a1;
        int a1State = 0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "J9J1", sipType_QBluetoothUuid, &a0, sipType_QByteArray, &a1, &a1State))
        {
            sipCpp = new  ::QLowEnergyDescriptorData(*a0,*a1);
            sipReleaseType(const_cast< ::QByteArray *>(a1),sipType_QByteArray,a1State);

            return sipCpp;
        }
    }

    {
        const  ::QLowEnergyDescriptorData* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "J9", sipType_QLowEnergyDescriptorData, &a0))
        {
            sipCpp = new  ::QLowEnergyDescriptorData(*a0);

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's Python slots. */
static sipPySlotDef slots_QLowEnergyDescriptorData[] = {
    {(void *)slot_QLowEnergyDescriptorData___eq__, eq_slot},
    {(void *)slot_QLowEnergyDescriptorData___ne__, ne_slot},
    {0, (sipPySlotType)0}
};


static PyMethodDef methods_QLowEnergyDescriptorData[] = {
    {SIP_MLNAME_CAST(sipName_isReadable), meth_QLowEnergyDescriptorData_isReadable, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyDescriptorData_isReadable)},
    {SIP_MLNAME_CAST(sipName_isValid), meth_QLowEnergyDescriptorData_isValid, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyDescriptorData_isValid)},
    {SIP_MLNAME_CAST(sipName_isWritable), meth_QLowEnergyDescriptorData_isWritable, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyDescriptorData_isWritable)},
    {SIP_MLNAME_CAST(sipName_readConstraints), meth_QLowEnergyDescriptorData_readConstraints, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyDescriptorData_readConstraints)},
    {SIP_MLNAME_CAST(sipName_setReadPermissions), SIP_MLMETH_CAST(meth_QLowEnergyDescriptorData_setReadPermissions), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QLowEnergyDescriptorData_setReadPermissions)},
    {SIP_MLNAME_CAST(sipName_setUuid), meth_QLowEnergyDescriptorData_setUuid, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyDescriptorData_setUuid)},
    {SIP_MLNAME_CAST(sipName_setValue), meth_QLowEnergyDescriptorData_setValue, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyDescriptorData_setValue)},
    {SIP_MLNAME_CAST(sipName_setWritePermissions), SIP_MLMETH_CAST(meth_QLowEnergyDescriptorData_setWritePermissions), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QLowEnergyDescriptorData_setWritePermissions)},
    {SIP_MLNAME_CAST(sipName_swap), meth_QLowEnergyDescriptorData_swap, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyDescriptorData_swap)},
    {SIP_MLNAME_CAST(sipName_uuid), meth_QLowEnergyDescriptorData_uuid, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyDescriptorData_uuid)},
    {SIP_MLNAME_CAST(sipName_value), meth_QLowEnergyDescriptorData_value, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyDescriptorData_value)},
    {SIP_MLNAME_CAST(sipName_writeConstraints), meth_QLowEnergyDescriptorData_writeConstraints, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyDescriptorData_writeConstraints)}
};

PyDoc_STRVAR(doc_QLowEnergyDescriptorData, "\1QLowEnergyDescriptorData()\n"
"QLowEnergyDescriptorData(QBluetoothUuid, Union[QByteArray, bytes, bytearray])\n"
"QLowEnergyDescriptorData(QLowEnergyDescriptorData)");


static pyqt5ClassPluginDef plugin_QLowEnergyDescriptorData = {
    SIP_NULLPTR,
    0,
    SIP_NULLPTR,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtBluetooth_QLowEnergyDescriptorData = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QLowEnergyDescriptorData,
        {SIP_NULLPTR},
        &plugin_QLowEnergyDescriptorData
    },
    {
        sipNameNr_QLowEnergyDescriptorData,
        {0, 0, 1},
        12, methods_QLowEnergyDescriptorData,
        0, SIP_NULLPTR,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QLowEnergyDescriptorData,
    -1,
    -1,
    SIP_NULLPTR,
    slots_QLowEnergyDescriptorData,
    init_type_QLowEnergyDescriptorData,
    SIP_NULLPTR,
    SIP_NULLPTR,
#if PY_MAJOR_VERSION >= 3
    SIP_NULLPTR,
    SIP_NULLPTR,
#else
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
#endif
    dealloc_QLowEnergyDescriptorData,
    assign_QLowEnergyDescriptorData,
    array_QLowEnergyDescriptorData,
    copy_QLowEnergyDescriptorData,
    release_QLowEnergyDescriptorData,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergydescriptor.sip"
#include <qlowenergydescriptor.h>
#line 6994 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothuuid.sip"
#include <qbluetoothuuid.h>
#line 6998 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 7001 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 30 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 7004 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"


PyDoc_STRVAR(doc_QLowEnergyDescriptor_isValid, "isValid(self) -> bool");

extern "C" {static PyObject *meth_QLowEnergyDescriptor_isValid(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyDescriptor_isValid(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyDescriptor *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyDescriptor, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isValid();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyDescriptor, sipName_isValid, doc_QLowEnergyDescriptor_isValid);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyDescriptor_value, "value(self) -> QByteArray");

extern "C" {static PyObject *meth_QLowEnergyDescriptor_value(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyDescriptor_value(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyDescriptor *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyDescriptor, &sipCpp))
        {
             ::QByteArray*sipRes;

            sipRes = new  ::QByteArray(sipCpp->value());

            return sipConvertFromNewType(sipRes,sipType_QByteArray,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyDescriptor, sipName_value, doc_QLowEnergyDescriptor_value);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyDescriptor_uuid, "uuid(self) -> QBluetoothUuid");

extern "C" {static PyObject *meth_QLowEnergyDescriptor_uuid(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyDescriptor_uuid(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyDescriptor *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyDescriptor, &sipCpp))
        {
             ::QBluetoothUuid*sipRes;

            sipRes = new  ::QBluetoothUuid(sipCpp->uuid());

            return sipConvertFromNewType(sipRes,sipType_QBluetoothUuid,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyDescriptor, sipName_uuid, doc_QLowEnergyDescriptor_uuid);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyDescriptor_handle, "handle(self) -> int");

extern "C" {static PyObject *meth_QLowEnergyDescriptor_handle(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyDescriptor_handle(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyDescriptor *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyDescriptor, &sipCpp))
        {
             ::QLowEnergyHandle sipRes;

            sipRes = sipCpp->handle();

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyDescriptor, sipName_handle, doc_QLowEnergyDescriptor_handle);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyDescriptor_name, "name(self) -> str");

extern "C" {static PyObject *meth_QLowEnergyDescriptor_name(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyDescriptor_name(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyDescriptor *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyDescriptor, &sipCpp))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->name());

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyDescriptor, sipName_name, doc_QLowEnergyDescriptor_name);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyDescriptor_type, "type(self) -> QBluetoothUuid.DescriptorType");

extern "C" {static PyObject *meth_QLowEnergyDescriptor_type(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyDescriptor_type(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyDescriptor *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyDescriptor, &sipCpp))
        {
             ::QBluetoothUuid::DescriptorType sipRes;

            sipRes = sipCpp->type();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QBluetoothUuid_DescriptorType);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyDescriptor, sipName_type, doc_QLowEnergyDescriptor_type);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *slot_QLowEnergyDescriptor___ne__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyDescriptor___ne__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QLowEnergyDescriptor *sipCpp = reinterpret_cast< ::QLowEnergyDescriptor *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyDescriptor));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyDescriptor* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QLowEnergyDescriptor, &a0))
        {
            bool sipRes;

            sipRes = sipCpp-> ::QLowEnergyDescriptor::operator!=(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth, ne_slot, sipType_QLowEnergyDescriptor, sipSelf, sipArg);
}


extern "C" {static PyObject *slot_QLowEnergyDescriptor___eq__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyDescriptor___eq__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QLowEnergyDescriptor *sipCpp = reinterpret_cast< ::QLowEnergyDescriptor *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyDescriptor));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyDescriptor* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QLowEnergyDescriptor, &a0))
        {
            bool sipRes;

            sipRes = sipCpp-> ::QLowEnergyDescriptor::operator==(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth, eq_slot, sipType_QLowEnergyDescriptor, sipSelf, sipArg);
}


/* Call the instance's destructor. */
extern "C" {static void release_QLowEnergyDescriptor(void *, int);}
static void release_QLowEnergyDescriptor(void *sipCppV, int)
{
    delete reinterpret_cast< ::QLowEnergyDescriptor *>(sipCppV);
}


extern "C" {static void assign_QLowEnergyDescriptor(void *, SIP_SSIZE_T, void *);}
static void assign_QLowEnergyDescriptor(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast< ::QLowEnergyDescriptor *>(sipDst)[sipDstIdx] = *reinterpret_cast< ::QLowEnergyDescriptor *>(sipSrc);
}


extern "C" {static void *array_QLowEnergyDescriptor(SIP_SSIZE_T);}
static void *array_QLowEnergyDescriptor(SIP_SSIZE_T sipNrElem)
{
    return new  ::QLowEnergyDescriptor[sipNrElem];
}


extern "C" {static void *copy_QLowEnergyDescriptor(const void *, SIP_SSIZE_T);}
static void *copy_QLowEnergyDescriptor(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new  ::QLowEnergyDescriptor(reinterpret_cast<const  ::QLowEnergyDescriptor *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_QLowEnergyDescriptor(sipSimpleWrapper *);}
static void dealloc_QLowEnergyDescriptor(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_QLowEnergyDescriptor(sipGetAddress(sipSelf), 0);
    }
}


extern "C" {static void *init_type_QLowEnergyDescriptor(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QLowEnergyDescriptor(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
     ::QLowEnergyDescriptor *sipCpp = SIP_NULLPTR;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, ""))
        {
            sipCpp = new  ::QLowEnergyDescriptor();

            return sipCpp;
        }
    }

    {
        const  ::QLowEnergyDescriptor* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "J9", sipType_QLowEnergyDescriptor, &a0))
        {
            sipCpp = new  ::QLowEnergyDescriptor(*a0);

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's Python slots. */
static sipPySlotDef slots_QLowEnergyDescriptor[] = {
    {(void *)slot_QLowEnergyDescriptor___ne__, ne_slot},
    {(void *)slot_QLowEnergyDescriptor___eq__, eq_slot},
    {0, (sipPySlotType)0}
};


static PyMethodDef methods_QLowEnergyDescriptor[] = {
    {SIP_MLNAME_CAST(sipName_handle), meth_QLowEnergyDescriptor_handle, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyDescriptor_handle)},
    {SIP_MLNAME_CAST(sipName_isValid), meth_QLowEnergyDescriptor_isValid, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyDescriptor_isValid)},
    {SIP_MLNAME_CAST(sipName_name), meth_QLowEnergyDescriptor_name, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyDescriptor_name)},
    {SIP_MLNAME_CAST(sipName_type), meth_QLowEnergyDescriptor_type, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyDescriptor_type)},
    {SIP_MLNAME_CAST(sipName_uuid), meth_QLowEnergyDescriptor_uuid, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyDescriptor_uuid)},
    {SIP_MLNAME_CAST(sipName_value), meth_QLowEnergyDescriptor_value, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyDescriptor_value)}
};

PyDoc_STRVAR(doc_QLowEnergyDescriptor, "\1QLowEnergyDescriptor()\n"
"QLowEnergyDescriptor(QLowEnergyDescriptor)");


static pyqt5ClassPluginDef plugin_QLowEnergyDescriptor = {
    SIP_NULLPTR,
    0,
    SIP_NULLPTR,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtBluetooth_QLowEnergyDescriptor = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QLowEnergyDescriptor,
        {SIP_NULLPTR},
        &plugin_QLowEnergyDescriptor
    },
    {
        sipNameNr_QLowEnergyDescriptor,
        {0, 0, 1},
        6, methods_QLowEnergyDescriptor,
        0, SIP_NULLPTR,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QLowEnergyDescriptor,
    -1,
    -1,
    SIP_NULLPTR,
    slots_QLowEnergyDescriptor,
    init_type_QLowEnergyDescriptor,
    SIP_NULLPTR,
    SIP_NULLPTR,
#if PY_MAJOR_VERSION >= 3
    SIP_NULLPTR,
    SIP_NULLPTR,
#else
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
#endif
    dealloc_QLowEnergyDescriptor,
    assign_QLowEnergyDescriptor,
    array_QLowEnergyDescriptor,
    copy_QLowEnergyDescriptor,
    release_QLowEnergyDescriptor,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergycontroller.sip"
#include <qlowenergycontroller.h>
#line 7393 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothdeviceinfo.sip"
#include <qbluetoothdeviceinfo.h>
#line 7397 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 7400 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothaddress.sip"
#include <qbluetoothaddress.h>
#line 7403 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothuuid.sip"
#include <qbluetoothuuid.h>
#line 7406 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergyconnectionparameters.sip"
#include <qlowenergyconnectionparameters.h>
#line 7409 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergyservice.sip"
#include <qlowenergyservice.h>
#line 7412 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergyservicedata.sip"
#include <qlowenergyservicedata.h>
#line 7415 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergyadvertisingparameters.sip"
#include <qlowenergyadvertisingparameters.h>
#line 7418 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergyadvertisingdata.sip"
#include <qlowenergyadvertisingdata.h>
#line 7421 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 7424 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 7427 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 26 "sip/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 7430 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 7433 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 247 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 7436 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 235 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 7439 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 26 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 7442 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 7445 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 30 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 7448 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 7451 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 7454 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 26 "sip/QtCore/qthread.sip"
#include <qthread.h>
#line 7457 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 7460 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 26 "sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 7463 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 26 "sip/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 7466 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 7469 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"


class sipQLowEnergyController : public  ::QLowEnergyController
{
public:
    sipQLowEnergyController(const  ::QBluetoothDeviceInfo&, ::QObject*);
    sipQLowEnergyController(const  ::QBluetoothAddress&, ::QObject*);
    sipQLowEnergyController(const  ::QBluetoothAddress&,const  ::QBluetoothAddress&, ::QObject*);
    virtual ~sipQLowEnergyController();

    int qt_metacall(QMetaObject::Call, int, void **) SIP_OVERRIDE;
    void *qt_metacast(const char *) SIP_OVERRIDE;
    const QMetaObject *metaObject() const SIP_OVERRIDE;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    bool event( ::QEvent*) SIP_OVERRIDE;
    bool eventFilter( ::QObject*, ::QEvent*) SIP_OVERRIDE;
    void timerEvent( ::QTimerEvent*) SIP_OVERRIDE;
    void childEvent( ::QChildEvent*) SIP_OVERRIDE;
    void customEvent( ::QEvent*) SIP_OVERRIDE;
    void connectNotify(const  ::QMetaMethod&) SIP_OVERRIDE;
    void disconnectNotify(const  ::QMetaMethod&) SIP_OVERRIDE;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQLowEnergyController(const sipQLowEnergyController &);
    sipQLowEnergyController &operator = (const sipQLowEnergyController &);

    char sipPyMethods[7];
};

sipQLowEnergyController::sipQLowEnergyController(const  ::QBluetoothDeviceInfo& a0, ::QObject*a1):  ::QLowEnergyController(a0,a1), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQLowEnergyController::sipQLowEnergyController(const  ::QBluetoothAddress& a0, ::QObject*a1):  ::QLowEnergyController(a0,a1), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQLowEnergyController::sipQLowEnergyController(const  ::QBluetoothAddress& a0,const  ::QBluetoothAddress& a1, ::QObject*a2):  ::QLowEnergyController(a0,a1,a2), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQLowEnergyController::~sipQLowEnergyController()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

const QMetaObject *sipQLowEnergyController::metaObject() const
{
    if (sipGetInterpreter())
        return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : sip_QtBluetooth_qt_metaobject(sipPySelf,sipType_QLowEnergyController);

    return  ::QLowEnergyController::metaObject();
}

int sipQLowEnergyController::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id =  ::QLowEnergyController::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtBluetooth_qt_metacall(sipPySelf,sipType_QLowEnergyController,_c,_id,_a);

    return _id;
}

void *sipQLowEnergyController::qt_metacast(const char *_clname)
{
    void *sipCpp;

    return (sip_QtBluetooth_qt_metacast(sipPySelf, sipType_QLowEnergyController, _clname, &sipCpp) ? sipCpp :  ::QLowEnergyController::qt_metacast(_clname));
}

bool sipQLowEnergyController::event( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,SIP_NULLPTR,sipName_event);

    if (!sipMeth)
        return  ::QLowEnergyController::event(a0);

    extern bool sipVH_QtBluetooth_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtBluetooth_5(sipGILState, sipImportedVirtErrorHandlers_QtBluetooth_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQLowEnergyController::eventFilter( ::QObject*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,SIP_NULLPTR,sipName_eventFilter);

    if (!sipMeth)
        return  ::QLowEnergyController::eventFilter(a0,a1);

    extern bool sipVH_QtBluetooth_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QObject*, ::QEvent*);

    return sipVH_QtBluetooth_4(sipGILState, sipImportedVirtErrorHandlers_QtBluetooth_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQLowEnergyController::timerEvent( ::QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,SIP_NULLPTR,sipName_timerEvent);

    if (!sipMeth)
    {
         ::QLowEnergyController::timerEvent(a0);
        return;
    }

    extern void sipVH_QtBluetooth_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTimerEvent*);

    sipVH_QtBluetooth_3(sipGILState, sipImportedVirtErrorHandlers_QtBluetooth_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQLowEnergyController::childEvent( ::QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,SIP_NULLPTR,sipName_childEvent);

    if (!sipMeth)
    {
         ::QLowEnergyController::childEvent(a0);
        return;
    }

    extern void sipVH_QtBluetooth_2(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QChildEvent*);

    sipVH_QtBluetooth_2(sipGILState, sipImportedVirtErrorHandlers_QtBluetooth_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQLowEnergyController::customEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,SIP_NULLPTR,sipName_customEvent);

    if (!sipMeth)
    {
         ::QLowEnergyController::customEvent(a0);
        return;
    }

    extern void sipVH_QtBluetooth_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtBluetooth_1(sipGILState, sipImportedVirtErrorHandlers_QtBluetooth_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQLowEnergyController::connectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,SIP_NULLPTR,sipName_connectNotify);

    if (!sipMeth)
    {
         ::QLowEnergyController::connectNotify(a0);
        return;
    }

    extern void sipVH_QtBluetooth_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtBluetooth_0(sipGILState, sipImportedVirtErrorHandlers_QtBluetooth_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQLowEnergyController::disconnectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,SIP_NULLPTR,sipName_disconnectNotify);

    if (!sipMeth)
    {
         ::QLowEnergyController::disconnectNotify(a0);
        return;
    }

    extern void sipVH_QtBluetooth_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtBluetooth_0(sipGILState, sipImportedVirtErrorHandlers_QtBluetooth_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QLowEnergyController_localAddress, "localAddress(self) -> QBluetoothAddress");

extern "C" {static PyObject *meth_QLowEnergyController_localAddress(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyController_localAddress(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyController *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyController, &sipCpp))
        {
             ::QBluetoothAddress*sipRes;

            sipRes = new  ::QBluetoothAddress(sipCpp->localAddress());

            return sipConvertFromNewType(sipRes,sipType_QBluetoothAddress,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyController, sipName_localAddress, doc_QLowEnergyController_localAddress);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyController_remoteAddress, "remoteAddress(self) -> QBluetoothAddress");

extern "C" {static PyObject *meth_QLowEnergyController_remoteAddress(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyController_remoteAddress(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyController *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyController, &sipCpp))
        {
             ::QBluetoothAddress*sipRes;

            sipRes = new  ::QBluetoothAddress(sipCpp->remoteAddress());

            return sipConvertFromNewType(sipRes,sipType_QBluetoothAddress,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyController, sipName_remoteAddress, doc_QLowEnergyController_remoteAddress);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyController_state, "state(self) -> QLowEnergyController.ControllerState");

extern "C" {static PyObject *meth_QLowEnergyController_state(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyController_state(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyController *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyController, &sipCpp))
        {
             ::QLowEnergyController::ControllerState sipRes;

            sipRes = sipCpp->state();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QLowEnergyController_ControllerState);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyController, sipName_state, doc_QLowEnergyController_state);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyController_remoteAddressType, "remoteAddressType(self) -> QLowEnergyController.RemoteAddressType");

extern "C" {static PyObject *meth_QLowEnergyController_remoteAddressType(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyController_remoteAddressType(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyController *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyController, &sipCpp))
        {
             ::QLowEnergyController::RemoteAddressType sipRes;

            sipRes = sipCpp->remoteAddressType();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QLowEnergyController_RemoteAddressType);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyController, sipName_remoteAddressType, doc_QLowEnergyController_remoteAddressType);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyController_setRemoteAddressType, "setRemoteAddressType(self, QLowEnergyController.RemoteAddressType)");

extern "C" {static PyObject *meth_QLowEnergyController_setRemoteAddressType(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyController_setRemoteAddressType(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLowEnergyController::RemoteAddressType a0;
         ::QLowEnergyController *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QLowEnergyController, &sipCpp, sipType_QLowEnergyController_RemoteAddressType, &a0))
        {
            sipCpp->setRemoteAddressType(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyController, sipName_setRemoteAddressType, doc_QLowEnergyController_setRemoteAddressType);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyController_connectToDevice, "connectToDevice(self)");

extern "C" {static PyObject *meth_QLowEnergyController_connectToDevice(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyController_connectToDevice(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLowEnergyController *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyController, &sipCpp))
        {
            sipCpp->connectToDevice();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyController, sipName_connectToDevice, doc_QLowEnergyController_connectToDevice);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyController_disconnectFromDevice, "disconnectFromDevice(self)");

extern "C" {static PyObject *meth_QLowEnergyController_disconnectFromDevice(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyController_disconnectFromDevice(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLowEnergyController *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyController, &sipCpp))
        {
            sipCpp->disconnectFromDevice();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyController, sipName_disconnectFromDevice, doc_QLowEnergyController_disconnectFromDevice);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyController_discoverServices, "discoverServices(self)");

extern "C" {static PyObject *meth_QLowEnergyController_discoverServices(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyController_discoverServices(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLowEnergyController *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyController, &sipCpp))
        {
            sipCpp->discoverServices();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyController, sipName_discoverServices, doc_QLowEnergyController_discoverServices);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyController_services, "services(self) -> List[QBluetoothUuid]");

extern "C" {static PyObject *meth_QLowEnergyController_services(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyController_services(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyController *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyController, &sipCpp))
        {
            QList< ::QBluetoothUuid>*sipRes;

            sipRes = new QList< ::QBluetoothUuid>(sipCpp->services());

            return sipConvertFromNewType(sipRes,sipType_QList_0100QBluetoothUuid,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyController, sipName_services, doc_QLowEnergyController_services);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyController_createServiceObject, "createServiceObject(self, QBluetoothUuid, parent: QObject = None) -> QLowEnergyService");

extern "C" {static PyObject *meth_QLowEnergyController_createServiceObject(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyController_createServiceObject(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QBluetoothUuid* a0;
         ::QObject* a1 = 0;
        sipWrapper *sipOwner = SIP_NULLPTR;
         ::QLowEnergyController *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_parent,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9|JH", &sipSelf, sipType_QLowEnergyController, &sipCpp, sipType_QBluetoothUuid, &a0, sipType_QObject, &a1, &sipOwner))
        {
             ::QLowEnergyService*sipRes;

            sipRes = sipCpp->createServiceObject(*a0,a1);

            return sipConvertFromNewType(sipRes,sipType_QLowEnergyService,(PyObject *)sipOwner);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyController, sipName_createServiceObject, doc_QLowEnergyController_createServiceObject);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyController_error, "error(self) -> QLowEnergyController.Error");

extern "C" {static PyObject *meth_QLowEnergyController_error(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyController_error(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyController *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyController, &sipCpp))
        {
             ::QLowEnergyController::Error sipRes;

            sipRes = sipCpp->error();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QLowEnergyController_Error);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyController, sipName_error, doc_QLowEnergyController_error);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyController_errorString, "errorString(self) -> str");

extern "C" {static PyObject *meth_QLowEnergyController_errorString(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyController_errorString(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyController *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyController, &sipCpp))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->errorString());

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyController, sipName_errorString, doc_QLowEnergyController_errorString);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyController_remoteName, "remoteName(self) -> str");

extern "C" {static PyObject *meth_QLowEnergyController_remoteName(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyController_remoteName(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyController *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyController, &sipCpp))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->remoteName());

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyController, sipName_remoteName, doc_QLowEnergyController_remoteName);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyController_createCentral, "createCentral(QBluetoothDeviceInfo, parent: QObject = None) -> QLowEnergyController");

extern "C" {static PyObject *meth_QLowEnergyController_createCentral(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyController_createCentral(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QBluetoothDeviceInfo* a0;
         ::QObject* a1 = 0;
        sipWrapper *sipOwner = SIP_NULLPTR;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_parent,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J9|JH", sipType_QBluetoothDeviceInfo, &a0, sipType_QObject, &a1, &sipOwner))
        {
             ::QLowEnergyController*sipRes;

            sipRes =  ::QLowEnergyController::createCentral(*a0,a1);

            return sipConvertFromNewType(sipRes,sipType_QLowEnergyController,(PyObject *)sipOwner);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyController, sipName_createCentral, doc_QLowEnergyController_createCentral);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyController_createPeripheral, "createPeripheral(parent: QObject = None) -> QLowEnergyController");

extern "C" {static PyObject *meth_QLowEnergyController_createPeripheral(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyController_createPeripheral(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QObject* a0 = 0;
        sipWrapper *sipOwner = SIP_NULLPTR;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "|JH", sipType_QObject, &a0, &sipOwner))
        {
             ::QLowEnergyController*sipRes;

            sipRes =  ::QLowEnergyController::createPeripheral(a0);

            return sipConvertFromNewType(sipRes,sipType_QLowEnergyController,(PyObject *)sipOwner);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyController, sipName_createPeripheral, doc_QLowEnergyController_createPeripheral);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyController_startAdvertising, "startAdvertising(self, QLowEnergyAdvertisingParameters, QLowEnergyAdvertisingData, scanResponseData: QLowEnergyAdvertisingData = QLowEnergyAdvertisingData())");

extern "C" {static PyObject *meth_QLowEnergyController_startAdvertising(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyController_startAdvertising(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyAdvertisingParameters* a0;
        const  ::QLowEnergyAdvertisingData* a1;
        const  ::QLowEnergyAdvertisingData& a2def = QLowEnergyAdvertisingData();
        const  ::QLowEnergyAdvertisingData* a2 = &a2def;
         ::QLowEnergyController *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_scanResponseData,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9J9|J9", &sipSelf, sipType_QLowEnergyController, &sipCpp, sipType_QLowEnergyAdvertisingParameters, &a0, sipType_QLowEnergyAdvertisingData, &a1, sipType_QLowEnergyAdvertisingData, &a2))
        {
            sipCpp->startAdvertising(*a0,*a1,*a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyController, sipName_startAdvertising, doc_QLowEnergyController_startAdvertising);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyController_stopAdvertising, "stopAdvertising(self)");

extern "C" {static PyObject *meth_QLowEnergyController_stopAdvertising(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyController_stopAdvertising(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLowEnergyController *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyController, &sipCpp))
        {
            sipCpp->stopAdvertising();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyController, sipName_stopAdvertising, doc_QLowEnergyController_stopAdvertising);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyController_addService, "addService(self, QLowEnergyServiceData, parent: QObject = None) -> QLowEnergyService");

extern "C" {static PyObject *meth_QLowEnergyController_addService(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyController_addService(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyServiceData* a0;
         ::QObject* a1 = 0;
        sipWrapper *sipOwner = SIP_NULLPTR;
         ::QLowEnergyController *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_parent,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9|JH", &sipSelf, sipType_QLowEnergyController, &sipCpp, sipType_QLowEnergyServiceData, &a0, sipType_QObject, &a1, &sipOwner))
        {
             ::QLowEnergyService*sipRes;

            sipRes = sipCpp->addService(*a0,a1);

            return sipConvertFromNewType(sipRes,sipType_QLowEnergyService,(PyObject *)sipOwner);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyController, sipName_addService, doc_QLowEnergyController_addService);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyController_requestConnectionUpdate, "requestConnectionUpdate(self, QLowEnergyConnectionParameters)");

extern "C" {static PyObject *meth_QLowEnergyController_requestConnectionUpdate(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyController_requestConnectionUpdate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyConnectionParameters* a0;
         ::QLowEnergyController *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QLowEnergyController, &sipCpp, sipType_QLowEnergyConnectionParameters, &a0))
        {
            sipCpp->requestConnectionUpdate(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyController, sipName_requestConnectionUpdate, doc_QLowEnergyController_requestConnectionUpdate);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyController_role, "role(self) -> QLowEnergyController.Role");

extern "C" {static PyObject *meth_QLowEnergyController_role(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyController_role(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyController *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyController, &sipCpp))
        {
             ::QLowEnergyController::Role sipRes;

            sipRes = sipCpp->role();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QLowEnergyController_Role);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyController, sipName_role, doc_QLowEnergyController_role);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyController_remoteDeviceUuid, "remoteDeviceUuid(self) -> QBluetoothUuid");

extern "C" {static PyObject *meth_QLowEnergyController_remoteDeviceUuid(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyController_remoteDeviceUuid(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyController *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyController, &sipCpp))
        {
             ::QBluetoothUuid*sipRes;

            sipRes = new  ::QBluetoothUuid(sipCpp->remoteDeviceUuid());

            return sipConvertFromNewType(sipRes,sipType_QBluetoothUuid,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyController, sipName_remoteDeviceUuid, doc_QLowEnergyController_remoteDeviceUuid);

    return SIP_NULLPTR;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QLowEnergyController(void *, const sipTypeDef *);}
static void *cast_QLowEnergyController(void *sipCppV, const sipTypeDef *targetType)
{
     ::QLowEnergyController *sipCpp = reinterpret_cast< ::QLowEnergyController *>(sipCppV);

    if (targetType == sipType_QObject)
        return static_cast< ::QObject *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QLowEnergyController(void *, int);}
static void release_QLowEnergyController(void *sipCppV, int)
{
     ::QLowEnergyController *sipCpp = reinterpret_cast< ::QLowEnergyController *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void dealloc_QLowEnergyController(sipSimpleWrapper *);}
static void dealloc_QLowEnergyController(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQLowEnergyController *>(sipGetAddress(sipSelf))->sipPySelf = SIP_NULLPTR;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QLowEnergyController(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QLowEnergyController(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QLowEnergyController(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQLowEnergyController *sipCpp = SIP_NULLPTR;

    {
        const  ::QBluetoothDeviceInfo* a0;
         ::QObject* a1 = 0;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "J9|JH", sipType_QBluetoothDeviceInfo, &a0, sipType_QObject, &a1, sipOwner))
        {
            sipCpp = new sipQLowEnergyController(*a0,a1);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        const  ::QBluetoothAddress* a0;
         ::QObject* a1 = 0;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "J9|JH", sipType_QBluetoothAddress, &a0, sipType_QObject, &a1, sipOwner))
        {
            sipCpp = new sipQLowEnergyController(*a0,a1);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        const  ::QBluetoothAddress* a0;
        const  ::QBluetoothAddress* a1;
         ::QObject* a2 = 0;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "J9J9|JH", sipType_QBluetoothAddress, &a0, sipType_QBluetoothAddress, &a1, sipType_QObject, &a2, sipOwner))
        {
            sipCpp = new sipQLowEnergyController(*a0,*a1,a2);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QLowEnergyController[] = {{7, 0, 1}};


static PyMethodDef methods_QLowEnergyController[] = {
    {SIP_MLNAME_CAST(sipName_addService), SIP_MLMETH_CAST(meth_QLowEnergyController_addService), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QLowEnergyController_addService)},
    {SIP_MLNAME_CAST(sipName_connectToDevice), meth_QLowEnergyController_connectToDevice, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyController_connectToDevice)},
    {SIP_MLNAME_CAST(sipName_createCentral), SIP_MLMETH_CAST(meth_QLowEnergyController_createCentral), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QLowEnergyController_createCentral)},
    {SIP_MLNAME_CAST(sipName_createPeripheral), SIP_MLMETH_CAST(meth_QLowEnergyController_createPeripheral), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QLowEnergyController_createPeripheral)},
    {SIP_MLNAME_CAST(sipName_createServiceObject), SIP_MLMETH_CAST(meth_QLowEnergyController_createServiceObject), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QLowEnergyController_createServiceObject)},
    {SIP_MLNAME_CAST(sipName_disconnectFromDevice), meth_QLowEnergyController_disconnectFromDevice, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyController_disconnectFromDevice)},
    {SIP_MLNAME_CAST(sipName_discoverServices), meth_QLowEnergyController_discoverServices, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyController_discoverServices)},
    {SIP_MLNAME_CAST(sipName_error), meth_QLowEnergyController_error, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyController_error)},
    {SIP_MLNAME_CAST(sipName_errorString), meth_QLowEnergyController_errorString, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyController_errorString)},
    {SIP_MLNAME_CAST(sipName_localAddress), meth_QLowEnergyController_localAddress, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyController_localAddress)},
    {SIP_MLNAME_CAST(sipName_remoteAddress), meth_QLowEnergyController_remoteAddress, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyController_remoteAddress)},
    {SIP_MLNAME_CAST(sipName_remoteAddressType), meth_QLowEnergyController_remoteAddressType, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyController_remoteAddressType)},
    {SIP_MLNAME_CAST(sipName_remoteDeviceUuid), meth_QLowEnergyController_remoteDeviceUuid, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyController_remoteDeviceUuid)},
    {SIP_MLNAME_CAST(sipName_remoteName), meth_QLowEnergyController_remoteName, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyController_remoteName)},
    {SIP_MLNAME_CAST(sipName_requestConnectionUpdate), meth_QLowEnergyController_requestConnectionUpdate, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyController_requestConnectionUpdate)},
    {SIP_MLNAME_CAST(sipName_role), meth_QLowEnergyController_role, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyController_role)},
    {SIP_MLNAME_CAST(sipName_services), meth_QLowEnergyController_services, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyController_services)},
    {SIP_MLNAME_CAST(sipName_setRemoteAddressType), meth_QLowEnergyController_setRemoteAddressType, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyController_setRemoteAddressType)},
    {SIP_MLNAME_CAST(sipName_startAdvertising), SIP_MLMETH_CAST(meth_QLowEnergyController_startAdvertising), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QLowEnergyController_startAdvertising)},
    {SIP_MLNAME_CAST(sipName_state), meth_QLowEnergyController_state, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyController_state)},
    {SIP_MLNAME_CAST(sipName_stopAdvertising), meth_QLowEnergyController_stopAdvertising, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyController_stopAdvertising)}
};

static sipEnumMemberDef enummembers_QLowEnergyController[] = {
    {sipName_AdvertisingError, static_cast<int>( ::QLowEnergyController::AdvertisingError), 83},
    {sipName_AdvertisingState, static_cast<int>( ::QLowEnergyController::AdvertisingState), 82},
    {sipName_CentralRole, static_cast<int>( ::QLowEnergyController::CentralRole), 85},
    {sipName_ClosingState, static_cast<int>( ::QLowEnergyController::ClosingState), 82},
    {sipName_ConnectedState, static_cast<int>( ::QLowEnergyController::ConnectedState), 82},
    {sipName_ConnectingState, static_cast<int>( ::QLowEnergyController::ConnectingState), 82},
    {sipName_ConnectionError, static_cast<int>( ::QLowEnergyController::ConnectionError), 83},
    {sipName_DiscoveredState, static_cast<int>( ::QLowEnergyController::DiscoveredState), 82},
    {sipName_DiscoveringState, static_cast<int>( ::QLowEnergyController::DiscoveringState), 82},
    {sipName_InvalidBluetoothAdapterError, static_cast<int>( ::QLowEnergyController::InvalidBluetoothAdapterError), 83},
    {sipName_NetworkError, static_cast<int>( ::QLowEnergyController::NetworkError), 83},
    {sipName_NoError, static_cast<int>( ::QLowEnergyController::NoError), 83},
    {sipName_PeripheralRole, static_cast<int>( ::QLowEnergyController::PeripheralRole), 85},
    {sipName_PublicAddress, static_cast<int>( ::QLowEnergyController::PublicAddress), 84},
    {sipName_RandomAddress, static_cast<int>( ::QLowEnergyController::RandomAddress), 84},
    {sipName_RemoteHostClosedError, static_cast<int>( ::QLowEnergyController::RemoteHostClosedError), 83},
    {sipName_UnconnectedState, static_cast<int>( ::QLowEnergyController::UnconnectedState), 82},
    {sipName_UnknownError, static_cast<int>( ::QLowEnergyController::UnknownError), 83},
    {sipName_UnknownRemoteDeviceError, static_cast<int>( ::QLowEnergyController::UnknownRemoteDeviceError), 83},
};

PyDoc_STRVAR(doc_QLowEnergyController, "\1QLowEnergyController(QBluetoothDeviceInfo, parent: QObject = None)\n"
"QLowEnergyController(QBluetoothAddress, parent: QObject = None)\n"
"QLowEnergyController(QBluetoothAddress, QBluetoothAddress, parent: QObject = None)");


/* Define this type's signals. */
static const pyqt5QtSignal signals_QLowEnergyController[] = {
    {"connectionUpdated(QLowEnergyConnectionParameters)", "\1connectionUpdated(self, QLowEnergyConnectionParameters)", SIP_NULLPTR, SIP_NULLPTR},
    {"discoveryFinished()", "\1discoveryFinished(self)", SIP_NULLPTR, SIP_NULLPTR},
    {"serviceDiscovered(QBluetoothUuid)", "\1serviceDiscovered(self, QBluetoothUuid)", SIP_NULLPTR, SIP_NULLPTR},
    {"stateChanged(QLowEnergyController::ControllerState)", "\1stateChanged(self, QLowEnergyController.ControllerState)", SIP_NULLPTR, SIP_NULLPTR},
    {"disconnected()", "\1disconnected(self)", SIP_NULLPTR, SIP_NULLPTR},
    {"connected()", "\1connected(self)", SIP_NULLPTR, SIP_NULLPTR},
    {"error(QLowEnergyController::Error)", "\1error(self, QLowEnergyController.Error)", &methods_QLowEnergyController[7], SIP_NULLPTR},
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
};


static pyqt5ClassPluginDef plugin_QLowEnergyController = {
    & ::QLowEnergyController::staticMetaObject,
    0,
    signals_QLowEnergyController,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtBluetooth_QLowEnergyController = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QLowEnergyController,
        {SIP_NULLPTR},
        &plugin_QLowEnergyController
    },
    {
        sipNameNr_QLowEnergyController,
        {0, 0, 1},
        21, methods_QLowEnergyController,
        19, enummembers_QLowEnergyController,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QLowEnergyController,
    -1,
    -1,
    supers_QLowEnergyController,
    SIP_NULLPTR,
    init_type_QLowEnergyController,
    SIP_NULLPTR,
    SIP_NULLPTR,
#if PY_MAJOR_VERSION >= 3
    SIP_NULLPTR,
    SIP_NULLPTR,
#else
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
#endif
    dealloc_QLowEnergyController,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    release_QLowEnergyController,
    cast_QLowEnergyController,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergyconnectionparameters.sip"
#include <qlowenergyconnectionparameters.h>
#line 8531 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"



PyDoc_STRVAR(doc_QLowEnergyConnectionParameters_setIntervalRange, "setIntervalRange(self, float, float)");

extern "C" {static PyObject *meth_QLowEnergyConnectionParameters_setIntervalRange(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyConnectionParameters_setIntervalRange(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        double a0;
        double a1;
         ::QLowEnergyConnectionParameters *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QLowEnergyConnectionParameters, &sipCpp, &a0, &a1))
        {
            sipCpp->setIntervalRange(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyConnectionParameters, sipName_setIntervalRange, doc_QLowEnergyConnectionParameters_setIntervalRange);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyConnectionParameters_minimumInterval, "minimumInterval(self) -> float");

extern "C" {static PyObject *meth_QLowEnergyConnectionParameters_minimumInterval(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyConnectionParameters_minimumInterval(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyConnectionParameters *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyConnectionParameters, &sipCpp))
        {
            double sipRes;

            sipRes = sipCpp->minimumInterval();

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyConnectionParameters, sipName_minimumInterval, doc_QLowEnergyConnectionParameters_minimumInterval);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyConnectionParameters_maximumInterval, "maximumInterval(self) -> float");

extern "C" {static PyObject *meth_QLowEnergyConnectionParameters_maximumInterval(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyConnectionParameters_maximumInterval(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyConnectionParameters *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyConnectionParameters, &sipCpp))
        {
            double sipRes;

            sipRes = sipCpp->maximumInterval();

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyConnectionParameters, sipName_maximumInterval, doc_QLowEnergyConnectionParameters_maximumInterval);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyConnectionParameters_setLatency, "setLatency(self, int)");

extern "C" {static PyObject *meth_QLowEnergyConnectionParameters_setLatency(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyConnectionParameters_setLatency(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::QLowEnergyConnectionParameters *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QLowEnergyConnectionParameters, &sipCpp, &a0))
        {
            sipCpp->setLatency(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyConnectionParameters, sipName_setLatency, doc_QLowEnergyConnectionParameters_setLatency);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyConnectionParameters_latency, "latency(self) -> int");

extern "C" {static PyObject *meth_QLowEnergyConnectionParameters_latency(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyConnectionParameters_latency(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyConnectionParameters *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyConnectionParameters, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->latency();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyConnectionParameters, sipName_latency, doc_QLowEnergyConnectionParameters_latency);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyConnectionParameters_setSupervisionTimeout, "setSupervisionTimeout(self, int)");

extern "C" {static PyObject *meth_QLowEnergyConnectionParameters_setSupervisionTimeout(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyConnectionParameters_setSupervisionTimeout(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::QLowEnergyConnectionParameters *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QLowEnergyConnectionParameters, &sipCpp, &a0))
        {
            sipCpp->setSupervisionTimeout(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyConnectionParameters, sipName_setSupervisionTimeout, doc_QLowEnergyConnectionParameters_setSupervisionTimeout);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyConnectionParameters_supervisionTimeout, "supervisionTimeout(self) -> int");

extern "C" {static PyObject *meth_QLowEnergyConnectionParameters_supervisionTimeout(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyConnectionParameters_supervisionTimeout(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyConnectionParameters *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyConnectionParameters, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->supervisionTimeout();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyConnectionParameters, sipName_supervisionTimeout, doc_QLowEnergyConnectionParameters_supervisionTimeout);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyConnectionParameters_swap, "swap(self, QLowEnergyConnectionParameters)");

extern "C" {static PyObject *meth_QLowEnergyConnectionParameters_swap(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyConnectionParameters_swap(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLowEnergyConnectionParameters* a0;
         ::QLowEnergyConnectionParameters *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QLowEnergyConnectionParameters, &sipCpp, sipType_QLowEnergyConnectionParameters, &a0))
        {
            sipCpp->swap(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyConnectionParameters, sipName_swap, doc_QLowEnergyConnectionParameters_swap);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *slot_QLowEnergyConnectionParameters___eq__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyConnectionParameters___eq__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QLowEnergyConnectionParameters *sipCpp = reinterpret_cast< ::QLowEnergyConnectionParameters *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyConnectionParameters));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyConnectionParameters* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QLowEnergyConnectionParameters, &a0))
        {
            bool sipRes;

            sipRes = operator==((*sipCpp), *a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth, eq_slot, sipType_QLowEnergyConnectionParameters, sipSelf, sipArg);
}


extern "C" {static PyObject *slot_QLowEnergyConnectionParameters___ne__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyConnectionParameters___ne__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QLowEnergyConnectionParameters *sipCpp = reinterpret_cast< ::QLowEnergyConnectionParameters *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyConnectionParameters));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyConnectionParameters* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QLowEnergyConnectionParameters, &a0))
        {
            bool sipRes;

            sipRes = operator!=((*sipCpp), *a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth, ne_slot, sipType_QLowEnergyConnectionParameters, sipSelf, sipArg);
}


/* Call the instance's destructor. */
extern "C" {static void release_QLowEnergyConnectionParameters(void *, int);}
static void release_QLowEnergyConnectionParameters(void *sipCppV, int)
{
    delete reinterpret_cast< ::QLowEnergyConnectionParameters *>(sipCppV);
}


extern "C" {static void assign_QLowEnergyConnectionParameters(void *, SIP_SSIZE_T, void *);}
static void assign_QLowEnergyConnectionParameters(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast< ::QLowEnergyConnectionParameters *>(sipDst)[sipDstIdx] = *reinterpret_cast< ::QLowEnergyConnectionParameters *>(sipSrc);
}


extern "C" {static void *array_QLowEnergyConnectionParameters(SIP_SSIZE_T);}
static void *array_QLowEnergyConnectionParameters(SIP_SSIZE_T sipNrElem)
{
    return new  ::QLowEnergyConnectionParameters[sipNrElem];
}


extern "C" {static void *copy_QLowEnergyConnectionParameters(const void *, SIP_SSIZE_T);}
static void *copy_QLowEnergyConnectionParameters(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new  ::QLowEnergyConnectionParameters(reinterpret_cast<const  ::QLowEnergyConnectionParameters *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_QLowEnergyConnectionParameters(sipSimpleWrapper *);}
static void dealloc_QLowEnergyConnectionParameters(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_QLowEnergyConnectionParameters(sipGetAddress(sipSelf), 0);
    }
}


extern "C" {static void *init_type_QLowEnergyConnectionParameters(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QLowEnergyConnectionParameters(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
     ::QLowEnergyConnectionParameters *sipCpp = SIP_NULLPTR;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, ""))
        {
            sipCpp = new  ::QLowEnergyConnectionParameters();

            return sipCpp;
        }
    }

    {
        const  ::QLowEnergyConnectionParameters* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "J9", sipType_QLowEnergyConnectionParameters, &a0))
        {
            sipCpp = new  ::QLowEnergyConnectionParameters(*a0);

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's Python slots. */
static sipPySlotDef slots_QLowEnergyConnectionParameters[] = {
    {(void *)slot_QLowEnergyConnectionParameters___eq__, eq_slot},
    {(void *)slot_QLowEnergyConnectionParameters___ne__, ne_slot},
    {0, (sipPySlotType)0}
};


static PyMethodDef methods_QLowEnergyConnectionParameters[] = {
    {SIP_MLNAME_CAST(sipName_latency), meth_QLowEnergyConnectionParameters_latency, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyConnectionParameters_latency)},
    {SIP_MLNAME_CAST(sipName_maximumInterval), meth_QLowEnergyConnectionParameters_maximumInterval, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyConnectionParameters_maximumInterval)},
    {SIP_MLNAME_CAST(sipName_minimumInterval), meth_QLowEnergyConnectionParameters_minimumInterval, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyConnectionParameters_minimumInterval)},
    {SIP_MLNAME_CAST(sipName_setIntervalRange), meth_QLowEnergyConnectionParameters_setIntervalRange, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyConnectionParameters_setIntervalRange)},
    {SIP_MLNAME_CAST(sipName_setLatency), meth_QLowEnergyConnectionParameters_setLatency, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyConnectionParameters_setLatency)},
    {SIP_MLNAME_CAST(sipName_setSupervisionTimeout), meth_QLowEnergyConnectionParameters_setSupervisionTimeout, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyConnectionParameters_setSupervisionTimeout)},
    {SIP_MLNAME_CAST(sipName_supervisionTimeout), meth_QLowEnergyConnectionParameters_supervisionTimeout, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyConnectionParameters_supervisionTimeout)},
    {SIP_MLNAME_CAST(sipName_swap), meth_QLowEnergyConnectionParameters_swap, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyConnectionParameters_swap)}
};

PyDoc_STRVAR(doc_QLowEnergyConnectionParameters, "\1QLowEnergyConnectionParameters()\n"
"QLowEnergyConnectionParameters(QLowEnergyConnectionParameters)");


static pyqt5ClassPluginDef plugin_QLowEnergyConnectionParameters = {
    SIP_NULLPTR,
    0,
    SIP_NULLPTR,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtBluetooth_QLowEnergyConnectionParameters = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QLowEnergyConnectionParameters,
        {SIP_NULLPTR},
        &plugin_QLowEnergyConnectionParameters
    },
    {
        sipNameNr_QLowEnergyConnectionParameters,
        {0, 0, 1},
        8, methods_QLowEnergyConnectionParameters,
        0, SIP_NULLPTR,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QLowEnergyConnectionParameters,
    -1,
    -1,
    SIP_NULLPTR,
    slots_QLowEnergyConnectionParameters,
    init_type_QLowEnergyConnectionParameters,
    SIP_NULLPTR,
    SIP_NULLPTR,
#if PY_MAJOR_VERSION >= 3
    SIP_NULLPTR,
    SIP_NULLPTR,
#else
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
#endif
    dealloc_QLowEnergyConnectionParameters,
    assign_QLowEnergyConnectionParameters,
    array_QLowEnergyConnectionParameters,
    copy_QLowEnergyConnectionParameters,
    release_QLowEnergyConnectionParameters,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergycharacteristicdata.sip"
#include <qlowenergycharacteristicdata.h>
#line 8976 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetooth.sip"
#include <qbluetooth.h>
#line 8980 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergydescriptordata.sip"
#include <qlowenergydescriptordata.h>
#line 8983 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 8986 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergycharacteristic.sip"
#include <qlowenergycharacteristic.h>
#line 8989 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 30 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 8992 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qbluetoothuuid.sip"
#include <qbluetoothuuid.h>
#line 8995 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"


PyDoc_STRVAR(doc_QLowEnergyCharacteristicData_uuid, "uuid(self) -> QBluetoothUuid");

extern "C" {static PyObject *meth_QLowEnergyCharacteristicData_uuid(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristicData_uuid(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyCharacteristicData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyCharacteristicData, &sipCpp))
        {
             ::QBluetoothUuid*sipRes;

            sipRes = new  ::QBluetoothUuid(sipCpp->uuid());

            return sipConvertFromNewType(sipRes,sipType_QBluetoothUuid,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristicData, sipName_uuid, doc_QLowEnergyCharacteristicData_uuid);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristicData_setUuid, "setUuid(self, QBluetoothUuid)");

extern "C" {static PyObject *meth_QLowEnergyCharacteristicData_setUuid(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristicData_setUuid(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QBluetoothUuid* a0;
         ::QLowEnergyCharacteristicData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QLowEnergyCharacteristicData, &sipCpp, sipType_QBluetoothUuid, &a0))
        {
            sipCpp->setUuid(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristicData, sipName_setUuid, doc_QLowEnergyCharacteristicData_setUuid);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristicData_value, "value(self) -> QByteArray");

extern "C" {static PyObject *meth_QLowEnergyCharacteristicData_value(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristicData_value(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyCharacteristicData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyCharacteristicData, &sipCpp))
        {
             ::QByteArray*sipRes;

            sipRes = new  ::QByteArray(sipCpp->value());

            return sipConvertFromNewType(sipRes,sipType_QByteArray,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristicData, sipName_value, doc_QLowEnergyCharacteristicData_value);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristicData_setValue, "setValue(self, Union[QByteArray, bytes, bytearray])");

extern "C" {static PyObject *meth_QLowEnergyCharacteristicData_setValue(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristicData_setValue(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QByteArray* a0;
        int a0State = 0;
         ::QLowEnergyCharacteristicData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QLowEnergyCharacteristicData, &sipCpp, sipType_QByteArray, &a0, &a0State))
        {
            sipCpp->setValue(*a0);
            sipReleaseType(const_cast< ::QByteArray *>(a0),sipType_QByteArray,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristicData, sipName_setValue, doc_QLowEnergyCharacteristicData_setValue);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristicData_properties, "properties(self) -> QLowEnergyCharacteristic.PropertyTypes");

extern "C" {static PyObject *meth_QLowEnergyCharacteristicData_properties(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristicData_properties(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyCharacteristicData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyCharacteristicData, &sipCpp))
        {
             ::QLowEnergyCharacteristic::PropertyTypes*sipRes;

            sipRes = new  ::QLowEnergyCharacteristic::PropertyTypes(sipCpp->properties());

            return sipConvertFromNewType(sipRes,sipType_QLowEnergyCharacteristic_PropertyTypes,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristicData, sipName_properties, doc_QLowEnergyCharacteristicData_properties);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristicData_setProperties, "setProperties(self, Union[QLowEnergyCharacteristic.PropertyTypes, QLowEnergyCharacteristic.PropertyType])");

extern "C" {static PyObject *meth_QLowEnergyCharacteristicData_setProperties(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristicData_setProperties(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLowEnergyCharacteristic::PropertyTypes* a0;
        int a0State = 0;
         ::QLowEnergyCharacteristicData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QLowEnergyCharacteristicData, &sipCpp, sipType_QLowEnergyCharacteristic_PropertyTypes, &a0, &a0State))
        {
            sipCpp->setProperties(*a0);
            sipReleaseType(a0,sipType_QLowEnergyCharacteristic_PropertyTypes,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristicData, sipName_setProperties, doc_QLowEnergyCharacteristicData_setProperties);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristicData_descriptors, "descriptors(self) -> List[QLowEnergyDescriptorData]");

extern "C" {static PyObject *meth_QLowEnergyCharacteristicData_descriptors(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristicData_descriptors(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyCharacteristicData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyCharacteristicData, &sipCpp))
        {
            QList< ::QLowEnergyDescriptorData>*sipRes;

            sipRes = new QList< ::QLowEnergyDescriptorData>(sipCpp->descriptors());

            return sipConvertFromNewType(sipRes,sipType_QList_0100QLowEnergyDescriptorData,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristicData, sipName_descriptors, doc_QLowEnergyCharacteristicData_descriptors);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristicData_setDescriptors, "setDescriptors(self, Iterable[QLowEnergyDescriptorData])");

extern "C" {static PyObject *meth_QLowEnergyCharacteristicData_setDescriptors(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristicData_setDescriptors(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const QList< ::QLowEnergyDescriptorData>* a0;
        int a0State = 0;
         ::QLowEnergyCharacteristicData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QLowEnergyCharacteristicData, &sipCpp, sipType_QList_0100QLowEnergyDescriptorData,&a0, &a0State))
        {
            sipCpp->setDescriptors(*a0);
            sipReleaseType(const_cast<QList< ::QLowEnergyDescriptorData> *>(a0),sipType_QList_0100QLowEnergyDescriptorData,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristicData, sipName_setDescriptors, doc_QLowEnergyCharacteristicData_setDescriptors);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristicData_addDescriptor, "addDescriptor(self, QLowEnergyDescriptorData)");

extern "C" {static PyObject *meth_QLowEnergyCharacteristicData_addDescriptor(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristicData_addDescriptor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyDescriptorData* a0;
         ::QLowEnergyCharacteristicData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QLowEnergyCharacteristicData, &sipCpp, sipType_QLowEnergyDescriptorData, &a0))
        {
            sipCpp->addDescriptor(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristicData, sipName_addDescriptor, doc_QLowEnergyCharacteristicData_addDescriptor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristicData_setReadConstraints, "setReadConstraints(self, Union[QBluetooth.AttAccessConstraints, QBluetooth.AttAccessConstraint])");

extern "C" {static PyObject *meth_QLowEnergyCharacteristicData_setReadConstraints(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristicData_setReadConstraints(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QBluetooth::AttAccessConstraints* a0;
        int a0State = 0;
         ::QLowEnergyCharacteristicData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QLowEnergyCharacteristicData, &sipCpp, sipType_QBluetooth_AttAccessConstraints, &a0, &a0State))
        {
            sipCpp->setReadConstraints(*a0);
            sipReleaseType(a0,sipType_QBluetooth_AttAccessConstraints,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristicData, sipName_setReadConstraints, doc_QLowEnergyCharacteristicData_setReadConstraints);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristicData_readConstraints, "readConstraints(self) -> QBluetooth.AttAccessConstraints");

extern "C" {static PyObject *meth_QLowEnergyCharacteristicData_readConstraints(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristicData_readConstraints(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyCharacteristicData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyCharacteristicData, &sipCpp))
        {
             ::QBluetooth::AttAccessConstraints*sipRes;

            sipRes = new  ::QBluetooth::AttAccessConstraints(sipCpp->readConstraints());

            return sipConvertFromNewType(sipRes,sipType_QBluetooth_AttAccessConstraints,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristicData, sipName_readConstraints, doc_QLowEnergyCharacteristicData_readConstraints);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristicData_setWriteConstraints, "setWriteConstraints(self, Union[QBluetooth.AttAccessConstraints, QBluetooth.AttAccessConstraint])");

extern "C" {static PyObject *meth_QLowEnergyCharacteristicData_setWriteConstraints(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristicData_setWriteConstraints(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QBluetooth::AttAccessConstraints* a0;
        int a0State = 0;
         ::QLowEnergyCharacteristicData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QLowEnergyCharacteristicData, &sipCpp, sipType_QBluetooth_AttAccessConstraints, &a0, &a0State))
        {
            sipCpp->setWriteConstraints(*a0);
            sipReleaseType(a0,sipType_QBluetooth_AttAccessConstraints,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristicData, sipName_setWriteConstraints, doc_QLowEnergyCharacteristicData_setWriteConstraints);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristicData_writeConstraints, "writeConstraints(self) -> QBluetooth.AttAccessConstraints");

extern "C" {static PyObject *meth_QLowEnergyCharacteristicData_writeConstraints(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristicData_writeConstraints(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyCharacteristicData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyCharacteristicData, &sipCpp))
        {
             ::QBluetooth::AttAccessConstraints*sipRes;

            sipRes = new  ::QBluetooth::AttAccessConstraints(sipCpp->writeConstraints());

            return sipConvertFromNewType(sipRes,sipType_QBluetooth_AttAccessConstraints,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristicData, sipName_writeConstraints, doc_QLowEnergyCharacteristicData_writeConstraints);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristicData_setValueLength, "setValueLength(self, int, int)");

extern "C" {static PyObject *meth_QLowEnergyCharacteristicData_setValueLength(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristicData_setValueLength(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        int a1;
         ::QLowEnergyCharacteristicData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QLowEnergyCharacteristicData, &sipCpp, &a0, &a1))
        {
            sipCpp->setValueLength(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristicData, sipName_setValueLength, doc_QLowEnergyCharacteristicData_setValueLength);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristicData_minimumValueLength, "minimumValueLength(self) -> int");

extern "C" {static PyObject *meth_QLowEnergyCharacteristicData_minimumValueLength(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristicData_minimumValueLength(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyCharacteristicData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyCharacteristicData, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->minimumValueLength();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristicData, sipName_minimumValueLength, doc_QLowEnergyCharacteristicData_minimumValueLength);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristicData_maximumValueLength, "maximumValueLength(self) -> int");

extern "C" {static PyObject *meth_QLowEnergyCharacteristicData_maximumValueLength(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristicData_maximumValueLength(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyCharacteristicData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyCharacteristicData, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->maximumValueLength();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristicData, sipName_maximumValueLength, doc_QLowEnergyCharacteristicData_maximumValueLength);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristicData_isValid, "isValid(self) -> bool");

extern "C" {static PyObject *meth_QLowEnergyCharacteristicData_isValid(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristicData_isValid(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyCharacteristicData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyCharacteristicData, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isValid();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristicData, sipName_isValid, doc_QLowEnergyCharacteristicData_isValid);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristicData_swap, "swap(self, QLowEnergyCharacteristicData)");

extern "C" {static PyObject *meth_QLowEnergyCharacteristicData_swap(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristicData_swap(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLowEnergyCharacteristicData* a0;
         ::QLowEnergyCharacteristicData *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QLowEnergyCharacteristicData, &sipCpp, sipType_QLowEnergyCharacteristicData, &a0))
        {
            sipCpp->swap(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristicData, sipName_swap, doc_QLowEnergyCharacteristicData_swap);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *slot_QLowEnergyCharacteristicData___eq__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyCharacteristicData___eq__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QLowEnergyCharacteristicData *sipCpp = reinterpret_cast< ::QLowEnergyCharacteristicData *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyCharacteristicData));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyCharacteristicData* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QLowEnergyCharacteristicData, &a0))
        {
            bool sipRes;

            sipRes = operator==((*sipCpp), *a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth, eq_slot, sipType_QLowEnergyCharacteristicData, sipSelf, sipArg);
}


extern "C" {static PyObject *slot_QLowEnergyCharacteristicData___ne__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyCharacteristicData___ne__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QLowEnergyCharacteristicData *sipCpp = reinterpret_cast< ::QLowEnergyCharacteristicData *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyCharacteristicData));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyCharacteristicData* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QLowEnergyCharacteristicData, &a0))
        {
            bool sipRes;

            sipRes = operator!=((*sipCpp), *a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth, ne_slot, sipType_QLowEnergyCharacteristicData, sipSelf, sipArg);
}


/* Call the instance's destructor. */
extern "C" {static void release_QLowEnergyCharacteristicData(void *, int);}
static void release_QLowEnergyCharacteristicData(void *sipCppV, int)
{
    delete reinterpret_cast< ::QLowEnergyCharacteristicData *>(sipCppV);
}


extern "C" {static void assign_QLowEnergyCharacteristicData(void *, SIP_SSIZE_T, void *);}
static void assign_QLowEnergyCharacteristicData(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast< ::QLowEnergyCharacteristicData *>(sipDst)[sipDstIdx] = *reinterpret_cast< ::QLowEnergyCharacteristicData *>(sipSrc);
}


extern "C" {static void *array_QLowEnergyCharacteristicData(SIP_SSIZE_T);}
static void *array_QLowEnergyCharacteristicData(SIP_SSIZE_T sipNrElem)
{
    return new  ::QLowEnergyCharacteristicData[sipNrElem];
}


extern "C" {static void *copy_QLowEnergyCharacteristicData(const void *, SIP_SSIZE_T);}
static void *copy_QLowEnergyCharacteristicData(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new  ::QLowEnergyCharacteristicData(reinterpret_cast<const  ::QLowEnergyCharacteristicData *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_QLowEnergyCharacteristicData(sipSimpleWrapper *);}
static void dealloc_QLowEnergyCharacteristicData(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_QLowEnergyCharacteristicData(sipGetAddress(sipSelf), 0);
    }
}


extern "C" {static void *init_type_QLowEnergyCharacteristicData(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QLowEnergyCharacteristicData(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
     ::QLowEnergyCharacteristicData *sipCpp = SIP_NULLPTR;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, ""))
        {
            sipCpp = new  ::QLowEnergyCharacteristicData();

            return sipCpp;
        }
    }

    {
        const  ::QLowEnergyCharacteristicData* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "J9", sipType_QLowEnergyCharacteristicData, &a0))
        {
            sipCpp = new  ::QLowEnergyCharacteristicData(*a0);

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's Python slots. */
static sipPySlotDef slots_QLowEnergyCharacteristicData[] = {
    {(void *)slot_QLowEnergyCharacteristicData___eq__, eq_slot},
    {(void *)slot_QLowEnergyCharacteristicData___ne__, ne_slot},
    {0, (sipPySlotType)0}
};


static PyMethodDef methods_QLowEnergyCharacteristicData[] = {
    {SIP_MLNAME_CAST(sipName_addDescriptor), meth_QLowEnergyCharacteristicData_addDescriptor, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristicData_addDescriptor)},
    {SIP_MLNAME_CAST(sipName_descriptors), meth_QLowEnergyCharacteristicData_descriptors, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristicData_descriptors)},
    {SIP_MLNAME_CAST(sipName_isValid), meth_QLowEnergyCharacteristicData_isValid, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristicData_isValid)},
    {SIP_MLNAME_CAST(sipName_maximumValueLength), meth_QLowEnergyCharacteristicData_maximumValueLength, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristicData_maximumValueLength)},
    {SIP_MLNAME_CAST(sipName_minimumValueLength), meth_QLowEnergyCharacteristicData_minimumValueLength, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristicData_minimumValueLength)},
    {SIP_MLNAME_CAST(sipName_properties), meth_QLowEnergyCharacteristicData_properties, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristicData_properties)},
    {SIP_MLNAME_CAST(sipName_readConstraints), meth_QLowEnergyCharacteristicData_readConstraints, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristicData_readConstraints)},
    {SIP_MLNAME_CAST(sipName_setDescriptors), meth_QLowEnergyCharacteristicData_setDescriptors, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristicData_setDescriptors)},
    {SIP_MLNAME_CAST(sipName_setProperties), meth_QLowEnergyCharacteristicData_setProperties, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristicData_setProperties)},
    {SIP_MLNAME_CAST(sipName_setReadConstraints), meth_QLowEnergyCharacteristicData_setReadConstraints, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristicData_setReadConstraints)},
    {SIP_MLNAME_CAST(sipName_setUuid), meth_QLowEnergyCharacteristicData_setUuid, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristicData_setUuid)},
    {SIP_MLNAME_CAST(sipName_setValue), meth_QLowEnergyCharacteristicData_setValue, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristicData_setValue)},
    {SIP_MLNAME_CAST(sipName_setValueLength), meth_QLowEnergyCharacteristicData_setValueLength, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristicData_setValueLength)},
    {SIP_MLNAME_CAST(sipName_setWriteConstraints), meth_QLowEnergyCharacteristicData_setWriteConstraints, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristicData_setWriteConstraints)},
    {SIP_MLNAME_CAST(sipName_swap), meth_QLowEnergyCharacteristicData_swap, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristicData_swap)},
    {SIP_MLNAME_CAST(sipName_uuid), meth_QLowEnergyCharacteristicData_uuid, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristicData_uuid)},
    {SIP_MLNAME_CAST(sipName_value), meth_QLowEnergyCharacteristicData_value, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristicData_value)},
    {SIP_MLNAME_CAST(sipName_writeConstraints), meth_QLowEnergyCharacteristicData_writeConstraints, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristicData_writeConstraints)}
};

PyDoc_STRVAR(doc_QLowEnergyCharacteristicData, "\1QLowEnergyCharacteristicData()\n"
"QLowEnergyCharacteristicData(QLowEnergyCharacteristicData)");


static pyqt5ClassPluginDef plugin_QLowEnergyCharacteristicData = {
    SIP_NULLPTR,
    0,
    SIP_NULLPTR,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtBluetooth_QLowEnergyCharacteristicData = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QLowEnergyCharacteristicData,
        {SIP_NULLPTR},
        &plugin_QLowEnergyCharacteristicData
    },
    {
        sipNameNr_QLowEnergyCharacteristicData,
        {0, 0, 1},
        18, methods_QLowEnergyCharacteristicData,
        0, SIP_NULLPTR,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QLowEnergyCharacteristicData,
    -1,
    -1,
    SIP_NULLPTR,
    slots_QLowEnergyCharacteristicData,
    init_type_QLowEnergyCharacteristicData,
    SIP_NULLPTR,
    SIP_NULLPTR,
#if PY_MAJOR_VERSION >= 3
    SIP_NULLPTR,
    SIP_NULLPTR,
#else
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
#endif
    dealloc_QLowEnergyCharacteristicData,
    assign_QLowEnergyCharacteristicData,
    array_QLowEnergyCharacteristicData,
    copy_QLowEnergyCharacteristicData,
    release_QLowEnergyCharacteristicData,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergycharacteristic.sip"
#include <qlowenergycharacteristic.h>
#line 9739 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

#line 28 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/sip/QtBluetooth/qlowenergycharacteristic.sip"
#include <qlowenergycharacteristic.h>
#line 9743 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"


extern "C" {static long slot_QLowEnergyCharacteristic_PropertyTypes___hash__(PyObject *);}
static long slot_QLowEnergyCharacteristic_PropertyTypes___hash__(PyObject *sipSelf)
{
     ::QLowEnergyCharacteristic::PropertyTypes *sipCpp = reinterpret_cast< ::QLowEnergyCharacteristic::PropertyTypes *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyCharacteristic_PropertyTypes));

    if (!sipCpp)
        return 0L;


    {
        {
            long sipRes = 0;

#line 116 "sip/QtCore/qglobal.sip"
        sipRes = sipCpp->operator QLowEnergyCharacteristic::PropertyTypes::Int();
#line 9761 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

            return sipRes;
        }
    }

    return 0;
}


extern "C" {static int slot_QLowEnergyCharacteristic_PropertyTypes___bool__(PyObject *);}
static int slot_QLowEnergyCharacteristic_PropertyTypes___bool__(PyObject *sipSelf)
{
     ::QLowEnergyCharacteristic::PropertyTypes *sipCpp = reinterpret_cast< ::QLowEnergyCharacteristic::PropertyTypes *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyCharacteristic_PropertyTypes));

    if (!sipCpp)
        return -1;


    {
        {
            int sipRes = 0;

#line 111 "sip/QtCore/qglobal.sip"
        sipRes = (sipCpp->operator QLowEnergyCharacteristic::PropertyTypes::Int() != 0);
#line 9786 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

            return sipRes;
        }
    }

    return 0;
}


extern "C" {static PyObject *slot_QLowEnergyCharacteristic_PropertyTypes___ne__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyCharacteristic_PropertyTypes___ne__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QLowEnergyCharacteristic::PropertyTypes *sipCpp = reinterpret_cast< ::QLowEnergyCharacteristic::PropertyTypes *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyCharacteristic_PropertyTypes));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyCharacteristic::PropertyTypes* a0;
        int a0State = 0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J1", sipType_QLowEnergyCharacteristic_PropertyTypes, &a0, &a0State))
        {
            bool sipRes = 0;

#line 106 "sip/QtCore/qglobal.sip"
        sipRes = (sipCpp->operator QLowEnergyCharacteristic::PropertyTypes::Int() != a0->operator QLowEnergyCharacteristic::PropertyTypes::Int());
#line 9816 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
            sipReleaseType(const_cast< ::QLowEnergyCharacteristic::PropertyTypes *>(a0),sipType_QLowEnergyCharacteristic_PropertyTypes,a0State);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth, ne_slot, sipType_QLowEnergyCharacteristic_PropertyTypes, sipSelf, sipArg);
}


extern "C" {static PyObject *slot_QLowEnergyCharacteristic_PropertyTypes___eq__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyCharacteristic_PropertyTypes___eq__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QLowEnergyCharacteristic::PropertyTypes *sipCpp = reinterpret_cast< ::QLowEnergyCharacteristic::PropertyTypes *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyCharacteristic_PropertyTypes));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLowEnergyCharacteristic::PropertyTypes* a0;
        int a0State = 0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J1", sipType_QLowEnergyCharacteristic_PropertyTypes, &a0, &a0State))
        {
            bool sipRes = 0;

#line 101 "sip/QtCore/qglobal.sip"
        sipRes = (sipCpp->operator QLowEnergyCharacteristic::PropertyTypes::Int() == a0->operator QLowEnergyCharacteristic::PropertyTypes::Int());
#line 9852 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
            sipReleaseType(const_cast< ::QLowEnergyCharacteristic::PropertyTypes *>(a0),sipType_QLowEnergyCharacteristic_PropertyTypes,a0State);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth, eq_slot, sipType_QLowEnergyCharacteristic_PropertyTypes, sipSelf, sipArg);
}


extern "C" {static PyObject *slot_QLowEnergyCharacteristic_PropertyTypes___ixor__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyCharacteristic_PropertyTypes___ixor__(PyObject *sipSelf,PyObject *sipArg)
{
    if (!PyObject_TypeCheck(sipSelf, sipTypeAsPyTypeObject(sipType_QLowEnergyCharacteristic_PropertyTypes)))
    {
        Py_INCREF(Py_NotImplemented);
        return Py_NotImplemented;
    }

     ::QLowEnergyCharacteristic::PropertyTypes *sipCpp = reinterpret_cast< ::QLowEnergyCharacteristic::PropertyTypes *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyCharacteristic_PropertyTypes));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1i", &a0))
        {
#line 95 "sip/QtCore/qglobal.sip"
        *sipCpp = QLowEnergyCharacteristic::PropertyTypes(*sipCpp ^ a0);
#line 9891 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

            Py_INCREF(sipSelf);
            return sipSelf;
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    PyErr_Clear();

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}


extern "C" {static PyObject *slot_QLowEnergyCharacteristic_PropertyTypes___xor__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyCharacteristic_PropertyTypes___xor__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLowEnergyCharacteristic::PropertyTypes* a0;
        int a0State = 0;
        int a1;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "J1i", sipType_QLowEnergyCharacteristic_PropertyTypes, &a0, &a0State, &a1))
        {
             ::QLowEnergyCharacteristic::PropertyTypes*sipRes;

            sipRes = new  ::QLowEnergyCharacteristic::PropertyTypes((*a0 ^ a1));
            sipReleaseType(a0,sipType_QLowEnergyCharacteristic_PropertyTypes,a0State);

            return sipConvertFromNewType(sipRes,sipType_QLowEnergyCharacteristic_PropertyTypes,SIP_NULLPTR);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth, xor_slot, SIP_NULLPTR, sipArg0, sipArg1);
}


extern "C" {static PyObject *slot_QLowEnergyCharacteristic_PropertyTypes___ior__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyCharacteristic_PropertyTypes___ior__(PyObject *sipSelf,PyObject *sipArg)
{
    if (!PyObject_TypeCheck(sipSelf, sipTypeAsPyTypeObject(sipType_QLowEnergyCharacteristic_PropertyTypes)))
    {
        Py_INCREF(Py_NotImplemented);
        return Py_NotImplemented;
    }

     ::QLowEnergyCharacteristic::PropertyTypes *sipCpp = reinterpret_cast< ::QLowEnergyCharacteristic::PropertyTypes *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyCharacteristic_PropertyTypes));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1i", &a0))
        {
#line 89 "sip/QtCore/qglobal.sip"
        *sipCpp = QLowEnergyCharacteristic::PropertyTypes(*sipCpp | a0);
#line 9963 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"

            Py_INCREF(sipSelf);
            return sipSelf;
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    PyErr_Clear();

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}


extern "C" {static PyObject *slot_QLowEnergyCharacteristic_PropertyTypes___or__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyCharacteristic_PropertyTypes___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLowEnergyCharacteristic::PropertyTypes* a0;
        int a0State = 0;
        int a1;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "J1i", sipType_QLowEnergyCharacteristic_PropertyTypes, &a0, &a0State, &a1))
        {
             ::QLowEnergyCharacteristic::PropertyTypes*sipRes;

            sipRes = new  ::QLowEnergyCharacteristic::PropertyTypes((*a0 | a1));
            sipReleaseType(a0,sipType_QLowEnergyCharacteristic_PropertyTypes,a0State);

            return sipConvertFromNewType(sipRes,sipType_QLowEnergyCharacteristic_PropertyTypes,SIP_NULLPTR);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth, or_slot, SIP_NULLPTR, sipArg0, sipArg1);
}


extern "C" {static PyObject *slot_QLowEnergyCharacteristic_PropertyTypes___iand__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyCharacteristic_PropertyTypes___iand__(PyObject *sipSelf,PyObject *sipArg)
{
    if (!PyObject_TypeCheck(sipSelf, sipTypeAsPyTypeObject(sipType_QLowEnergyCharacteristic_PropertyTypes)))
    {
        Py_INCREF(Py_NotImplemented);
        return Py_NotImplemented;
    }

     ::QLowEnergyCharacteristic::PropertyTypes *sipCpp = reinterpret_cast< ::QLowEnergyCharacteristic::PropertyTypes *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyCharacteristic_PropertyTypes));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1i", &a0))
        {
            sipCpp-> ::QLowEnergyCharacteristic::PropertyTypes::operator&=(a0);

            Py_INCREF(sipSelf);
            return sipSelf;
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    PyErr_Clear();

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}


extern "C" {static PyObject *slot_QLowEnergyCharacteristic_PropertyTypes___and__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyCharacteristic_PropertyTypes___and__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLowEnergyCharacteristic::PropertyTypes* a0;
        int a0State = 0;
        int a1;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "J1i", sipType_QLowEnergyCharacteristic_PropertyTypes, &a0, &a0State, &a1))
        {
             ::QLowEnergyCharacteristic::PropertyTypes*sipRes;

            sipRes = new  ::QLowEnergyCharacteristic::PropertyTypes((*a0 & a1));
            sipReleaseType(a0,sipType_QLowEnergyCharacteristic_PropertyTypes,a0State);

            return sipConvertFromNewType(sipRes,sipType_QLowEnergyCharacteristic_PropertyTypes,SIP_NULLPTR);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth, and_slot, SIP_NULLPTR, sipArg0, sipArg1);
}


extern "C" {static PyObject *slot_QLowEnergyCharacteristic_PropertyTypes___invert__(PyObject *);}
static PyObject *slot_QLowEnergyCharacteristic_PropertyTypes___invert__(PyObject *sipSelf)
{
     ::QLowEnergyCharacteristic::PropertyTypes *sipCpp = reinterpret_cast< ::QLowEnergyCharacteristic::PropertyTypes *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyCharacteristic_PropertyTypes));

    if (!sipCpp)
        return SIP_NULLPTR;


    {
        {
             ::QLowEnergyCharacteristic::PropertyTypes*sipRes;

            sipRes = new  ::QLowEnergyCharacteristic::PropertyTypes(~(*sipCpp));

            return sipConvertFromNewType(sipRes,sipType_QLowEnergyCharacteristic_PropertyTypes,SIP_NULLPTR);
        }
    }

    return 0;
}


extern "C" {static PyObject *slot_QLowEnergyCharacteristic_PropertyTypes___int__(PyObject *);}
static PyObject *slot_QLowEnergyCharacteristic_PropertyTypes___int__(PyObject *sipSelf)
{
     ::QLowEnergyCharacteristic::PropertyTypes *sipCpp = reinterpret_cast< ::QLowEnergyCharacteristic::PropertyTypes *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyCharacteristic_PropertyTypes));

    if (!sipCpp)
        return SIP_NULLPTR;


    {
        {
            int sipRes;

            sipRes = *sipCpp;

            return SIPLong_FromLong(sipRes);
        }
    }

    return 0;
}


/* Call the instance's destructor. */
extern "C" {static void release_QLowEnergyCharacteristic_PropertyTypes(void *, int);}
static void release_QLowEnergyCharacteristic_PropertyTypes(void *sipCppV, int)
{
    delete reinterpret_cast< ::QLowEnergyCharacteristic::PropertyTypes *>(sipCppV);
}


extern "C" {static void assign_QLowEnergyCharacteristic_PropertyTypes(void *, SIP_SSIZE_T, void *);}
static void assign_QLowEnergyCharacteristic_PropertyTypes(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast< ::QLowEnergyCharacteristic::PropertyTypes *>(sipDst)[sipDstIdx] = *reinterpret_cast< ::QLowEnergyCharacteristic::PropertyTypes *>(sipSrc);
}


extern "C" {static void *array_QLowEnergyCharacteristic_PropertyTypes(SIP_SSIZE_T);}
static void *array_QLowEnergyCharacteristic_PropertyTypes(SIP_SSIZE_T sipNrElem)
{
    return new  ::QLowEnergyCharacteristic::PropertyTypes[sipNrElem];
}


extern "C" {static void *copy_QLowEnergyCharacteristic_PropertyTypes(const void *, SIP_SSIZE_T);}
static void *copy_QLowEnergyCharacteristic_PropertyTypes(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new  ::QLowEnergyCharacteristic::PropertyTypes(reinterpret_cast<const  ::QLowEnergyCharacteristic::PropertyTypes *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_QLowEnergyCharacteristic_PropertyTypes(sipSimpleWrapper *);}
static void dealloc_QLowEnergyCharacteristic_PropertyTypes(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_QLowEnergyCharacteristic_PropertyTypes(sipGetAddress(sipSelf), 0);
    }
}


extern "C" {static void *init_type_QLowEnergyCharacteristic_PropertyTypes(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QLowEnergyCharacteristic_PropertyTypes(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
     ::QLowEnergyCharacteristic::PropertyTypes *sipCpp = SIP_NULLPTR;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, ""))
        {
            sipCpp = new  ::QLowEnergyCharacteristic::PropertyTypes();

            return sipCpp;
        }
    }

    {
        int a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "i", &a0))
        {
            sipCpp = new  ::QLowEnergyCharacteristic::PropertyTypes(a0);

            return sipCpp;
        }
    }

    {
        const  ::QLowEnergyCharacteristic::PropertyTypes* a0;
        int a0State = 0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "J1", sipType_QLowEnergyCharacteristic_PropertyTypes, &a0, &a0State))
        {
            sipCpp = new  ::QLowEnergyCharacteristic::PropertyTypes(*a0);
            sipReleaseType(const_cast< ::QLowEnergyCharacteristic::PropertyTypes *>(a0),sipType_QLowEnergyCharacteristic_PropertyTypes,a0State);

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


extern "C" {static int convertTo_QLowEnergyCharacteristic_PropertyTypes(PyObject *, void **, int *, PyObject *);}
static int convertTo_QLowEnergyCharacteristic_PropertyTypes(PyObject *sipPy,void **sipCppPtrV,int *sipIsErr,PyObject *sipTransferObj)
{
     ::QLowEnergyCharacteristic::PropertyTypes **sipCppPtr = reinterpret_cast< ::QLowEnergyCharacteristic::PropertyTypes **>(sipCppPtrV);

#line 121 "sip/QtCore/qglobal.sip"
// Allow an instance of the base enum whenever a QLowEnergyCharacteristic::PropertyTypes is expected.

if (sipIsErr == NULL)
    return (PyObject_TypeCheck(sipPy, sipTypeAsPyTypeObject(sipType_QLowEnergyCharacteristic_PropertyType)) ||
            sipCanConvertToType(sipPy, sipType_QLowEnergyCharacteristic_PropertyTypes, SIP_NO_CONVERTORS));

if (PyObject_TypeCheck(sipPy, sipTypeAsPyTypeObject(sipType_QLowEnergyCharacteristic_PropertyType)))
{
    *sipCppPtr = new QLowEnergyCharacteristic::PropertyTypes(int(SIPLong_AsLong(sipPy)));

    return sipGetState(sipTransferObj);
}

*sipCppPtr = reinterpret_cast<QLowEnergyCharacteristic::PropertyTypes *>(sipConvertToType(sipPy, sipType_QLowEnergyCharacteristic_PropertyTypes, sipTransferObj, SIP_NO_CONVERTORS, 0, sipIsErr));

return 0;
#line 10231 "/media/art/data/SourceCode/UBUCON/src/sysroot-android-32/build/PyQt5_gpl-5.12/QtBluetooth/sipQtBluetoothpart0.cpp"
}


/* Define this type's Python slots. */
static sipPySlotDef slots_QLowEnergyCharacteristic_PropertyTypes[] = {
    {(void *)slot_QLowEnergyCharacteristic_PropertyTypes___hash__, hash_slot},
    {(void *)slot_QLowEnergyCharacteristic_PropertyTypes___bool__, bool_slot},
    {(void *)slot_QLowEnergyCharacteristic_PropertyTypes___ne__, ne_slot},
    {(void *)slot_QLowEnergyCharacteristic_PropertyTypes___eq__, eq_slot},
    {(void *)slot_QLowEnergyCharacteristic_PropertyTypes___ixor__, ixor_slot},
    {(void *)slot_QLowEnergyCharacteristic_PropertyTypes___xor__, xor_slot},
    {(void *)slot_QLowEnergyCharacteristic_PropertyTypes___ior__, ior_slot},
    {(void *)slot_QLowEnergyCharacteristic_PropertyTypes___or__, or_slot},
    {(void *)slot_QLowEnergyCharacteristic_PropertyTypes___iand__, iand_slot},
    {(void *)slot_QLowEnergyCharacteristic_PropertyTypes___and__, and_slot},
    {(void *)slot_QLowEnergyCharacteristic_PropertyTypes___invert__, invert_slot},
    {(void *)slot_QLowEnergyCharacteristic_PropertyTypes___int__, int_slot},
    {0, (sipPySlotType)0}
};

PyDoc_STRVAR(doc_QLowEnergyCharacteristic_PropertyTypes, "\1QLowEnergyCharacteristic.PropertyTypes()\n"
"QLowEnergyCharacteristic.PropertyTypes(Union[QLowEnergyCharacteristic.PropertyTypes, QLowEnergyCharacteristic.PropertyType])\n"
"QLowEnergyCharacteristic.PropertyTypes(QLowEnergyCharacteristic.PropertyTypes)");


static pyqt5ClassPluginDef plugin_QLowEnergyCharacteristic_PropertyTypes = {
    SIP_NULLPTR,
    1,
    SIP_NULLPTR,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtBluetooth_QLowEnergyCharacteristic_PropertyTypes = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QLowEnergyCharacteristic__PropertyTypes,
        {SIP_NULLPTR},
        &plugin_QLowEnergyCharacteristic_PropertyTypes
    },
    {
        sipNameNr_PropertyTypes,
        {76, 255, 0},
        0, SIP_NULLPTR,
        0, SIP_NULLPTR,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QLowEnergyCharacteristic_PropertyTypes,
    -1,
    -1,
    SIP_NULLPTR,
    slots_QLowEnergyCharacteristic_PropertyTypes,
    init_type_QLowEnergyCharacteristic_PropertyTypes,
    SIP_NULLPTR,
    SIP_NULLPTR,
#if PY_MAJOR_VERSION >= 3
    SIP_NULLPTR,
    SIP_NULLPTR,
#else
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
#endif
    dealloc_QLowEnergyCharacteristic_PropertyTypes,
    assign_QLowEnergyCharacteristic_PropertyTypes,
    array_QLowEnergyCharacteristic_PropertyTypes,
    copy_QLowEnergyCharacteristic_PropertyTypes,
    release_QLowEnergyCharacteristic_PropertyTypes,
    SIP_NULLPTR,
    convertTo_QLowEnergyCharacteristic_PropertyTypes,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
